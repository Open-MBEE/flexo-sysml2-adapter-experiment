@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/> .
@prefix shacl: <http://www.w3.org/ns/shacl#> .
@prefix flexo-graph: <https://flexo.openmbee.org/rdf/graph/> .
@prefix flexo-shape: <https://flexo.openmbee.org/rdf/shape/> .
@prefix flexo-artifact: <https://flexo.openmbee.org/rdf/artifact/> .
@prefix flexo-index: <https://flexo.openmbee.org/rdf/index/> .
@prefix xmi: <http://www.omg.org/spec/XMI/20131001#> .
@prefix uml: <http://www.omg.org/spec/UML/20161101#> .
@prefix uml-model: <https://www.omg.org/spec/UML/20161101/UML.xmi#> .
@prefix uml-property: <https://www.omg.org/spec/UML/20161101/UML.xmi#property/> .
@prefix uml-element: <https://www.omg.org/spec/UML/20161101/UML.xmi#property/> .
@prefix uml-model-dt: <https://www.omg.org/spec/UML/20161101/UML.xmi#datatype/> .
@prefix uml-primitives: <https://www.omg.org/spec/UML/20161101/PrimitiveTypes.xmi#> .
@prefix element: <https://flexo.openmbee.org/rdf/sysml2/element/> .
@prefix property: <https://flexo.openmbee.org/rdf/sysml2/property/> .
@prefix uml-import: <https://flexo.openmbee.org/rdf/uml-import/> .
@prefix omg-ocl: <http://www.omg.org/spec/OCL> .
@prefix omg-ocl2: <http://www.omg.org/spec/OCL/2.0> .

uml-import:_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.0" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:_0 .

uml-import:_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.1" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Actions .

uml-import:_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.2" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Activities .

uml-import:_packageImport.3 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.3" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Classification .

uml-import:_packageImport.4 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.4" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:CommonBehavior .

uml-import:_packageImport.5 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.5" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:CommonStructure .

uml-import:_packageImport.6 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.6" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Deployments .

uml-import:_packageImport.7 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.7" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:InformationFlows .

uml-import:_packageImport.8 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.8" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Interactions .

uml-import:_packageImport.9 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.9" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Packages .

uml-import:_packageImport.10 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.10" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:SimpleClassifiers .

uml-import:_packageImport.11 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.11" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:StateMachines .

uml-import:_packageImport.12 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.12" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:_packageImport.13 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.13" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:UseCases .

uml-import:_packageImport.14 xmi:type uml:PackageImport ;
	xmi:id "_packageImport.14" ;
	uml-model:packagedElement element:_0 ;
	uml-model:importedPackage element:Values .

element:Activities xmi:type uml:Package ;
	xmi:id "Activities" ;
	uml-model:name "Activities" .

uml-import:Activities-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Activities-_packageImport.0" ;
	uml-model:packagedElement element:Activities ;
	uml-model:importedPackage element:Actions .

uml-import:Activities-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Activities-_packageImport.1" ;
	uml-model:packagedElement element:Activities ;
	uml-model:importedPackage element:Classification .

element:Activity xmi:type uml:Class ;
	xmi:id "Activity" ;
	uml-model:name "Activity" ;
	rdfs:comment "'An Activity is the specification of parameterized Behavior as the coordinated sequencing of subordinate units."@en ;
	uml-model:rule element:Activity-maximum_one_parameter_node, element:Activity-maximum_two_parameter_nodes ;
	rdfs:subClassOf element:Behavior ;
	uml-model:ownedAttribute property:Activity-edge, property:Activity-group, property:Activity-isReadOnly, property:Activity-isSingleExecution, property:Activity-node, property:Activity-partition, property:Activity-structuredNode, property:Activity-variable .

element:Activity-maximum_one_parameter_node rdfs:comment "'A Parameter with direction other than inout must have exactly one ActivityParameterNode in an Activity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Activity-maximum_one_parameter_node-_specification .

element:Activity-maximum_one_parameter_node-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedParameter->forAll(p | \n   p.direction <> ParameterDirectionKind::inout implies node->select(\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p)->size()= 1)"^^<http://www.omg.org/spec/OCL> .

element:Activity-maximum_two_parameter_nodes rdfs:comment "'A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Activity-maximum_two_parameter_nodes-_specification .

element:Activity-maximum_two_parameter_nodes-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedParameter->forAll(p | \np.direction = ParameterDirectionKind::inout implies\nlet associatedNodes : Set(ActivityNode) = node->select(\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p) in \n  associatedNodes->size()=2 and\n  associatedNodes->select(incoming->notEmpty())->size()<=1 and\n  associatedNodes->select(outgoing->notEmpty())->size()<=1\n)"^^<http://www.omg.org/spec/OCL> .

property:Activity-edge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-edge" ;
	rdfs:label "Activity-edge" ;
	uml-model:name "edge" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_edge_activity ;
	rdfs:range element:ActivityEdge ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'ActivityEdges expressing flow between the nodes of the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Activity-group rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-group" ;
	rdfs:label "Activity-group" ;
	uml-model:name "group" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_group_inActivity ;
	rdfs:range element:ActivityGroup ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Top-level ActivityGroups in the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Activity-isReadOnly rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-isReadOnly" ;
	rdfs:label "Activity-isReadOnly" ;
	uml-model:name "isReadOnly" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the Activity, then the model is ill-formed.) "@en ;
	xmi:defaultValue element:Activity-isReadOnly-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Activity-isReadOnly-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Activity-isReadOnly-_defaultValue" .

property:Activity-isSingleExecution rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-isSingleExecution" ;
	rdfs:label "Activity-isSingleExecution" ;
	uml-model:name "isSingleExecution" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, all invocations of the Activity are handled by the same execution."@en ;
	xmi:defaultValue element:Activity-isSingleExecution-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Activity-isSingleExecution-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Activity-isSingleExecution-_defaultValue" .

property:Activity-node rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-node" ;
	rdfs:label "Activity-node" ;
	uml-model:name "node" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_node_activity ;
	rdfs:range element:ActivityNode ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'ActivityNodes coordinated by the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Activity-partition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-partition" ;
	rdfs:label "Activity-partition" ;
	uml-model:name "partition" ;
	uml-model:association uml-element:A_partition_activity ;
	rdfs:range element:ActivityPartition ;
	uml-model:subsettedProperty uml-element:Activity-group ;
	rdfs:comment "'Top-level ActivityPartitions in the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Activity-structuredNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-structuredNode" ;
	rdfs:label "Activity-structuredNode" ;
	uml-model:name "structuredNode" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_structuredNode_activity ;
	rdfs:range element:StructuredActivityNode ;
	uml-model:subsettedProperty uml-element:Activity-group, uml-element:Activity-node ;
	rdfs:comment "'Top-level StructuredActivityNodes in the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Activity-variable rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Activity-variable" ;
	rdfs:label "Activity-variable" ;
	uml-model:name "variable" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_variable_activityScope ;
	rdfs:range element:Variable ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Top-level Variables defined by the Activity."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ActivityEdge xmi:type uml:Class ;
	xmi:id "ActivityEdge" ;
	uml-model:name "ActivityEdge" ;
	rdfs:comment "'An ActivityEdge is an abstract class for directed connections between two ActivityNodes."@en ;
	uml-model:rule element:ActivityEdge-source_and_target ;
	rdfs:subClassOf element:RedefinableElement ;
	uml-model:ownedAttribute property:ActivityEdge-activity, property:ActivityEdge-guard, property:ActivityEdge-inGroup, property:ActivityEdge-inPartition, property:ActivityEdge-inStructuredNode, property:ActivityEdge-interrupts, property:ActivityEdge-redefinedEdge, property:ActivityEdge-source, property:ActivityEdge-target, property:ActivityEdge-weight ;
	uml-model:operation element:ActivityEdge-isConsistentWith .

element:ActivityEdge-source_and_target rdfs:comment "'If an ActivityEdge is directly owned by an Activity, then its source and target must be directly or indirectly contained in the same Activity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityEdge-source_and_target-_specification .

element:ActivityEdge-source_and_target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "activity<>null implies source.containingActivity() = activity and target.containingActivity() = activity"^^<http://www.omg.org/spec/OCL> .

property:ActivityEdge-activity rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-activity" ;
	rdfs:label "ActivityEdge-activity" ;
	uml-model:name "activity" ;
	uml-model:association uml-element:A_edge_activity ;
	rdfs:range element:Activity ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The Activity containing the ActivityEdge, if it is directly owned by an Activity."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-guard rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-guard" ;
	rdfs:label "ActivityEdge-guard" ;
	uml-model:name "guard" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_guard_activityEdge ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A ValueSpecification that is evaluated to determine if a token can traverse the ActivityEdge. If an ActivityEdge has no guard, then there is no restriction on tokens traversing the edge."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-inGroup rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-inGroup" ;
	rdfs:label "ActivityEdge-inGroup" ;
	uml-model:name "inGroup" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_containedEdge_inGroup ;
	rdfs:range element:ActivityGroup ;
	rdfs:comment "'ActivityGroups containing the ActivityEdge."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-inPartition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-inPartition" ;
	rdfs:label "ActivityEdge-inPartition" ;
	uml-model:name "inPartition" ;
	uml-model:association uml-element:A_edge_inPartition ;
	rdfs:range element:ActivityPartition ;
	uml-model:subsettedProperty uml-element:ActivityEdge-inGroup ;
	rdfs:comment "'ActivityPartitions containing the ActivityEdge."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-inStructuredNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-inStructuredNode" ;
	rdfs:label "ActivityEdge-inStructuredNode" ;
	uml-model:name "inStructuredNode" ;
	uml-model:association uml-element:A_edge_inStructuredNode ;
	rdfs:range element:StructuredActivityNode ;
	uml-model:subsettedProperty uml-element:ActivityEdge-inGroup, uml-element:Element-owner ;
	rdfs:comment "'The StructuredActivityNode containing the ActivityEdge, if it is owned by a StructuredActivityNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-interrupts rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-interrupts" ;
	rdfs:label "ActivityEdge-interrupts" ;
	uml-model:name "interrupts" ;
	uml-model:association uml-element:A_interruptingEdge_interrupts ;
	rdfs:range element:InterruptibleActivityRegion ;
	rdfs:comment "'The InterruptibleActivityRegion for which this ActivityEdge is an interruptingEdge."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-redefinedEdge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-redefinedEdge" ;
	rdfs:label "ActivityEdge-redefinedEdge" ;
	uml-model:name "redefinedEdge" ;
	uml-model:association uml-element:A_redefinedEdge_activityEdge ;
	rdfs:range element:ActivityEdge ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'ActivityEdges from a generalization of the Activity containing this ActivityEdge that are redefined by this ActivityEdge."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-source rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-source" ;
	rdfs:label "ActivityEdge-source" ;
	uml-model:name "source" ;
	uml-model:association uml-element:A_outgoing_source_node ;
	rdfs:range element:ActivityNode ;
	rdfs:comment "'The ActivityNode from which tokens are taken when they traverse the ActivityEdge."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-target" ;
	rdfs:label "ActivityEdge-target" ;
	uml-model:name "target" ;
	uml-model:association uml-element:A_incoming_target_node ;
	rdfs:range element:ActivityNode ;
	rdfs:comment "'The ActivityNode to which tokens are put when they traverse the ActivityEdge."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ActivityEdge-weight rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityEdge-weight" ;
	rdfs:label "ActivityEdge-weight" ;
	uml-model:name "weight" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_weight_activityEdge ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The minimum number of tokens that must traverse the ActivityEdge at the same time. If no weight is specified, this is equivalent to specifying a constant value of 1."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ActivityEdge-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	uml-model:rule element:ActivityEdge-isConsistentWith-spec ;
	uml-model:returns element:ActivityEdge-isConsistentWith-result .

element:ActivityEdge-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:ActivityEdge-isConsistentWith-spec-_specification .

element:ActivityEdge-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(ActivityEdge))"^^<http://www.omg.org/spec/OCL> .

element:ActivityEdge-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ActivityEdge-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:ActivityFinalNode xmi:type uml:Class ;
	xmi:id "ActivityFinalNode" ;
	uml-model:name "ActivityFinalNode" ;
	rdfs:comment "'An ActivityFinalNode is a FinalNode that terminates the execution of its owning Activity or StructuredActivityNode."@en ;
	rdfs:subClassOf element:FinalNode .

element:ActivityGroup xmi:type uml:Class ;
	xmi:id "ActivityGroup" ;
	uml-model:name "ActivityGroup" ;
	rdfs:comment "'ActivityGroup is an abstract class for defining sets of ActivityNodes and ActivityEdges in an Activity."@en ;
	uml-model:rule element:ActivityGroup-nodes_and_edges, element:ActivityGroup-not_contained ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:ActivityGroup-containedEdge, property:ActivityGroup-containedNode, property:ActivityGroup-inActivity, property:ActivityGroup-subgroup, property:ActivityGroup-superGroup ;
	uml-model:operation element:ActivityGroup-containingActivity .

element:ActivityGroup-nodes_and_edges rdfs:comment "'All containedNodes and containeEdges of an ActivityGroup must be in the same Activity as the group."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityGroup-nodes_and_edges-_specification .

element:ActivityGroup-nodes_and_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "containedNode->forAll(activity = self.containingActivity()) and \ncontainedEdge->forAll(activity = self.containingActivity())"^^<http://www.omg.org/spec/OCL> .

element:ActivityGroup-not_contained rdfs:comment "'No containedNode or containedEdge of an ActivityGroup may be contained by its subgroups or its superGroups, transitively."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityGroup-not_contained-_specification .

element:ActivityGroup-not_contained-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "subgroup->closure(subgroup).containedNode->excludesAll(containedNode) and\nsuperGroup->closure(superGroup).containedNode->excludesAll(containedNode) and \nsubgroup->closure(subgroup).containedEdge->excludesAll(containedEdge) and \nsuperGroup->closure(superGroup).containedEdge->excludesAll(containedEdge)"^^<http://www.omg.org/spec/OCL> .

property:ActivityGroup-containedEdge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityGroup-containedEdge" ;
	rdfs:label "ActivityGroup-containedEdge" ;
	uml-model:name "containedEdge" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_containedEdge_inGroup ;
	rdfs:range element:ActivityEdge ;
	rdfs:comment "'ActivityEdges immediately contained in the ActivityGroup."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityGroup-containedNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityGroup-containedNode" ;
	rdfs:label "ActivityGroup-containedNode" ;
	uml-model:name "containedNode" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_containedNode_inGroup ;
	rdfs:range element:ActivityNode ;
	rdfs:comment "'ActivityNodes immediately contained in the ActivityGroup."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityGroup-inActivity rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityGroup-inActivity" ;
	rdfs:label "ActivityGroup-inActivity" ;
	uml-model:name "inActivity" ;
	uml-model:association uml-element:A_group_inActivity ;
	rdfs:range element:Activity ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The Activity containing the ActivityGroup, if it is directly owned by an Activity."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityGroup-subgroup rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityGroup-subgroup" ;
	rdfs:label "ActivityGroup-subgroup" ;
	uml-model:name "subgroup" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_subgroup_superGroup ;
	rdfs:range element:ActivityGroup ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Other ActivityGroups immediately contained in this ActivityGroup."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityGroup-superGroup rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityGroup-superGroup" ;
	rdfs:label "ActivityGroup-superGroup" ;
	uml-model:name "superGroup" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_subgroup_superGroup ;
	rdfs:range element:ActivityGroup ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The ActivityGroup immediately containing this ActivityGroup, if it is directly owned by another ActivityGroup."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ActivityGroup-containingActivity rdfs:comment "'The Activity that directly or indirectly contains this ActivityGroup."@en ;
	uml-model:rule element:ActivityGroup-containingActivity-spec ;
	uml-model:returns element:ActivityGroup-containingActivity-result .

element:ActivityGroup-containingActivity-spec rdf:type uml:Constraint ;
	uml-model:specification element:ActivityGroup-containingActivity-spec-_specification .

element:ActivityGroup-containingActivity-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if superGroup<>null then superGroup.containingActivity()\nelse inActivity\nendif)"^^<http://www.omg.org/spec/OCL> .

element:ActivityGroup-containingActivity-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Activity .

element:ActivityNode xmi:type uml:Class ;
	xmi:id "ActivityNode" ;
	uml-model:name "ActivityNode" ;
	rdfs:comment "'ActivityNode is an abstract class for points in the flow of an Activity connected by ActivityEdges."@en ;
	rdfs:subClassOf element:RedefinableElement ;
	uml-model:ownedAttribute property:ActivityNode-activity, property:ActivityNode-inGroup, property:ActivityNode-inInterruptibleRegion, property:ActivityNode-inPartition, property:ActivityNode-inStructuredNode, property:ActivityNode-incoming, property:ActivityNode-outgoing, property:ActivityNode-redefinedNode ;
	uml-model:operation element:ActivityNode-containingActivity, element:ActivityNode-isConsistentWith .

property:ActivityNode-activity rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-activity" ;
	rdfs:label "ActivityNode-activity" ;
	uml-model:name "activity" ;
	uml-model:association uml-element:A_node_activity ;
	rdfs:range element:Activity ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The Activity containing the ActivityNode, if it is directly owned by an Activity."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityNode-inGroup rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-inGroup" ;
	rdfs:label "ActivityNode-inGroup" ;
	uml-model:name "inGroup" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_containedNode_inGroup ;
	rdfs:range element:ActivityGroup ;
	rdfs:comment "'ActivityGroups containing the ActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityNode-inInterruptibleRegion rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-inInterruptibleRegion" ;
	rdfs:label "ActivityNode-inInterruptibleRegion" ;
	uml-model:name "inInterruptibleRegion" ;
	uml-model:association uml-element:A_inInterruptibleRegion_node ;
	rdfs:range element:InterruptibleActivityRegion ;
	uml-model:subsettedProperty uml-element:ActivityNode-inGroup ;
	rdfs:comment "'InterruptibleActivityRegions containing the ActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityNode-inPartition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-inPartition" ;
	rdfs:label "ActivityNode-inPartition" ;
	uml-model:name "inPartition" ;
	uml-model:association uml-element:A_inPartition_node ;
	rdfs:range element:ActivityPartition ;
	uml-model:subsettedProperty uml-element:ActivityNode-inGroup ;
	rdfs:comment "'ActivityPartitions containing the ActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityNode-inStructuredNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-inStructuredNode" ;
	rdfs:label "ActivityNode-inStructuredNode" ;
	uml-model:name "inStructuredNode" ;
	uml-model:association uml-element:A_node_inStructuredNode ;
	rdfs:range element:StructuredActivityNode ;
	uml-model:subsettedProperty uml-element:ActivityNode-inGroup, uml-element:Element-owner ;
	rdfs:comment "'The StructuredActivityNode containing the ActvityNode, if it is directly owned by a StructuredActivityNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityNode-incoming rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-incoming" ;
	rdfs:label "ActivityNode-incoming" ;
	uml-model:name "incoming" ;
	uml-model:association uml-element:A_incoming_target_node ;
	rdfs:range element:ActivityEdge ;
	rdfs:comment "'ActivityEdges that have the ActivityNode as their target."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityNode-outgoing rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-outgoing" ;
	rdfs:label "ActivityNode-outgoing" ;
	uml-model:name "outgoing" ;
	uml-model:association uml-element:A_outgoing_source_node ;
	rdfs:range element:ActivityEdge ;
	rdfs:comment "'ActivityEdges that have the ActivityNode as their source."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityNode-redefinedNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityNode-redefinedNode" ;
	rdfs:label "ActivityNode-redefinedNode" ;
	uml-model:name "redefinedNode" ;
	uml-model:association uml-element:A_redefinedNode_activityNode ;
	rdfs:range element:ActivityNode ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'ActivityNodes from a generalization of the Activity containining this ActivityNode that are redefined by this ActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ActivityNode-containingActivity rdfs:comment "'The Activity that directly or indirectly contains this ActivityNode."@en ;
	uml-model:rule element:ActivityNode-containingActivity-spec ;
	uml-model:returns element:ActivityNode-containingActivity-result .

element:ActivityNode-containingActivity-spec rdf:type uml:Constraint ;
	uml-model:specification element:ActivityNode-containingActivity-spec-_specification .

element:ActivityNode-containingActivity-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if inStructuredNode<>null then inStructuredNode.containingActivity()\nelse activity\nendif)"^^<http://www.omg.org/spec/OCL> .

element:ActivityNode-containingActivity-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Activity .

element:ActivityNode-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	uml-model:rule element:ActivityNode-isConsistentWith-spec ;
	uml-model:returns element:ActivityNode-isConsistentWith-result .

element:ActivityNode-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:ActivityNode-isConsistentWith-spec-_specification .

element:ActivityNode-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(ActivityNode))"^^<http://www.omg.org/spec/OCL> .

element:ActivityNode-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ActivityNode-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:ActivityParameterNode xmi:type uml:Class ;
	xmi:id "ActivityParameterNode" ;
	uml-model:name "ActivityParameterNode" ;
	rdfs:comment "'An ActivityParameterNode is an ObjectNode for accepting values from the input Parameters or providing values to the output Parameters of an Activity."@en ;
	uml-model:rule element:ActivityParameterNode-no_outgoing_edges, element:ActivityParameterNode-has_parameters, element:ActivityParameterNode-same_type, element:ActivityParameterNode-no_incoming_edges, element:ActivityParameterNode-no_edges ;
	rdfs:subClassOf element:ObjectNode ;
	uml-model:ownedAttribute property:ActivityParameterNode-parameter .

element:ActivityParameterNode-no_outgoing_edges rdfs:comment "'An ActivityParameterNode with no outgoing ActivityEdges and one or more incoming ActivityEdges must have a parameter with direction out, inout, or return."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityParameterNode-no_outgoing_edges-_specification .

element:ActivityParameterNode-no_outgoing_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(incoming->notEmpty() and outgoing->isEmpty()) implies \n   (parameter.direction = ParameterDirectionKind::out or \n    parameter.direction = ParameterDirectionKind::inout or \n    parameter.direction = ParameterDirectionKind::return)"^^<http://www.omg.org/spec/OCL> .

element:ActivityParameterNode-has_parameters rdfs:comment "'The parameter of an ActivityParameterNode must be from the containing Activity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityParameterNode-has_parameters-_specification .

element:ActivityParameterNode-has_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "activity.ownedParameter->includes(parameter)"^^<http://www.omg.org/spec/OCL> .

element:ActivityParameterNode-same_type rdfs:comment "'The type of an ActivityParameterNode is the same as the type of its parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityParameterNode-same_type-_specification .

element:ActivityParameterNode-same_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "type = parameter.type"^^<http://www.omg.org/spec/OCL> .

element:ActivityParameterNode-no_incoming_edges rdfs:comment "'An ActivityParameterNode with no incoming ActivityEdges and one or more outgoing ActivityEdges must have a parameter with direction in or inout."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityParameterNode-no_incoming_edges-_specification .

element:ActivityParameterNode-no_incoming_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(outgoing->notEmpty() and incoming->isEmpty()) implies \n   (parameter.direction = ParameterDirectionKind::_'in' or \n    parameter.direction = ParameterDirectionKind::inout)"^^<http://www.omg.org/spec/OCL> .

element:ActivityParameterNode-no_edges rdfs:comment "'An ActivityParameterNode may have all incoming ActivityEdges or all outgoing ActivityEdges, but it must not have both incoming and outgoing ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityParameterNode-no_edges-_specification .

element:ActivityParameterNode-no_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->isEmpty() or outgoing->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:ActivityParameterNode-parameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityParameterNode-parameter" ;
	rdfs:label "ActivityParameterNode-parameter" ;
	uml-model:name "parameter" ;
	uml-model:association uml-element:A_parameter_activityParameterNode ;
	rdfs:range element:Parameter ;
	rdfs:comment "'The Parameter for which the ActivityParameterNode will be accepting or providing values."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ActivityPartition xmi:type uml:Class ;
	xmi:id "ActivityPartition" ;
	uml-model:name "ActivityPartition" ;
	rdfs:comment "'An ActivityPartition is a kind of ActivityGroup for identifying ActivityNodes that have some characteristic in common."@en ;
	uml-model:rule element:ActivityPartition-represents_classifier, element:ActivityPartition-represents_property_and_is_contained, element:ActivityPartition-represents_property, element:ActivityPartition-dimension_not_contained ;
	rdfs:subClassOf element:ActivityGroup ;
	uml-model:ownedAttribute property:ActivityPartition-edge, property:ActivityPartition-isDimension, property:ActivityPartition-isExternal, property:ActivityPartition-node, property:ActivityPartition-represents, property:ActivityPartition-subpartition, property:ActivityPartition-superPartition .

element:ActivityPartition-represents_classifier rdfs:comment "'If a non-external ActivityPartition represents a Classifier and has a superPartition, then the superPartition must represent a Classifier, and the Classifier of the subpartition must be nested (nestedClassifier or ownedBehavior) in the Classifier represented by the superPartition, or be at the contained end of a composition Association with the Classifier represented by the superPartition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityPartition-represents_classifier-_specification .

element:ActivityPartition-represents_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(not isExternal and represents.oclIsKindOf(Classifier) and superPartition->notEmpty()) implies\n(\n   let representedClassifier : Classifier = represents.oclAsType(Classifier) in\n     superPartition.represents.oclIsKindOf(Classifier) and\n      let representedSuperClassifier : Classifier = superPartition.represents.oclAsType(Classifier) in\n       (representedSuperClassifier.oclIsKindOf(BehavioredClassifier) and representedClassifier.oclIsKindOf(Behavior) and \n        representedSuperClassifier.oclAsType(BehavioredClassifier).ownedBehavior->includes(representedClassifier.oclAsType(Behavior))) \n       or\n       (representedSuperClassifier.oclIsKindOf(Class) and  representedSuperClassifier.oclAsType(Class).nestedClassifier->includes(representedClassifier))\n       or\n       (Association.allInstances()->exists(a | a.memberEnd->exists(end1 | end1.isComposite and end1.type = representedClassifier and \n                                                                      a.memberEnd->exists(end2 | end1<>end2 and end2.type = representedSuperClassifier))))\n)"^^<http://www.omg.org/spec/OCL> .

element:ActivityPartition-represents_property_and_is_contained rdfs:comment "'If an ActivityPartition represents a Property and has a superPartition, then the Property must be of a Classifier represented by the superPartition, or of a Classifier that is the type of a Property represented by the superPartition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityPartition-represents_property_and_is_contained-_specification .

element:ActivityPartition-represents_property_and_is_contained-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(represents.oclIsKindOf(Property) and superPartition->notEmpty()) implies\n(\n  (superPartition.represents.oclIsKindOf(Classifier) and represents.owner = superPartition.represents) or \n  (superPartition.represents.oclIsKindOf(Property) and represents.owner = superPartition.represents.oclAsType(Property).type)\n)"^^<http://www.omg.org/spec/OCL> .

element:ActivityPartition-represents_property rdfs:comment "'If an ActivityPartition represents a Property and has a superPartition representing a Classifier, then all the other non-external subpartitions of the superPartition must represent Properties directly owned by the same Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityPartition-represents_property-_specification .

element:ActivityPartition-represents_property-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(represents.oclIsKindOf(Property) and superPartition->notEmpty() and superPartition.represents.oclIsKindOf(Classifier)) implies\n(\n  let representedClassifier : Classifier = superPartition.represents.oclAsType(Classifier)\n  in\n    superPartition.subpartition->reject(isExternal)->forAll(p | \n       p.represents.oclIsKindOf(Property) and p.owner=representedClassifier)\n)"^^<http://www.omg.org/spec/OCL> .

element:ActivityPartition-dimension_not_contained rdfs:comment "'An ActvivityPartition with isDimension = true may not be contained by another ActivityPartition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActivityPartition-dimension_not_contained-_specification .

element:ActivityPartition-dimension_not_contained-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isDimension implies superPartition->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:ActivityPartition-edge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-edge" ;
	rdfs:label "ActivityPartition-edge" ;
	uml-model:name "edge" ;
	uml-model:association uml-element:A_edge_inPartition ;
	rdfs:range element:ActivityEdge ;
	uml-model:subsettedProperty uml-element:ActivityGroup-containedEdge ;
	rdfs:comment "'ActivityEdges immediately contained in the ActivityPartition."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityPartition-isDimension rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-isDimension" ;
	rdfs:label "ActivityPartition-isDimension" ;
	uml-model:name "isDimension" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the ActivityPartition groups other ActivityPartitions along a dimension."@en ;
	xmi:defaultValue element:ActivityPartition-isDimension-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ActivityPartition-isDimension-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ActivityPartition-isDimension-_defaultValue" .

property:ActivityPartition-isExternal rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-isExternal" ;
	rdfs:label "ActivityPartition-isExternal" ;
	uml-model:name "isExternal" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the ActivityPartition represents an entity to which the partitioning structure does not apply."@en ;
	xmi:defaultValue element:ActivityPartition-isExternal-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ActivityPartition-isExternal-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ActivityPartition-isExternal-_defaultValue" .

property:ActivityPartition-node rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-node" ;
	rdfs:label "ActivityPartition-node" ;
	uml-model:name "node" ;
	uml-model:association uml-element:A_inPartition_node ;
	rdfs:range element:ActivityNode ;
	uml-model:subsettedProperty uml-element:ActivityGroup-containedNode ;
	rdfs:comment "'ActivityNodes immediately contained in the ActivityPartition."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityPartition-represents rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-represents" ;
	rdfs:label "ActivityPartition-represents" ;
	uml-model:name "represents" ;
	uml-model:association uml-element:A_represents_activityPartition ;
	rdfs:range element:Element ;
	rdfs:comment "'An Element represented by the functionality modeled within the ActivityPartition."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ActivityPartition-subpartition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-subpartition" ;
	rdfs:label "ActivityPartition-subpartition" ;
	uml-model:name "subpartition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_subpartition_superPartition ;
	rdfs:range element:ActivityPartition ;
	uml-model:subsettedProperty uml-element:ActivityGroup-subgroup ;
	rdfs:comment "'Other ActivityPartitions immediately contained in this ActivityPartition (as its subgroups)."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ActivityPartition-superPartition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActivityPartition-superPartition" ;
	rdfs:label "ActivityPartition-superPartition" ;
	uml-model:name "superPartition" ;
	uml-model:association uml-element:A_subpartition_superPartition ;
	rdfs:range element:ActivityPartition ;
	uml-model:subsettedProperty uml-element:ActivityGroup-superGroup ;
	rdfs:comment "'Other ActivityPartitions immediately containing this ActivityPartition (as its superGroups)."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:CentralBufferNode xmi:type uml:Class ;
	xmi:id "CentralBufferNode" ;
	uml-model:name "CentralBufferNode" ;
	rdfs:comment "'A CentralBufferNode is an ObjectNode for managing flows from multiple sources and targets."@en ;
	rdfs:subClassOf element:ObjectNode .

element:ControlFlow xmi:type uml:Class ;
	xmi:id "ControlFlow" ;
	uml-model:name "ControlFlow" ;
	rdfs:comment "'A ControlFlow is an ActivityEdge traversed by control tokens or object tokens of control type, which are use to control the execution of ExecutableNodes."@en ;
	uml-model:rule element:ControlFlow-object_nodes ;
	rdfs:subClassOf element:ActivityEdge .

element:ControlFlow-object_nodes rdfs:comment "'ControlFlows may not have ObjectNodes at either end, except for ObjectNodes with control type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ControlFlow-object_nodes-_specification .

element:ControlFlow-object_nodes-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(source.oclIsKindOf(ObjectNode) implies source.oclAsType(ObjectNode).isControlType) and \n(target.oclIsKindOf(ObjectNode) implies target.oclAsType(ObjectNode).isControlType)"^^<http://www.omg.org/spec/OCL> .

element:ControlNode xmi:type uml:Class ;
	xmi:id "ControlNode" ;
	uml-model:name "ControlNode" ;
	rdfs:comment "'A ControlNode is an abstract ActivityNode that coordinates flows in an Activity."@en ;
	rdfs:subClassOf element:ActivityNode .

element:DataStoreNode xmi:type uml:Class ;
	xmi:id "DataStoreNode" ;
	uml-model:name "DataStoreNode" ;
	rdfs:comment "'A DataStoreNode is a CentralBufferNode for persistent data."@en ;
	rdfs:subClassOf element:CentralBufferNode .

element:DecisionNode xmi:type uml:Class ;
	xmi:id "DecisionNode" ;
	uml-model:name "DecisionNode" ;
	rdfs:comment "'A DecisionNode is a ControlNode that chooses between outgoing ActivityEdges for the routing of tokens."@en ;
	uml-model:rule element:DecisionNode-zero_input_parameters, element:DecisionNode-edges, element:DecisionNode-decision_input_flow_incoming, element:DecisionNode-two_input_parameters, element:DecisionNode-incoming_outgoing_edges, element:DecisionNode-incoming_control_one_input_parameter, element:DecisionNode-parameters, element:DecisionNode-incoming_object_one_input_parameter ;
	rdfs:subClassOf element:ControlNode ;
	uml-model:ownedAttribute property:DecisionNode-decisionInput, property:DecisionNode-decisionInputFlow .

element:DecisionNode-zero_input_parameters rdfs:comment "'If the DecisionNode has no decisionInputFlow and an incoming ControlFlow, then any decisionInput Behavior has no in parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-zero_input_parameters-_specification .

element:DecisionNode-zero_input_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(decisionInput<>null and decisionInputFlow=null and incoming->exists(oclIsKindOf(ControlFlow))) implies\n   decisionInput.inputParameters()->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-edges rdfs:comment "'The ActivityEdges incoming to and outgoing from a DecisionNode, other than the decisionInputFlow (if any), must be either all ObjectFlows or all ControlFlows."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-edges-_specification .

element:DecisionNode-edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let allEdges: Set(ActivityEdge) = incoming->union(outgoing) in\nlet allRelevantEdges: Set(ActivityEdge) = if decisionInputFlow->notEmpty() then allEdges->excluding(decisionInputFlow) else allEdges endif in\nallRelevantEdges->forAll(oclIsKindOf(ControlFlow)) or allRelevantEdges->forAll(oclIsKindOf(ObjectFlow))"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-decision_input_flow_incoming rdfs:comment "'The decisionInputFlow of a DecisionNode must be an incoming ActivityEdge of the DecisionNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-decision_input_flow_incoming-_specification .

element:DecisionNode-decision_input_flow_incoming-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->includes(decisionInputFlow)"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-two_input_parameters rdfs:comment "'If the DecisionNode has a decisionInputFlow and an second incoming ObjectFlow, then any decisionInput has two in Parameters, the first of which has a type that is the same as or a supertype of the type of object tokens offered on the non-decisionInputFlow and the second of which has a type that is the same as or a supertype of the type of object tokens offered on the decisionInputFlow."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-two_input_parameters-_specification .

element:DecisionNode-two_input_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(decisionInput<>null and decisionInputFlow<>null and incoming->forAll(oclIsKindOf(ObjectFlow))) implies\n   decisionInput.inputParameters()->size()=2"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-incoming_outgoing_edges rdfs:comment "'A DecisionNode has one or two incoming ActivityEdges and at least one outgoing ActivityEdge."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-incoming_outgoing_edges-_specification .

element:DecisionNode-incoming_outgoing_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(incoming->size() = 1 or incoming->size() = 2) and outgoing->size() > 0"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-incoming_control_one_input_parameter rdfs:comment "'If the DecisionNode has a decisionInputFlow and an incoming ControlFlow, then any decisionInput Behavior has one in Parameter whose type is the same as or a supertype of the type of object tokens offered on the decisionInputFlow."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-incoming_control_one_input_parameter-_specification .

element:DecisionNode-incoming_control_one_input_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(decisionInput<>null and decisionInputFlow<>null and incoming->exists(oclIsKindOf(ControlFlow))) implies\n   decisionInput.inputParameters()->size()=1"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-parameters rdfs:comment "'A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-parameters-_specification .

element:DecisionNode-parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "decisionInput<>null implies \n  (decisionInput.ownedParameter->forAll(par | \n     par.direction <> ParameterDirectionKind::out and \n     par.direction <> ParameterDirectionKind::inout ) and\n   decisionInput.ownedParameter->one(par | \n     par.direction <> ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

element:DecisionNode-incoming_object_one_input_parameter rdfs:comment "'If the DecisionNode has no decisionInputFlow and an incoming ObjectFlow, then any decisionInput Behavior has one in Parameter whose type is the same as or a supertype of the type of object tokens offered on the incoming ObjectFlow."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DecisionNode-incoming_object_one_input_parameter-_specification .

element:DecisionNode-incoming_object_one_input_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(decisionInput<>null and decisionInputFlow=null and incoming->forAll(oclIsKindOf(ObjectFlow))) implies\n   decisionInput.inputParameters()->size()=1"^^<http://www.omg.org/spec/OCL> .

property:DecisionNode-decisionInput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DecisionNode-decisionInput" ;
	rdfs:label "DecisionNode-decisionInput" ;
	uml-model:name "decisionInput" ;
	uml-model:association uml-element:A_decisionInput_decisionNode ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior that is executed to provide an input to guard ValueSpecifications on ActivityEdges outgoing from the DecisionNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:DecisionNode-decisionInputFlow rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DecisionNode-decisionInputFlow" ;
	rdfs:label "DecisionNode-decisionInputFlow" ;
	uml-model:name "decisionInputFlow" ;
	uml-model:association uml-element:A_decisionInputFlow_decisionNode ;
	rdfs:range element:ObjectFlow ;
	rdfs:comment "'An additional ActivityEdge incoming to the DecisionNode that provides a decision input value for the guards ValueSpecifications on ActivityEdges outgoing from the DecisionNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ExceptionHandler xmi:type uml:Class ;
	xmi:id "ExceptionHandler" ;
	uml-model:name "ExceptionHandler" ;
	rdfs:comment "'An ExceptionHandler is an Element that specifies a handlerBody ExecutableNode to execute in case the specified exception occurs during the execution of the protected ExecutableNode."@en ;
	uml-model:rule element:ExceptionHandler-handler_body_edges, element:ExceptionHandler-output_pins, element:ExceptionHandler-one_input, element:ExceptionHandler-edge_source_target, element:ExceptionHandler-handler_body_owner, element:ExceptionHandler-exception_input_type ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:ExceptionHandler-exceptionInput, property:ExceptionHandler-exceptionType, property:ExceptionHandler-handlerBody, property:ExceptionHandler-protectedNode .

element:ExceptionHandler-handler_body_edges rdfs:comment "'The handlerBody has no incoming or outgoing ActivityEdges and the exceptionInput has no incoming ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-handler_body_edges-_specification .

element:ExceptionHandler-handler_body_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "handlerBody.incoming->isEmpty() and handlerBody.outgoing->isEmpty() and exceptionInput.incoming->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ExceptionHandler-output_pins rdfs:comment "'If the protectedNode is an Action with OutputPins, then the handlerBody must also be an Action with the same number of OutputPins, which are compatible in type, ordering, and multiplicity to those of the protectedNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-output_pins-_specification .

element:ExceptionHandler-output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(protectedNode.oclIsKindOf(Action) and protectedNode.oclAsType(Action).output->notEmpty()) implies\n(\n  handlerBody.oclIsKindOf(Action) and \n  let protectedNodeOutput : OrderedSet(OutputPin) = protectedNode.oclAsType(Action).output,\n        handlerBodyOutput : OrderedSet(OutputPin) =  handlerBody.oclAsType(Action).output in\n    protectedNodeOutput->size() = handlerBodyOutput->size() and\n    Sequence{1..protectedNodeOutput->size()}->forAll(i |\n      handlerBodyOutput->at(i).type.conformsTo(protectedNodeOutput->at(i).type) and\n      handlerBodyOutput->at(i).isOrdered=protectedNodeOutput->at(i).isOrdered and\n      handlerBodyOutput->at(i).compatibleWith(protectedNodeOutput->at(i)))\n)"^^<http://www.omg.org/spec/OCL> .

element:ExceptionHandler-one_input rdfs:comment "'The handlerBody is an Action with one InputPin, and that InputPin is the same as the exceptionInput."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-one_input-_specification .

element:ExceptionHandler-one_input-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "handlerBody.oclIsKindOf(Action) and\nlet inputs: OrderedSet(InputPin) = handlerBody.oclAsType(Action).input in\ninputs->size()=1 and inputs->first()=exceptionInput"^^<http://www.omg.org/spec/OCL> .

element:ExceptionHandler-edge_source_target rdfs:comment "'An ActivityEdge that has a source within the handlerBody of an ExceptionHandler must have its target in the handlerBody also, and vice versa."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-edge_source_target-_specification .

element:ExceptionHandler-edge_source_target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let nodes:Set(ActivityNode) = handlerBody.oclAsType(Action).allOwnedNodes() in\nnodes.outgoing->forAll(nodes->includes(target)) and\nnodes.incoming->forAll(nodes->includes(source))"^^<http://www.omg.org/spec/OCL> .

element:ExceptionHandler-handler_body_owner rdfs:comment "'The handlerBody must have the same owner as the protectedNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-handler_body_owner-_specification .

element:ExceptionHandler-handler_body_owner-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "handlerBody.owner=protectedNode.owner"^^<http://www.omg.org/spec/OCL> .

element:ExceptionHandler-exception_input_type rdfs:comment "'The exceptionInput must either have no type or every exceptionType must conform to the exceptionInput type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExceptionHandler-exception_input_type-_specification .

element:ExceptionHandler-exception_input_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "exceptionInput.type=null or \nexceptionType->forAll(conformsTo(exceptionInput.type.oclAsType(Classifier)))"^^<http://www.omg.org/spec/OCL> .

property:ExceptionHandler-exceptionInput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExceptionHandler-exceptionInput" ;
	rdfs:label "ExceptionHandler-exceptionInput" ;
	uml-model:name "exceptionInput" ;
	uml-model:association uml-element:A_exceptionInput_exceptionHandler ;
	rdfs:range element:ObjectNode ;
	rdfs:comment "'An ObjectNode within the handlerBody. When the ExceptionHandler catches an exception, the exception token is placed on this ObjectNode, causing the handlerBody to execute."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ExceptionHandler-exceptionType rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExceptionHandler-exceptionType" ;
	rdfs:label "ExceptionHandler-exceptionType" ;
	uml-model:name "exceptionType" ;
	uml-model:association uml-element:A_exceptionType_exceptionHandler ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifiers whose instances the ExceptionHandler catches as exceptions. If an exception occurs whose type is any exceptionType, the ExceptionHandler catches the exception and executes the handlerBody."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:ExceptionHandler-handlerBody rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExceptionHandler-handlerBody" ;
	rdfs:label "ExceptionHandler-handlerBody" ;
	uml-model:name "handlerBody" ;
	uml-model:association uml-element:A_handlerBody_exceptionHandler ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'An ExecutableNode that is executed if the ExceptionHandler catches an exception."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ExceptionHandler-protectedNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExceptionHandler-protectedNode" ;
	rdfs:label "ExceptionHandler-protectedNode" ;
	uml-model:name "protectedNode" ;
	uml-model:association uml-element:A_handler_protectedNode ;
	rdfs:range element:ExecutableNode ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The ExecutableNode protected by the ExceptionHandler. If an exception propagates out of the protectedNode and has a type matching one of the exceptionTypes, then it is caught by this ExceptionHandler."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ExecutableNode xmi:type uml:Class ;
	xmi:id "ExecutableNode" ;
	uml-model:name "ExecutableNode" ;
	rdfs:comment "'An ExecutableNode is an abstract class for ActivityNodes whose execution may be controlled using ControlFlows and to which ExceptionHandlers may be attached."@en ;
	rdfs:subClassOf element:ActivityNode ;
	uml-model:ownedAttribute property:ExecutableNode-handler .

property:ExecutableNode-handler rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExecutableNode-handler" ;
	rdfs:label "ExecutableNode-handler" ;
	uml-model:name "handler" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_handler_protectedNode ;
	rdfs:range element:ExceptionHandler ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A set of ExceptionHandlers that are examined if an exception propagates out of the ExceptionNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:FinalNode xmi:type uml:Class ;
	xmi:id "FinalNode" ;
	uml-model:name "FinalNode" ;
	rdfs:comment "'A FinalNode is an abstract ControlNode at which a flow in an Activity stops."@en ;
	uml-model:rule element:FinalNode-no_outgoing_edges ;
	rdfs:subClassOf element:ControlNode .

element:FinalNode-no_outgoing_edges rdfs:comment "'A FinalNode has no outgoing ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalNode-no_outgoing_edges-_specification .

element:FinalNode-no_outgoing_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:FlowFinalNode xmi:type uml:Class ;
	xmi:id "FlowFinalNode" ;
	uml-model:name "FlowFinalNode" ;
	rdfs:comment "'A FlowFinalNode is a FinalNode that terminates a flow by consuming the tokens offered to it."@en ;
	rdfs:subClassOf element:FinalNode .

element:ForkNode xmi:type uml:Class ;
	xmi:id "ForkNode" ;
	uml-model:name "ForkNode" ;
	rdfs:comment "'A ForkNode is a ControlNode that splits a flow into multiple concurrent flows."@en ;
	uml-model:rule element:ForkNode-edges, element:ForkNode-one_incoming_edge ;
	rdfs:subClassOf element:ControlNode .

element:ForkNode-edges rdfs:comment "'The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ForkNode-edges-_specification .

element:ForkNode-edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))"^^<http://www.omg.org/spec/OCL> .

element:ForkNode-one_incoming_edge rdfs:comment "'A ForkNode has one incoming ActivityEdge."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ForkNode-one_incoming_edge-_specification .

element:ForkNode-one_incoming_edge-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->size()=1"^^<http://www.omg.org/spec/OCL> .

element:InitialNode xmi:type uml:Class ;
	xmi:id "InitialNode" ;
	uml-model:name "InitialNode" ;
	rdfs:comment "'An InitialNode is a ControlNode that offers a single control token when initially enabled."@en ;
	uml-model:rule element:InitialNode-no_incoming_edges, element:InitialNode-control_edges ;
	rdfs:subClassOf element:ControlNode .

element:InitialNode-no_incoming_edges rdfs:comment "'An InitialNode has no incoming ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InitialNode-no_incoming_edges-_specification .

element:InitialNode-no_incoming_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:InitialNode-control_edges rdfs:comment "'All the outgoing ActivityEdges from an InitialNode must be ControlFlows."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InitialNode-control_edges-_specification .

element:InitialNode-control_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->forAll(oclIsKindOf(ControlFlow))"^^<http://www.omg.org/spec/OCL> .

element:InterruptibleActivityRegion xmi:type uml:Class ;
	xmi:id "InterruptibleActivityRegion" ;
	uml-model:name "InterruptibleActivityRegion" ;
	rdfs:comment "'An InterruptibleActivityRegion is an ActivityGroup that supports the termination of tokens flowing in the portions of an activity within it."@en ;
	uml-model:rule element:InterruptibleActivityRegion-interrupting_edges ;
	rdfs:subClassOf element:ActivityGroup ;
	uml-model:ownedAttribute property:InterruptibleActivityRegion-interruptingEdge, property:InterruptibleActivityRegion-node .

element:InterruptibleActivityRegion-interrupting_edges rdfs:comment "'The interruptingEdges of an InterruptibleActivityRegion must have their source in the region and their target outside the region, but within the same Activity containing the region."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InterruptibleActivityRegion-interrupting_edges-_specification .

element:InterruptibleActivityRegion-interrupting_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "interruptingEdge->forAll(edge | \n  node->includes(edge.source) and node->excludes(edge.target) and edge.target.containingActivity() = inActivity)"^^<http://www.omg.org/spec/OCL> .

property:InterruptibleActivityRegion-interruptingEdge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InterruptibleActivityRegion-interruptingEdge" ;
	rdfs:label "InterruptibleActivityRegion-interruptingEdge" ;
	uml-model:name "interruptingEdge" ;
	uml-model:association uml-element:A_interruptingEdge_interrupts ;
	rdfs:range element:ActivityEdge ;
	rdfs:comment "'The ActivityEdges leaving the InterruptibleActivityRegion on which a traversing token will result in the termination of other tokens flowing in the InterruptibleActivityRegion."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InterruptibleActivityRegion-node rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InterruptibleActivityRegion-node" ;
	rdfs:label "InterruptibleActivityRegion-node" ;
	uml-model:name "node" ;
	uml-model:association uml-element:A_inInterruptibleRegion_node ;
	rdfs:range element:ActivityNode ;
	uml-model:subsettedProperty uml-element:ActivityGroup-containedNode ;
	rdfs:comment "'ActivityNodes immediately contained in the InterruptibleActivityRegion."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:JoinNode xmi:type uml:Class ;
	xmi:id "JoinNode" ;
	uml-model:name "JoinNode" ;
	rdfs:comment "'A JoinNode is a ControlNode that synchronizes multiple flows."@en ;
	uml-model:rule element:JoinNode-one_outgoing_edge, element:JoinNode-incoming_object_flow ;
	rdfs:subClassOf element:ControlNode ;
	uml-model:ownedAttribute property:JoinNode-isCombineDuplicate, property:JoinNode-joinSpec .

element:JoinNode-one_outgoing_edge rdfs:comment "'A JoinNode has one outgoing ActivityEdge."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:JoinNode-one_outgoing_edge-_specification .

element:JoinNode-one_outgoing_edge-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->size() = 1"^^<http://www.omg.org/spec/OCL> .

element:JoinNode-incoming_object_flow rdfs:comment "'If one of the incoming ActivityEdges of a JoinNode is an ObjectFlow, then its outgoing ActivityEdge must be an ObjectFlow. Otherwise its outgoing ActivityEdge must be a ControlFlow."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:JoinNode-incoming_object_flow-_specification .

element:JoinNode-incoming_object_flow-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if incoming->exists(oclIsKindOf(ObjectFlow)) then outgoing->forAll(oclIsKindOf(ObjectFlow))\nelse outgoing->forAll(oclIsKindOf(ControlFlow))\nendif"^^<http://www.omg.org/spec/OCL> .

property:JoinNode-isCombineDuplicate rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "JoinNode-isCombineDuplicate" ;
	rdfs:label "JoinNode-isCombineDuplicate" ;
	uml-model:name "isCombineDuplicate" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether incoming tokens having objects with the same identity are combined into one by the JoinNode."@en ;
	xmi:defaultValue element:JoinNode-isCombineDuplicate-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:JoinNode-isCombineDuplicate-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "JoinNode-isCombineDuplicate-_defaultValue" ;
	uml-model:value "true" .

property:JoinNode-joinSpec rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "JoinNode-joinSpec" ;
	rdfs:label "JoinNode-joinSpec" ;
	uml-model:name "joinSpec" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_joinSpec_joinNode ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A ValueSpecification giving the condition under which the JoinNode will offer a token on its outgoing ActivityEdge. If no joinSpec is specified, then the JoinNode will offer an outgoing token if tokens are offered on all of its incoming ActivityEdges (an &#34;and&#34; condition)."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:MergeNode xmi:type uml:Class ;
	xmi:id "MergeNode" ;
	uml-model:name "MergeNode" ;
	rdfs:comment "'A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows."@en ;
	uml-model:rule element:MergeNode-one_outgoing_edge, element:MergeNode-edges ;
	rdfs:subClassOf element:ControlNode .

element:MergeNode-one_outgoing_edge rdfs:comment "'A MergeNode has one outgoing ActivityEdge."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MergeNode-one_outgoing_edge-_specification .

element:MergeNode-one_outgoing_edge-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->size()=1"^^<http://www.omg.org/spec/OCL> .

element:MergeNode-edges rdfs:comment "'The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MergeNode-edges-_specification .

element:MergeNode-edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))"^^<http://www.omg.org/spec/OCL> .

element:ObjectFlow xmi:type uml:Class ;
	xmi:id "ObjectFlow" ;
	uml-model:name "ObjectFlow" ;
	rdfs:comment "'An ObjectFlow is an ActivityEdge that is traversed by object tokens that may hold values. Object flows also support multicast/receive, token selection from object nodes, and transformation of tokens."@en ;
	uml-model:rule element:ObjectFlow-input_and_output_parameter, element:ObjectFlow-no_executable_nodes, element:ObjectFlow-transformation_behavior, element:ObjectFlow-selection_behavior, element:ObjectFlow-compatible_types, element:ObjectFlow-same_upper_bounds, element:ObjectFlow-target, element:ObjectFlow-is_multicast_or_is_multireceive ;
	rdfs:subClassOf element:ActivityEdge ;
	uml-model:ownedAttribute property:ObjectFlow-isMulticast, property:ObjectFlow-isMultireceive, property:ObjectFlow-selection, property:ObjectFlow-transformation .

element:ObjectFlow-input_and_output_parameter rdfs:comment "'A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same as or a supertype of the type of the source ObjectNode, be non-unique and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of source ObjectNode. The Behavior cannot have side effects."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-input_and_output_parameter-_specification .

element:ObjectFlow-input_and_output_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "selection<>null implies\n   selection.inputParameters()->size()=1 and\n   selection.inputParameters()->forAll(not isUnique and is(0,*)) and\n   selection.outputParameters()->size()=1"^^<http://www.omg.org/spec/OCL> .

element:ObjectFlow-no_executable_nodes rdfs:comment "'ObjectFlows may not have ExecutableNodes at either end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-no_executable_nodes-_specification .

element:ObjectFlow-no_executable_nodes-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not (source.oclIsKindOf(ExecutableNode) or target.oclIsKindOf(ExecutableNode))"^^<http://www.omg.org/spec/OCL> .

element:ObjectFlow-transformation_behavior rdfs:comment "'A transformation Behavior has one input Parameter and one output Parameter. The input Parameter must be the same as or a supertype of the type of object token coming from the source end. The output Parameter must be the same or a subtype of the type of object token expected downstream. The Behavior cannot have side effects."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-transformation_behavior-_specification .

element:ObjectFlow-transformation_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "transformation<>null implies\n   transformation.inputParameters()->size()=1 and\n   transformation.outputParameters()->size()=1"^^<http://www.omg.org/spec/OCL> .

element:ObjectFlow-selection_behavior rdfs:comment "'An ObjectFlow may have a selection Behavior only if it has an ObjectNode as its source."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-selection_behavior-_specification .

element:ObjectFlow-selection_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "selection<>null implies source.oclIsKindOf(ObjectNode)"^^<http://www.omg.org/spec/OCL> .

element:ObjectFlow-compatible_types rdfs:comment "'ObjectNodes connected by an ObjectFlow, with optionally intervening ControlNodes, must have compatible types. In particular, the downstream ObjectNode type must be the same or a supertype of the upstream ObjectNode type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-compatible_types-_specification .

element:ObjectFlow-compatible_types-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:ObjectFlow-same_upper_bounds rdfs:comment "'ObjectNodes connected by an ObjectFlow, with optionally intervening ControlNodes, must have the same upperBounds."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-same_upper_bounds-_specification .

element:ObjectFlow-same_upper_bounds-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:ObjectFlow-target rdfs:comment "'An ObjectFlow with a constant weight may not target an ObjectNode, with optionally intervening ControlNodes, that has an upper bound less than the weight."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-target-_specification .

element:ObjectFlow-target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:ObjectFlow-is_multicast_or_is_multireceive rdfs:comment "'isMulticast and isMultireceive cannot both be true."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectFlow-is_multicast_or_is_multireceive-_specification .

element:ObjectFlow-is_multicast_or_is_multireceive-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not (isMulticast and isMultireceive)"^^<http://www.omg.org/spec/OCL> .

property:ObjectFlow-isMulticast rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectFlow-isMulticast" ;
	rdfs:label "ObjectFlow-isMulticast" ;
	uml-model:name "isMulticast" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the objects in the ObjectFlow are passed by multicasting."@en ;
	xmi:defaultValue element:ObjectFlow-isMulticast-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ObjectFlow-isMulticast-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ObjectFlow-isMulticast-_defaultValue" .

property:ObjectFlow-isMultireceive rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectFlow-isMultireceive" ;
	rdfs:label "ObjectFlow-isMultireceive" ;
	uml-model:name "isMultireceive" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the objects in the ObjectFlow are gathered from respondents to multicasting."@en ;
	xmi:defaultValue element:ObjectFlow-isMultireceive-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ObjectFlow-isMultireceive-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ObjectFlow-isMultireceive-_defaultValue" .

property:ObjectFlow-selection rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectFlow-selection" ;
	rdfs:label "ObjectFlow-selection" ;
	uml-model:name "selection" ;
	uml-model:association uml-element:A_selection_objectFlow ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior used to select tokens from a source ObjectNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ObjectFlow-transformation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectFlow-transformation" ;
	rdfs:label "ObjectFlow-transformation" ;
	uml-model:name "transformation" ;
	uml-model:association uml-element:A_transformation_objectFlow ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior used to change or replace object tokens flowing along the ObjectFlow."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ObjectNode xmi:type uml:Class ;
	xmi:id "ObjectNode" ;
	uml-model:name "ObjectNode" ;
	rdfs:comment "'An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification of the state required for tokens being held, and carrying control values.&#xD;&#xA;"@en ;
	uml-model:rule element:ObjectNode-input_output_parameter, element:ObjectNode-selection_behavior, element:ObjectNode-object_flow_edges ;
	rdfs:subClassOf element:TypedElement, element:ActivityNode ;
	uml-model:ownedAttribute property:ObjectNode-inState, property:ObjectNode-isControlType, property:ObjectNode-ordering, property:ObjectNode-selection, property:ObjectNode-upperBound .

element:ObjectNode-input_output_parameter rdfs:comment "'A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of ObjectNode. The Behavior cannot have side effects."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectNode-input_output_parameter-_specification .

element:ObjectNode-input_output_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "selection<>null implies\n   selection.inputParameters()->size()=1 and\n   selection.inputParameters()->forAll(p | not p.isUnique and p.is(0,*) and self.type.conformsTo(p.type)) and\n   selection.outputParameters()->size()=1 and\n      selection.inputParameters()->forAll(p | self.type.conformsTo(p.type))"^^<http://www.omg.org/spec/OCL> .

element:ObjectNode-selection_behavior rdfs:comment "'If an ObjectNode has a selection Behavior, then the ordering of the object node is ordered, and vice versa."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectNode-selection_behavior-_specification .

element:ObjectNode-selection_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(selection<>null) = (ordering=ObjectNodeOrderingKind::ordered)"^^<http://www.omg.org/spec/OCL> .

element:ObjectNode-object_flow_edges rdfs:comment "'If isControlType=false, the ActivityEdges incoming to or outgoing from an ObjectNode must all be ObjectFlows."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ObjectNode-object_flow_edges-_specification .

element:ObjectNode-object_flow_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(not isControlType) implies incoming->union(outgoing)->forAll(oclIsKindOf(ObjectFlow))"^^<http://www.omg.org/spec/OCL> .

property:ObjectNode-inState rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectNode-inState" ;
	rdfs:label "ObjectNode-inState" ;
	uml-model:name "inState" ;
	uml-model:association uml-element:A_inState_objectNode ;
	rdfs:range element:State ;
	rdfs:comment "'The States required to be associated with the values held by tokens on this ObjectNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ObjectNode-isControlType rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectNode-isControlType" ;
	rdfs:label "ObjectNode-isControlType" ;
	uml-model:name "isControlType" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the type of the ObjectNode is to be treated as representing control values that may traverse ControlFlows."@en ;
	xmi:defaultValue element:ObjectNode-isControlType-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ObjectNode-isControlType-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ObjectNode-isControlType-_defaultValue" .

property:ObjectNode-ordering rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectNode-ordering" ;
	rdfs:label "ObjectNode-ordering" ;
	uml-model:name "ordering" ;
	rdfs:range element:ObjectNodeOrderingKind ;
	rdfs:comment "'Indicates how the tokens held by the ObjectNode are ordered for selection to traverse ActivityEdges outgoing from the ObjectNode."@en ;
	xmi:defaultValue element:ObjectNode-ordering-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ObjectNode-ordering-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "ObjectNode-ordering-_defaultValue" .

property:ObjectNode-selection rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectNode-selection" ;
	rdfs:label "ObjectNode-selection" ;
	uml-model:name "selection" ;
	uml-model:association uml-element:A_selection_objectNode ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior used to select tokens to be offered on outgoing ActivityEdges."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ObjectNode-upperBound rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ObjectNode-upperBound" ;
	rdfs:label "ObjectNode-upperBound" ;
	uml-model:name "upperBound" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_upperBound_objectNode ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The maximum number of tokens that may be held by this ObjectNode. Tokens cannot flow into the ObjectNode if the upperBound is reached. If no upperBound is specified, then there is no limit on how many tokens the ObjectNode can hold."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Variable xmi:type uml:Class ;
	xmi:id "Variable" ;
	uml-model:name "Variable" ;
	rdfs:comment "'A Variable is a ConnectableElement that may store values during the execution of an Activity. Reading and writing the values of a Variable provides an alternative means for passing data than the use of ObjectFlows. A Variable may be owned directly by an Activity, in which case it is accessible from anywhere within that activity, or it may be owned by a StructuredActivityNode, in which case it is only accessible within that node."@en ;
	rdfs:subClassOf element:ConnectableElement, element:MultiplicityElement ;
	uml-model:ownedAttribute property:Variable-activityScope, property:Variable-scope ;
	uml-model:operation element:Variable-isAccessibleBy .

property:Variable-activityScope rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Variable-activityScope" ;
	rdfs:label "Variable-activityScope" ;
	uml-model:name "activityScope" ;
	uml-model:association uml-element:A_variable_activityScope ;
	rdfs:range element:Activity ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'An Activity that owns the Variable."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Variable-scope rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Variable-scope" ;
	rdfs:label "Variable-scope" ;
	uml-model:name "scope" ;
	uml-model:association uml-element:A_variable_scope ;
	rdfs:range element:StructuredActivityNode ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'A StructuredActivityNode that owns the Variable."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Variable-isAccessibleBy rdfs:comment "'A Variable is accessible by Actions within its scope (the Activity or StructuredActivityNode that owns it)."@en ;
	uml-model:rule element:Variable-isAccessibleBy-spec ;
	uml-model:returns element:Variable-isAccessibleBy-result .

element:Variable-isAccessibleBy-spec rdf:type uml:Constraint ;
	uml-model:specification element:Variable-isAccessibleBy-spec-_specification .

element:Variable-isAccessibleBy-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if scope<>null then scope.allOwnedNodes()->includes(a)\nelse a.containingActivity()=activityScope\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Variable-isAccessibleBy-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Variable-isAccessibleBy-a rdf:type uml:Parameter ;
	uml-model:name "a" ;
	uml-model:parameterType element:Action .

element:ObjectNodeOrderingKind xmi:type uml:Enumeration ;
	xmi:id "ObjectNodeOrderingKind" ;
	uml-model:name "ObjectNodeOrderingKind" ;
	rdfs:comment "'ObjectNodeOrderingKind is an enumeration indicating queuing order for offering the tokens held by an ObjectNode."@en .

element:A_selection_objectNode xmi:type uml:Association ;
	xmi:id "A_selection_objectNode" ;
	uml-model:name "A_selection_objectNode" .

element:A_selection_objectNode-objectNode xmi:type uml:Property ;
	xmi:id "A_selection_objectNode-objectNode" ;
	uml-model:name "objectNode" ;
	uml-model:type "ObjectNode" ;
	uml-model:association uml-element:A_selection_objectNode .

element:A_inState_objectNode xmi:type uml:Association ;
	xmi:id "A_inState_objectNode" ;
	uml-model:name "A_inState_objectNode" .

element:A_inState_objectNode-objectNode xmi:type uml:Property ;
	xmi:id "A_inState_objectNode-objectNode" ;
	uml-model:name "objectNode" ;
	uml-model:type "ObjectNode" ;
	uml-model:association uml-element:A_inState_objectNode .

element:A_upperBound_objectNode xmi:type uml:Association ;
	xmi:id "A_upperBound_objectNode" ;
	uml-model:name "A_upperBound_objectNode" .

element:A_upperBound_objectNode-objectNode xmi:type uml:Property ;
	xmi:id "A_upperBound_objectNode-objectNode" ;
	uml-model:name "objectNode" ;
	uml-model:type "ObjectNode" ;
	uml-model:association uml-element:A_upperBound_objectNode ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_transformation_objectFlow xmi:type uml:Association ;
	xmi:id "A_transformation_objectFlow" ;
	uml-model:name "A_transformation_objectFlow" .

element:A_transformation_objectFlow-objectFlow xmi:type uml:Property ;
	xmi:id "A_transformation_objectFlow-objectFlow" ;
	uml-model:name "objectFlow" ;
	uml-model:type "ObjectFlow" ;
	uml-model:association uml-element:A_transformation_objectFlow .

element:A_selection_objectFlow xmi:type uml:Association ;
	xmi:id "A_selection_objectFlow" ;
	uml-model:name "A_selection_objectFlow" .

element:A_selection_objectFlow-objectFlow xmi:type uml:Property ;
	xmi:id "A_selection_objectFlow-objectFlow" ;
	uml-model:name "objectFlow" ;
	uml-model:type "ObjectFlow" ;
	uml-model:association uml-element:A_selection_objectFlow .

element:A_joinSpec_joinNode xmi:type uml:Association ;
	xmi:id "A_joinSpec_joinNode" ;
	uml-model:name "A_joinSpec_joinNode" .

element:A_joinSpec_joinNode-joinNode xmi:type uml:Property ;
	xmi:id "A_joinSpec_joinNode-joinNode" ;
	uml-model:name "joinNode" ;
	uml-model:type "JoinNode" ;
	uml-model:association uml-element:A_joinSpec_joinNode ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_interruptingEdge_interrupts xmi:type uml:Association ;
	xmi:id "A_interruptingEdge_interrupts" ;
	uml-model:name "A_interruptingEdge_interrupts" .

element:A_handler_protectedNode xmi:type uml:Association ;
	xmi:id "A_handler_protectedNode" ;
	uml-model:name "A_handler_protectedNode" .

element:A_handlerBody_exceptionHandler xmi:type uml:Association ;
	xmi:id "A_handlerBody_exceptionHandler" ;
	uml-model:name "A_handlerBody_exceptionHandler" .

element:A_handlerBody_exceptionHandler-exceptionHandler xmi:type uml:Property ;
	xmi:id "A_handlerBody_exceptionHandler-exceptionHandler" ;
	uml-model:name "exceptionHandler" ;
	uml-model:type "ExceptionHandler" ;
	uml-model:association uml-element:A_handlerBody_exceptionHandler .

element:A_exceptionType_exceptionHandler xmi:type uml:Association ;
	xmi:id "A_exceptionType_exceptionHandler" ;
	uml-model:name "A_exceptionType_exceptionHandler" .

element:A_exceptionType_exceptionHandler-exceptionHandler xmi:type uml:Property ;
	xmi:id "A_exceptionType_exceptionHandler-exceptionHandler" ;
	uml-model:name "exceptionHandler" ;
	uml-model:type "ExceptionHandler" ;
	uml-model:association uml-element:A_exceptionType_exceptionHandler .

element:A_exceptionInput_exceptionHandler xmi:type uml:Association ;
	xmi:id "A_exceptionInput_exceptionHandler" ;
	uml-model:name "A_exceptionInput_exceptionHandler" .

element:A_exceptionInput_exceptionHandler-exceptionHandler xmi:type uml:Property ;
	xmi:id "A_exceptionInput_exceptionHandler-exceptionHandler" ;
	uml-model:name "exceptionHandler" ;
	uml-model:type "ExceptionHandler" ;
	uml-model:association uml-element:A_exceptionInput_exceptionHandler .

element:A_decisionInput_decisionNode xmi:type uml:Association ;
	xmi:id "A_decisionInput_decisionNode" ;
	uml-model:name "A_decisionInput_decisionNode" .

element:A_decisionInput_decisionNode-decisionNode xmi:type uml:Property ;
	xmi:id "A_decisionInput_decisionNode-decisionNode" ;
	uml-model:name "decisionNode" ;
	uml-model:type "DecisionNode" ;
	uml-model:association uml-element:A_decisionInput_decisionNode .

element:A_decisionInputFlow_decisionNode xmi:type uml:Association ;
	xmi:id "A_decisionInputFlow_decisionNode" ;
	uml-model:name "A_decisionInputFlow_decisionNode" .

element:A_decisionInputFlow_decisionNode-decisionNode xmi:type uml:Property ;
	xmi:id "A_decisionInputFlow_decisionNode-decisionNode" ;
	uml-model:name "decisionNode" ;
	uml-model:type "DecisionNode" ;
	uml-model:association uml-element:A_decisionInputFlow_decisionNode .

element:A_represents_activityPartition xmi:type uml:Association ;
	xmi:id "A_represents_activityPartition" ;
	uml-model:name "A_represents_activityPartition" .

element:A_represents_activityPartition-activityPartition xmi:type uml:Property ;
	xmi:id "A_represents_activityPartition-activityPartition" ;
	uml-model:name "activityPartition" ;
	uml-model:type "ActivityPartition" ;
	uml-model:association uml-element:A_represents_activityPartition .

element:A_subpartition_superPartition xmi:type uml:Association ;
	xmi:id "A_subpartition_superPartition" ;
	uml-model:name "A_subpartition_superPartition" .

element:A_edge_inPartition xmi:type uml:Association ;
	xmi:id "A_edge_inPartition" ;
	uml-model:name "A_edge_inPartition" .

element:A_parameter_activityParameterNode xmi:type uml:Association ;
	xmi:id "A_parameter_activityParameterNode" ;
	uml-model:name "A_parameter_activityParameterNode" .

element:A_parameter_activityParameterNode-activityParameterNode xmi:type uml:Property ;
	xmi:id "A_parameter_activityParameterNode-activityParameterNode" ;
	uml-model:name "activityParameterNode" ;
	uml-model:type "ActivityParameterNode" ;
	uml-model:association uml-element:A_parameter_activityParameterNode .

element:A_inInterruptibleRegion_node xmi:type uml:Association ;
	xmi:id "A_inInterruptibleRegion_node" ;
	uml-model:name "A_inInterruptibleRegion_node" .

element:A_inPartition_node xmi:type uml:Association ;
	xmi:id "A_inPartition_node" ;
	uml-model:name "A_inPartition_node" .

element:A_incoming_target_node xmi:type uml:Association ;
	xmi:id "A_incoming_target_node" ;
	uml-model:name "A_incoming_target_node" .

element:A_outgoing_source_node xmi:type uml:Association ;
	xmi:id "A_outgoing_source_node" ;
	uml-model:name "A_outgoing_source_node" .

element:A_redefinedNode_activityNode xmi:type uml:Association ;
	xmi:id "A_redefinedNode_activityNode" ;
	uml-model:name "A_redefinedNode_activityNode" .

element:A_redefinedNode_activityNode-activityNode xmi:type uml:Property ;
	xmi:id "A_redefinedNode_activityNode-activityNode" ;
	uml-model:name "activityNode" ;
	uml-model:type "ActivityNode" ;
	uml-model:association uml-element:A_redefinedNode_activityNode ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_containedEdge_inGroup xmi:type uml:Association ;
	xmi:id "A_containedEdge_inGroup" ;
	uml-model:name "A_containedEdge_inGroup" .

element:A_containedNode_inGroup xmi:type uml:Association ;
	xmi:id "A_containedNode_inGroup" ;
	uml-model:name "A_containedNode_inGroup" .

element:A_subgroup_superGroup xmi:type uml:Association ;
	xmi:id "A_subgroup_superGroup" ;
	uml-model:name "A_subgroup_superGroup" .

element:A_redefinedEdge_activityEdge xmi:type uml:Association ;
	xmi:id "A_redefinedEdge_activityEdge" ;
	uml-model:name "A_redefinedEdge_activityEdge" .

element:A_redefinedEdge_activityEdge-activityEdge xmi:type uml:Property ;
	xmi:id "A_redefinedEdge_activityEdge-activityEdge" ;
	uml-model:name "activityEdge" ;
	uml-model:type "ActivityEdge" ;
	uml-model:association uml-element:A_redefinedEdge_activityEdge ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_weight_activityEdge xmi:type uml:Association ;
	xmi:id "A_weight_activityEdge" ;
	uml-model:name "A_weight_activityEdge" .

element:A_weight_activityEdge-activityEdge xmi:type uml:Property ;
	xmi:id "A_weight_activityEdge-activityEdge" ;
	uml-model:name "activityEdge" ;
	uml-model:type "ActivityEdge" ;
	uml-model:association uml-element:A_weight_activityEdge ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_guard_activityEdge xmi:type uml:Association ;
	xmi:id "A_guard_activityEdge" ;
	uml-model:name "A_guard_activityEdge" .

element:A_guard_activityEdge-activityEdge xmi:type uml:Property ;
	xmi:id "A_guard_activityEdge-activityEdge" ;
	uml-model:name "activityEdge" ;
	uml-model:type "ActivityEdge" ;
	uml-model:association uml-element:A_guard_activityEdge ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_structuredNode_activity xmi:type uml:Association ;
	xmi:id "A_structuredNode_activity" ;
	uml-model:name "A_structuredNode_activity" .

element:A_group_inActivity xmi:type uml:Association ;
	xmi:id "A_group_inActivity" ;
	uml-model:name "A_group_inActivity" .

element:A_node_activity xmi:type uml:Association ;
	xmi:id "A_node_activity" ;
	uml-model:name "A_node_activity" .

element:A_variable_activityScope xmi:type uml:Association ;
	xmi:id "A_variable_activityScope" ;
	uml-model:name "A_variable_activityScope" .

element:A_edge_activity xmi:type uml:Association ;
	xmi:id "A_edge_activity" ;
	uml-model:name "A_edge_activity" .

element:A_partition_activity xmi:type uml:Association ;
	xmi:id "A_partition_activity" ;
	uml-model:name "A_partition_activity" .

element:A_partition_activity-activity xmi:type uml:Property ;
	xmi:id "A_partition_activity-activity" ;
	uml-model:name "activity" ;
	uml-model:type "Activity" ;
	uml-model:association uml-element:A_partition_activity ;
	uml-model:subsettedProperty uml-element:ActivityGroup-inActivity .

element:Values xmi:type uml:Package ;
	xmi:id "Values" ;
	uml-model:name "Values" .

uml-import:Values-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Values-_packageImport.0" ;
	uml-model:packagedElement element:Values ;
	uml-model:importedPackage element:Classification .

element:Duration xmi:type uml:Class ;
	xmi:id "Duration" ;
	uml-model:name "Duration" ;
	rdfs:comment "'A Duration is a ValueSpecification that specifies the temporal distance between two time instants."@en ;
	uml-model:rule element:Duration-no_expr_requires_observation ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:Duration-expr, property:Duration-observation .

element:Duration-no_expr_requires_observation rdfs:comment "'If a Duration has no expr, then it must have a single observation that is a DurationObservation."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Duration-no_expr_requires_observation-_specification .

element:Duration-no_expr_requires_observation-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(DurationObservation)))"^^<http://www.omg.org/spec/OCL> .

property:Duration-expr rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Duration-expr" ;
	rdfs:label "Duration-expr" ;
	uml-model:name "expr" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_expr_duration ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A ValueSpecification that evaluates to the value of the Duration."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Duration-observation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Duration-observation" ;
	rdfs:label "Duration-observation" ;
	uml-model:name "observation" ;
	uml-model:association uml-element:A_observation_duration ;
	rdfs:range element:Observation ;
	rdfs:comment "'Refers to the Observations that are involved in the computation of the Duration value"@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:DurationConstraint xmi:type uml:Class ;
	xmi:id "DurationConstraint" ;
	uml-model:name "DurationConstraint" ;
	rdfs:comment "'A DurationConstraint is a Constraint that refers to a DurationInterval."@en ;
	uml-model:rule element:DurationConstraint-first_event_multiplicity, element:DurationConstraint-has_one_or_two_constrainedElements ;
	rdfs:subClassOf element:IntervalConstraint ;
	uml-model:ownedAttribute property:DurationConstraint-firstEvent, property:DurationConstraint-specification .

element:DurationConstraint-first_event_multiplicity rdfs:comment "'The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DurationConstraint-first_event_multiplicity-_specification .

element:DurationConstraint-first_event_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if (constrainedElement->size() = 2)\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0) \nendif"^^<http://www.omg.org/spec/OCL> .

element:DurationConstraint-has_one_or_two_constrainedElements rdfs:comment "'A DurationConstraint has either one or two constrainedElements."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DurationConstraint-has_one_or_two_constrainedElements-_specification .

element:DurationConstraint-has_one_or_two_constrainedElements-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "constrainedElement->size() = 1 or constrainedElement->size()=2"^^<http://www.omg.org/spec/OCL> .

property:DurationConstraint-firstEvent rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationConstraint-firstEvent" ;
	rdfs:label "DurationConstraint-firstEvent" ;
	uml-model:name "firstEvent" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]."@en ;
	uml-model:multiplicity "0..2"^^uml-model-dt:multiplicityRange .

property:DurationConstraint-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationConstraint-specification" ;
	rdfs:label "DurationConstraint-specification" ;
	uml-model:name "specification" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_specification_durationConstraint ;
	rdfs:range element:DurationInterval ;
	rdfs:comment "'The DurationInterval constraining the duration."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DurationInterval xmi:type uml:Class ;
	xmi:id "DurationInterval" ;
	uml-model:name "DurationInterval" ;
	rdfs:comment "'A DurationInterval defines the range between two Durations."@en ;
	rdfs:subClassOf element:Interval ;
	uml-model:ownedAttribute property:DurationInterval-max, property:DurationInterval-min .

property:DurationInterval-max rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationInterval-max" ;
	rdfs:label "DurationInterval-max" ;
	uml-model:name "max" ;
	uml-model:association uml-element:A_max_durationInterval ;
	rdfs:range element:Duration ;
	rdfs:comment "'Refers to the Duration denoting the maximum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:DurationInterval-min rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationInterval-min" ;
	rdfs:label "DurationInterval-min" ;
	uml-model:name "min" ;
	uml-model:association uml-element:A_min_durationInterval ;
	rdfs:range element:Duration ;
	rdfs:comment "'Refers to the Duration denoting the minimum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DurationObservation xmi:type uml:Class ;
	xmi:id "DurationObservation" ;
	uml-model:name "DurationObservation" ;
	rdfs:comment "'A DurationObservation is a reference to a duration during an execution. It points out the NamedElement(s) in the model to observe and whether the observations are when this NamedElement is entered or when it is exited."@en ;
	uml-model:rule element:DurationObservation-first_event_multiplicity ;
	rdfs:subClassOf element:Observation ;
	uml-model:ownedAttribute property:DurationObservation-event, property:DurationObservation-firstEvent .

element:DurationObservation-first_event_multiplicity rdfs:comment "'The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DurationObservation-first_event_multiplicity-_specification .

element:DurationObservation-first_event_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if (event->size() = 2)\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0)\nendif"^^<http://www.omg.org/spec/OCL> .

property:DurationObservation-event rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationObservation-event" ;
	rdfs:label "DurationObservation-event" ;
	uml-model:name "event" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_event_durationObservation ;
	rdfs:range element:NamedElement ;
	rdfs:comment "'The DurationObservation is determined as the duration between the entering or exiting of a single event Element during execution, or the entering/exiting of one event Element and the entering/exiting of a second."@en ;
	uml-model:multiplicity "1..2"^^uml-model-dt:multiplicityRange .

property:DurationObservation-firstEvent rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DurationObservation-firstEvent" ;
	rdfs:label "DurationObservation-firstEvent" ;
	uml-model:name "firstEvent" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]."@en ;
	uml-model:multiplicity "0..2"^^uml-model-dt:multiplicityRange .

element:Expression xmi:type uml:Class ;
	xmi:id "Expression" ;
	uml-model:name "Expression" ;
	rdfs:comment "'An Expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands that are ValueSpecifications. It denotes a (possibly empty) set of values when evaluated in a context."@en ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:Expression-operand, property:Expression-symbol .

property:Expression-operand rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Expression-operand" ;
	rdfs:label "Expression-operand" ;
	uml-model:name "operand" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_operand_expression ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies a sequence of operand ValueSpecifications."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Expression-symbol rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Expression-symbol" ;
	rdfs:label "Expression-symbol" ;
	uml-model:name "symbol" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The symbol associated with this node in the expression tree."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Interval xmi:type uml:Class ;
	xmi:id "Interval" ;
	uml-model:name "Interval" ;
	rdfs:comment "'An Interval defines the range between two ValueSpecifications."@en ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:Interval-max, property:Interval-min .

property:Interval-max rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interval-max" ;
	rdfs:label "Interval-max" ;
	uml-model:name "max" ;
	uml-model:association uml-element:A_max_interval ;
	rdfs:range element:ValueSpecification ;
	rdfs:comment "'Refers to the ValueSpecification denoting the maximum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Interval-min rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interval-min" ;
	rdfs:label "Interval-min" ;
	uml-model:name "min" ;
	uml-model:association uml-element:A_min_interval ;
	rdfs:range element:ValueSpecification ;
	rdfs:comment "'Refers to the ValueSpecification denoting the minimum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:IntervalConstraint xmi:type uml:Class ;
	xmi:id "IntervalConstraint" ;
	uml-model:name "IntervalConstraint" ;
	rdfs:comment "'An IntervalConstraint is a Constraint that is specified by an Interval."@en ;
	rdfs:subClassOf element:Constraint ;
	uml-model:ownedAttribute property:IntervalConstraint-specification .

property:IntervalConstraint-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "IntervalConstraint-specification" ;
	rdfs:label "IntervalConstraint-specification" ;
	uml-model:name "specification" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_specification_intervalConstraint ;
	rdfs:range element:Interval ;
	rdfs:comment "'The Interval that specifies the condition of the IntervalConstraint."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LiteralBoolean xmi:type uml:Class ;
	xmi:id "LiteralBoolean" ;
	uml-model:name "LiteralBoolean" ;
	rdfs:comment "'A LiteralBoolean is a specification of a Boolean value."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:ownedAttribute property:LiteralBoolean-value ;
	uml-model:operation element:LiteralBoolean-booleanValue, element:LiteralBoolean-isComputable .

property:LiteralBoolean-value rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LiteralBoolean-value" ;
	rdfs:label "LiteralBoolean-value" ;
	uml-model:name "value" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'The specified Boolean value."@en ;
	xmi:defaultValue element:LiteralBoolean-value-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LiteralBoolean-value-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "LiteralBoolean-value-_defaultValue" .

element:LiteralBoolean-booleanValue uml-model:redefines element:ValueSpecification-booleanValue ;
	rdfs:comment "'The query booleanValue() gives the value."@en ;
	uml-model:rule element:LiteralBoolean-booleanValue-spec ;
	uml-model:returns element:LiteralBoolean-booleanValue-result .

element:LiteralBoolean-booleanValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralBoolean-booleanValue-spec-_specification .

element:LiteralBoolean-booleanValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value)"^^<http://www.omg.org/spec/OCL> .

element:LiteralBoolean-booleanValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralBoolean-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralBoolean-isComputable-spec ;
	uml-model:returns element:LiteralBoolean-isComputable-result .

element:LiteralBoolean-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralBoolean-isComputable-spec-_specification .

element:LiteralBoolean-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralBoolean-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralInteger xmi:type uml:Class ;
	xmi:id "LiteralInteger" ;
	uml-model:name "LiteralInteger" ;
	rdfs:comment "'A LiteralInteger is a specification of an Integer value."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:ownedAttribute property:LiteralInteger-value ;
	uml-model:operation element:LiteralInteger-integerValue, element:LiteralInteger-isComputable .

property:LiteralInteger-value rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LiteralInteger-value" ;
	rdfs:label "LiteralInteger-value" ;
	uml-model:name "value" ;
	rdfs:range uml-primitives:Integer ;
	rdfs:comment "'The specified Integer value."@en ;
	xmi:defaultValue element:LiteralInteger-value-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LiteralInteger-value-_defaultValue xmi:type uml:LiteralInteger ;
	xmi:id "LiteralInteger-value-_defaultValue" .

element:LiteralInteger-integerValue uml-model:redefines element:ValueSpecification-integerValue ;
	rdfs:comment "'The query integerValue() gives the value."@en ;
	uml-model:rule element:LiteralInteger-integerValue-spec ;
	uml-model:returns element:LiteralInteger-integerValue-result .

element:LiteralInteger-integerValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralInteger-integerValue-spec-_specification .

element:LiteralInteger-integerValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value)"^^<http://www.omg.org/spec/OCL> .

element:LiteralInteger-integerValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:LiteralInteger-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralInteger-isComputable-spec ;
	uml-model:returns element:LiteralInteger-isComputable-result .

element:LiteralInteger-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralInteger-isComputable-spec-_specification .

element:LiteralInteger-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralInteger-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralNull xmi:type uml:Class ;
	xmi:id "LiteralNull" ;
	uml-model:name "LiteralNull" ;
	rdfs:comment "'A LiteralNull specifies the lack of a value."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:operation element:LiteralNull-isComputable, element:LiteralNull-isNull .

element:LiteralNull-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralNull-isComputable-spec ;
	uml-model:returns element:LiteralNull-isComputable-result .

element:LiteralNull-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralNull-isComputable-spec-_specification .

element:LiteralNull-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralNull-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralNull-isNull uml-model:redefines element:ValueSpecification-isNull ;
	rdfs:comment "'The query isNull() returns true."@en ;
	uml-model:rule element:LiteralNull-isNull-spec ;
	uml-model:returns element:LiteralNull-isNull-result .

element:LiteralNull-isNull-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralNull-isNull-spec-_specification .

element:LiteralNull-isNull-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralNull-isNull-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralReal xmi:type uml:Class ;
	xmi:id "LiteralReal" ;
	uml-model:name "LiteralReal" ;
	rdfs:comment "'A LiteralReal is a specification of a Real value."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:ownedAttribute property:LiteralReal-value ;
	uml-model:operation element:LiteralReal-isComputable, element:LiteralReal-realValue .

property:LiteralReal-value rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LiteralReal-value" ;
	rdfs:label "LiteralReal-value" ;
	uml-model:name "value" ;
	rdfs:range uml-primitives:Real ;
	rdfs:comment "'The specified Real value."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LiteralReal-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralReal-isComputable-spec ;
	uml-model:returns element:LiteralReal-isComputable-result .

element:LiteralReal-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralReal-isComputable-spec-_specification .

element:LiteralReal-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralReal-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralReal-realValue uml-model:redefines element:ValueSpecification-realValue ;
	rdfs:comment "'The query realValue() gives the value."@en ;
	uml-model:rule element:LiteralReal-realValue-spec ;
	uml-model:returns element:LiteralReal-realValue-result .

element:LiteralReal-realValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralReal-realValue-spec-_specification .

element:LiteralReal-realValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value)"^^<http://www.omg.org/spec/OCL> .

element:LiteralReal-realValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Real> .

element:LiteralSpecification xmi:type uml:Class ;
	xmi:id "LiteralSpecification" ;
	uml-model:name "LiteralSpecification" ;
	rdfs:comment "'A LiteralSpecification identifies a literal constant being modeled."@en ;
	rdfs:subClassOf element:ValueSpecification .

element:LiteralString xmi:type uml:Class ;
	xmi:id "LiteralString" ;
	uml-model:name "LiteralString" ;
	rdfs:comment "'A LiteralString is a specification of a String value."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:ownedAttribute property:LiteralString-value ;
	uml-model:operation element:LiteralString-isComputable, element:LiteralString-stringValue .

property:LiteralString-value rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LiteralString-value" ;
	rdfs:label "LiteralString-value" ;
	uml-model:name "value" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The specified String value."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:LiteralString-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralString-isComputable-spec ;
	uml-model:returns element:LiteralString-isComputable-result .

element:LiteralString-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralString-isComputable-spec-_specification .

element:LiteralString-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralString-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralString-stringValue uml-model:redefines element:ValueSpecification-stringValue ;
	rdfs:comment "'The query stringValue() gives the value."@en ;
	uml-model:rule element:LiteralString-stringValue-spec ;
	uml-model:returns element:LiteralString-stringValue-result .

element:LiteralString-stringValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralString-stringValue-spec-_specification .

element:LiteralString-stringValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value)"^^<http://www.omg.org/spec/OCL> .

element:LiteralString-stringValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:LiteralUnlimitedNatural xmi:type uml:Class ;
	xmi:id "LiteralUnlimitedNatural" ;
	uml-model:name "LiteralUnlimitedNatural" ;
	rdfs:comment "'A LiteralUnlimitedNatural is a specification of an UnlimitedNatural number."@en ;
	rdfs:subClassOf element:LiteralSpecification ;
	uml-model:ownedAttribute property:LiteralUnlimitedNatural-value ;
	uml-model:operation element:LiteralUnlimitedNatural-isComputable, element:LiteralUnlimitedNatural-unlimitedValue .

property:LiteralUnlimitedNatural-value rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LiteralUnlimitedNatural-value" ;
	rdfs:label "LiteralUnlimitedNatural-value" ;
	uml-model:name "value" ;
	rdfs:range uml-primitives:UnlimitedNatural ;
	rdfs:comment "'The specified UnlimitedNatural value."@en ;
	xmi:defaultValue element:LiteralUnlimitedNatural-value-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LiteralUnlimitedNatural-value-_defaultValue xmi:type uml:LiteralUnlimitedNatural ;
	xmi:id "LiteralUnlimitedNatural-value-_defaultValue" .

element:LiteralUnlimitedNatural-isComputable uml-model:redefines element:ValueSpecification-isComputable ;
	rdfs:comment "'The query isComputable() is redefined to be true."@en ;
	uml-model:rule element:LiteralUnlimitedNatural-isComputable-spec ;
	uml-model:returns element:LiteralUnlimitedNatural-isComputable-result .

element:LiteralUnlimitedNatural-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralUnlimitedNatural-isComputable-spec-_specification .

element:LiteralUnlimitedNatural-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:LiteralUnlimitedNatural-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:LiteralUnlimitedNatural-unlimitedValue uml-model:redefines element:ValueSpecification-unlimitedValue ;
	rdfs:comment "'The query unlimitedValue() gives the value."@en ;
	uml-model:rule element:LiteralUnlimitedNatural-unlimitedValue-spec ;
	uml-model:returns element:LiteralUnlimitedNatural-unlimitedValue-result .

element:LiteralUnlimitedNatural-unlimitedValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:LiteralUnlimitedNatural-unlimitedValue-spec-_specification .

element:LiteralUnlimitedNatural-unlimitedValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value)"^^<http://www.omg.org/spec/OCL> .

element:LiteralUnlimitedNatural-unlimitedValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:Observation xmi:type uml:Class ;
	xmi:id "Observation" ;
	uml-model:name "Observation" ;
	rdfs:comment "'Observation specifies a value determined by observing an event or events that occur relative to other model Elements."@en ;
	rdfs:subClassOf element:PackageableElement .

element:OpaqueExpression xmi:type uml:Class ;
	xmi:id "OpaqueExpression" ;
	uml-model:name "OpaqueExpression" ;
	rdfs:comment "'An OpaqueExpression is a ValueSpecification that specifies the computation of a collection of values either in terms of a UML Behavior or based on a textual statement in a language other than UML"@en ;
	uml-model:rule element:OpaqueExpression-language_body_size, element:OpaqueExpression-one_return_result_parameter, element:OpaqueExpression-only_in_or_return_parameters ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:OpaqueExpression-behavior, property:OpaqueExpression-body, property:OpaqueExpression-language, property:OpaqueExpression-result ;
	uml-model:operation element:OpaqueExpression-isIntegral, element:OpaqueExpression-isNonNegative, element:OpaqueExpression-isPositive, element:OpaqueExpression-result.1, element:OpaqueExpression-value .

element:OpaqueExpression-language_body_size rdfs:comment "'If the language attribute is not empty, then the size of the body and language arrays must be the same."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-language_body_size-_specification .

element:OpaqueExpression-language_body_size-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "language->notEmpty() implies (_'body'->size() = language->size())"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-one_return_result_parameter rdfs:comment "'The behavior must have exactly one return result parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-one_return_result_parameter-_specification .

element:OpaqueExpression-one_return_result_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "behavior <> null implies\n   behavior.ownedParameter->select(direction=ParameterDirectionKind::return)->size() = 1"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-only_in_or_return_parameters rdfs:comment "'The behavior may only have non-stream in or return parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-only_in_or_return_parameters-_specification .

element:OpaqueExpression-only_in_or_return_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "behavior <> null implies behavior.ownedParameter->forAll(not isStream and\n(direction=ParameterDirectionKind::in or direction=ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

property:OpaqueExpression-behavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueExpression-behavior" ;
	rdfs:label "OpaqueExpression-behavior" ;
	uml-model:name "behavior" ;
	uml-model:association uml-element:A_behavior_opaqueExpression ;
	rdfs:range element:Behavior ;
	rdfs:comment "'Specifies the behavior of the OpaqueExpression as a UML Behavior."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:OpaqueExpression-body rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueExpression-body" ;
	rdfs:label "OpaqueExpression-body" ;
	uml-model:name "body" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'A textual definition of the behavior of the OpaqueExpression, possibly in multiple languages."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueExpression-language rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueExpression-language" ;
	rdfs:label "OpaqueExpression-language" ;
	uml-model:name "language" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Specifies the languages used to express the textual bodies of the OpaqueExpression.  Languages are matched to body Strings by order. The interpretation of the body depends on the languages. If the languages are unspecified, they may be implicit from the expression body or the context."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueExpression-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueExpression-result" ;
	rdfs:label "OpaqueExpression-result" ;
	uml-model:name "result" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_opaqueExpression ;
	rdfs:range element:Parameter ;
	rdfs:comment "'If an OpaqueExpression is specified using a UML Behavior, then this refers to the single required return Parameter of that Behavior. When the Behavior completes execution, the values on this Parameter give the result of evaluating the OpaqueExpression."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:OpaqueExpression-result.1-spec .

element:OpaqueExpression-isIntegral rdfs:comment "'The query isIntegral() tells whether an expression is intended to produce an Integer."@en ;
	uml-model:rule element:OpaqueExpression-isIntegral-spec ;
	uml-model:returns element:OpaqueExpression-isIntegral-result .

element:OpaqueExpression-isIntegral-spec rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-isIntegral-spec-_specification .

element:OpaqueExpression-isIntegral-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-isIntegral-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:OpaqueExpression-isNonNegative rdfs:comment "'The query isNonNegative() tells whether an integer expression has a non-negative value."@en ;
	uml-model:rule element:OpaqueExpression-isNonNegative-pre, element:OpaqueExpression-isNonNegative-spec ;
	uml-model:returns element:OpaqueExpression-isNonNegative-result .

element:OpaqueExpression-isNonNegative-pre rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-isNonNegative-pre-_specification .

element:OpaqueExpression-isNonNegative-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.isIntegral()"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-isNonNegative-spec rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-isNonNegative-spec-_specification .

element:OpaqueExpression-isNonNegative-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-isNonNegative-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:OpaqueExpression-isPositive rdfs:comment "'The query isPositive() tells whether an integer expression has a positive value."@en ;
	uml-model:rule element:OpaqueExpression-isPositive-spec, element:OpaqueExpression-isPositive-pre ;
	uml-model:returns element:OpaqueExpression-isPositive-result .

element:OpaqueExpression-isPositive-spec rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-isPositive-spec-_specification .

element:OpaqueExpression-isPositive-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-isPositive-pre rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-isPositive-pre-_specification .

element:OpaqueExpression-isPositive-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.isIntegral()"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-isPositive-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:OpaqueExpression-result.1 rdfs:comment "'Derivation for OpaqueExpression::/result "@en ;
	uml-model:returns element:OpaqueExpression-result.1-result .

element:OpaqueExpression-result.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-result.1-spec-_specification .

element:OpaqueExpression-result.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if behavior = null then\n   null\nelse\n   behavior.ownedParameter->first()\nendif)"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-result.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter .

element:OpaqueExpression-value rdfs:comment "'The query value() gives an integer value for an expression intended to produce one."@en ;
	uml-model:rule element:OpaqueExpression-value-pre, element:OpaqueExpression-value-spec ;
	uml-model:returns element:OpaqueExpression-value-result .

element:OpaqueExpression-value-pre rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-value-pre-_specification .

element:OpaqueExpression-value-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.isIntegral()"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-value-spec rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueExpression-value-spec-_specification .

element:OpaqueExpression-value-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (0)"^^<http://www.omg.org/spec/OCL> .

element:OpaqueExpression-value-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:StringExpression xmi:type uml:Class ;
	xmi:id "StringExpression" ;
	uml-model:name "StringExpression" ;
	rdfs:comment "'A StringExpression is an Expression that specifies a String value that is derived by concatenating a sequence of operands with String values or a sequence of subExpressions, some of which might be template parameters."@en ;
	uml-model:rule element:StringExpression-operands, element:StringExpression-subexpressions ;
	rdfs:subClassOf element:TemplateableElement, element:Expression ;
	uml-model:ownedAttribute property:StringExpression-owningExpression, property:StringExpression-subExpression ;
	uml-model:operation element:StringExpression-stringValue .

element:StringExpression-operands rdfs:comment "'All the operands of a StringExpression must be LiteralStrings"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StringExpression-operands-_specification .

element:StringExpression-operands-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "operand->forAll (oclIsKindOf (LiteralString))"^^<http://www.omg.org/spec/OCL> .

element:StringExpression-subexpressions rdfs:comment "'If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to define a collating sequence between operands and subexpressions)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StringExpression-subexpressions-_specification .

element:StringExpression-subexpressions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty() endif"^^<http://www.omg.org/spec/OCL> .

property:StringExpression-owningExpression rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StringExpression-owningExpression" ;
	rdfs:label "StringExpression-owningExpression" ;
	uml-model:name "owningExpression" ;
	uml-model:association uml-element:A_subExpression_owningExpression ;
	rdfs:range element:StringExpression ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The StringExpression of which this StringExpression is a subExpression."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:StringExpression-subExpression rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StringExpression-subExpression" ;
	rdfs:label "StringExpression-subExpression" ;
	uml-model:name "subExpression" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_subExpression_owningExpression ;
	rdfs:range element:StringExpression ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The StringExpressions that constitute this StringExpression."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StringExpression-stringValue uml-model:redefines element:ValueSpecification-stringValue ;
	rdfs:comment "'The query stringValue() returns the String resulting from concatenating, in order, all the component String values of all the operands or subExpressions that are part of the StringExpression."@en ;
	uml-model:rule element:StringExpression-stringValue-spec ;
	uml-model:returns element:StringExpression-stringValue-result .

element:StringExpression-stringValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:StringExpression-stringValue-spec-_specification .

element:StringExpression-stringValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if subExpression->notEmpty()\nthen subExpression->iterate(se; stringValue: String = '' | stringValue.concat(se.stringValue()))\nelse operand->iterate(op; stringValue: String = '' | stringValue.concat(op.stringValue()))\nendif)"^^<http://www.omg.org/spec/OCL> .

element:StringExpression-stringValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:TimeConstraint xmi:type uml:Class ;
	xmi:id "TimeConstraint" ;
	uml-model:name "TimeConstraint" ;
	rdfs:comment "'A TimeConstraint is a Constraint that refers to a TimeInterval."@en ;
	uml-model:rule element:TimeConstraint-has_one_constrainedElement ;
	rdfs:subClassOf element:IntervalConstraint ;
	uml-model:ownedAttribute property:TimeConstraint-firstEvent, property:TimeConstraint-specification .

element:TimeConstraint-has_one_constrainedElement rdfs:comment "'A TimeConstraint has one constrainedElement."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TimeConstraint-has_one_constrainedElement-_specification .

element:TimeConstraint-has_one_constrainedElement-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "constrainedElement->size() = 1"^^<http://www.omg.org/spec/OCL> .

property:TimeConstraint-firstEvent rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeConstraint-firstEvent" ;
	rdfs:label "TimeConstraint-firstEvent" ;
	uml-model:name "firstEvent" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'The value of firstEvent is related to the constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within the constrainedElement."@en ;
	xmi:defaultValue element:TimeConstraint-firstEvent-_defaultValue ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:TimeConstraint-firstEvent-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "TimeConstraint-firstEvent-_defaultValue" ;
	uml-model:value "true" .

property:TimeConstraint-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeConstraint-specification" ;
	rdfs:label "TimeConstraint-specification" ;
	uml-model:name "specification" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_specification_timeConstraint ;
	rdfs:range element:TimeInterval ;
	rdfs:comment "'TheTimeInterval constraining the duration."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TimeExpression xmi:type uml:Class ;
	xmi:id "TimeExpression" ;
	uml-model:name "TimeExpression" ;
	rdfs:comment "'A TimeExpression is a ValueSpecification that represents a time value."@en ;
	uml-model:rule element:TimeExpression-no_expr_requires_observation ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:TimeExpression-expr, property:TimeExpression-observation .

element:TimeExpression-no_expr_requires_observation rdfs:comment "'If a TimeExpression has no expr, then it must have a single observation that is a TimeObservation."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TimeExpression-no_expr_requires_observation-_specification .

element:TimeExpression-no_expr_requires_observation-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(TimeObservation)))"^^<http://www.omg.org/spec/OCL> .

property:TimeExpression-expr rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeExpression-expr" ;
	rdfs:label "TimeExpression-expr" ;
	uml-model:name "expr" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_expr_timeExpression ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A ValueSpecification that evaluates to the value of the TimeExpression."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TimeExpression-observation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeExpression-observation" ;
	rdfs:label "TimeExpression-observation" ;
	uml-model:name "observation" ;
	uml-model:association uml-element:A_observation_timeExpression ;
	rdfs:range element:Observation ;
	rdfs:comment "'Refers to the Observations that are involved in the computation of the TimeExpression value."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:TimeInterval xmi:type uml:Class ;
	xmi:id "TimeInterval" ;
	uml-model:name "TimeInterval" ;
	rdfs:comment "'A TimeInterval defines the range between two TimeExpressions."@en ;
	rdfs:subClassOf element:Interval ;
	uml-model:ownedAttribute property:TimeInterval-max, property:TimeInterval-min .

property:TimeInterval-max rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeInterval-max" ;
	rdfs:label "TimeInterval-max" ;
	uml-model:name "max" ;
	uml-model:association uml-element:A_max_timeInterval ;
	rdfs:range element:TimeExpression ;
	rdfs:comment "'Refers to the TimeExpression denoting the maximum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TimeInterval-min rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeInterval-min" ;
	rdfs:label "TimeInterval-min" ;
	uml-model:name "min" ;
	uml-model:association uml-element:A_min_timeInterval ;
	rdfs:range element:TimeExpression ;
	rdfs:comment "'Refers to the TimeExpression denoting the minimum value of the range."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TimeObservation xmi:type uml:Class ;
	xmi:id "TimeObservation" ;
	uml-model:name "TimeObservation" ;
	rdfs:comment "'A TimeObservation is a reference to a time instant during an execution. It points out the NamedElement in the model to observe and whether the observation is when this NamedElement is entered or when it is exited."@en ;
	rdfs:subClassOf element:Observation ;
	uml-model:ownedAttribute property:TimeObservation-event, property:TimeObservation-firstEvent .

property:TimeObservation-event rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeObservation-event" ;
	rdfs:label "TimeObservation-event" ;
	uml-model:name "event" ;
	uml-model:association uml-element:A_event_timeObservation ;
	rdfs:range element:NamedElement ;
	rdfs:comment "'The TimeObservation is determined by the entering or exiting of the event Element during execution."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TimeObservation-firstEvent rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeObservation-firstEvent" ;
	rdfs:label "TimeObservation-firstEvent" ;
	uml-model:name "firstEvent" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'The value of firstEvent is related to the event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the event Element. If firstEvent is false, then the corresponding observation event is the time instant the execution exits the event Element."@en ;
	xmi:defaultValue element:TimeObservation-firstEvent-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TimeObservation-firstEvent-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "TimeObservation-firstEvent-_defaultValue" ;
	uml-model:value "true" .

element:ValueSpecification xmi:type uml:Class ;
	xmi:id "ValueSpecification" ;
	uml-model:name "ValueSpecification" ;
	rdfs:comment "'A ValueSpecification is the specification of a (possibly empty) set of values. A ValueSpecification is a ParameterableElement that may be exposed as a formal TemplateParameter and provided as the actual parameter in the binding of a template."@en ;
	rdfs:subClassOf element:TypedElement, element:PackageableElement ;
	uml-model:operation element:ValueSpecification-booleanValue, element:ValueSpecification-integerValue, element:ValueSpecification-isCompatibleWith, element:ValueSpecification-isComputable, element:ValueSpecification-isNull, element:ValueSpecification-realValue, element:ValueSpecification-stringValue, element:ValueSpecification-unlimitedValue .

element:ValueSpecification-booleanValue rdfs:comment "'The query booleanValue() gives a single Boolean value when one can be computed."@en ;
	uml-model:rule element:ValueSpecification-booleanValue-spec ;
	uml-model:returns element:ValueSpecification-booleanValue-result .

element:ValueSpecification-booleanValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-booleanValue-spec-_specification .

element:ValueSpecification-booleanValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (null)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-booleanValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ValueSpecification-integerValue rdfs:comment "'The query integerValue() gives a single Integer value when one can be computed."@en ;
	uml-model:rule element:ValueSpecification-integerValue-spec ;
	uml-model:returns element:ValueSpecification-integerValue-result .

element:ValueSpecification-integerValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-integerValue-spec-_specification .

element:ValueSpecification-integerValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (null)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-integerValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:ValueSpecification-isCompatibleWith uml-model:redefines element:ParameterableElement-isCompatibleWith ;
	rdfs:comment "'The query isCompatibleWith() determines if this ValueSpecification is compatible with the specified ParameterableElement. This ValueSpecification is compatible with ParameterableElement p if the kind of this ValueSpecification is the same as or a subtype of the kind of p. Further, if p is a TypedElement, then the type of this ValueSpecification must be conformant with the type of p."@en ;
	uml-model:rule element:ValueSpecification-isCompatibleWith-spec ;
	uml-model:returns element:ValueSpecification-isCompatibleWith-result .

element:ValueSpecification-isCompatibleWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-isCompatibleWith-spec-_specification .

element:ValueSpecification-isCompatibleWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oclIsKindOf(p.oclType()) and (p.oclIsKindOf(TypedElement) implies \nself.type.conformsTo(p.oclAsType(TypedElement).type)))"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-isCompatibleWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ValueSpecification-isCompatibleWith-p rdf:type uml:Parameter ;
	uml-model:name "p" ;
	uml-model:parameterType element:ParameterableElement .

element:ValueSpecification-isComputable rdfs:comment "'The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all ValueSpecifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute at least the value of all LiteralSpecifications."@en ;
	uml-model:rule element:ValueSpecification-isComputable-spec ;
	uml-model:returns element:ValueSpecification-isComputable-result .

element:ValueSpecification-isComputable-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-isComputable-spec-_specification .

element:ValueSpecification-isComputable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-isComputable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ValueSpecification-isNull rdfs:comment "'The query isNull() returns true when it can be computed that the value is null."@en ;
	uml-model:rule element:ValueSpecification-isNull-spec ;
	uml-model:returns element:ValueSpecification-isNull-result .

element:ValueSpecification-isNull-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-isNull-spec-_specification .

element:ValueSpecification-isNull-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-isNull-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ValueSpecification-realValue rdfs:comment "'The query realValue() gives a single Real value when one can be computed."@en ;
	uml-model:rule element:ValueSpecification-realValue-spec ;
	uml-model:returns element:ValueSpecification-realValue-result .

element:ValueSpecification-realValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-realValue-spec-_specification .

element:ValueSpecification-realValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (null)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-realValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Real> .

element:ValueSpecification-stringValue rdfs:comment "'The query stringValue() gives a single String value when one can be computed."@en ;
	uml-model:rule element:ValueSpecification-stringValue-spec ;
	uml-model:returns element:ValueSpecification-stringValue-result .

element:ValueSpecification-stringValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-stringValue-spec-_specification .

element:ValueSpecification-stringValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (null)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-stringValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:ValueSpecification-unlimitedValue rdfs:comment "'The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed."@en ;
	uml-model:rule element:ValueSpecification-unlimitedValue-spec ;
	uml-model:returns element:ValueSpecification-unlimitedValue-result .

element:ValueSpecification-unlimitedValue-spec rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecification-unlimitedValue-spec-_specification .

element:ValueSpecification-unlimitedValue-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (null)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecification-unlimitedValue-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:A_event_timeObservation xmi:type uml:Association ;
	xmi:id "A_event_timeObservation" ;
	uml-model:name "A_event_timeObservation" .

element:A_event_timeObservation-timeObservation xmi:type uml:Property ;
	xmi:id "A_event_timeObservation-timeObservation" ;
	uml-model:name "timeObservation" ;
	uml-model:type "TimeObservation" ;
	uml-model:association uml-element:A_event_timeObservation .

element:A_max_timeInterval xmi:type uml:Association ;
	xmi:id "A_max_timeInterval" ;
	uml-model:name "A_max_timeInterval" ;
	rdfs:subClassOf element:A_max_interval .

element:A_max_timeInterval-timeInterval xmi:type uml:Property ;
	xmi:id "A_max_timeInterval-timeInterval" ;
	uml-model:name "timeInterval" ;
	uml-model:type "TimeInterval" ;
	uml-model:association uml-element:A_max_timeInterval .

element:A_min_timeInterval xmi:type uml:Association ;
	xmi:id "A_min_timeInterval" ;
	uml-model:name "A_min_timeInterval" ;
	rdfs:subClassOf element:A_min_interval .

element:A_min_timeInterval-timeInterval xmi:type uml:Property ;
	xmi:id "A_min_timeInterval-timeInterval" ;
	uml-model:name "timeInterval" ;
	uml-model:type "TimeInterval" ;
	uml-model:association uml-element:A_min_timeInterval .

element:A_expr_timeExpression xmi:type uml:Association ;
	xmi:id "A_expr_timeExpression" ;
	uml-model:name "A_expr_timeExpression" .

element:A_expr_timeExpression-timeExpression xmi:type uml:Property ;
	xmi:id "A_expr_timeExpression-timeExpression" ;
	uml-model:name "timeExpression" ;
	uml-model:type "TimeExpression" ;
	uml-model:association uml-element:A_expr_timeExpression ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_observation_timeExpression xmi:type uml:Association ;
	xmi:id "A_observation_timeExpression" ;
	uml-model:name "A_observation_timeExpression" .

element:A_observation_timeExpression-timeExpression xmi:type uml:Property ;
	xmi:id "A_observation_timeExpression-timeExpression" ;
	uml-model:name "timeExpression" ;
	uml-model:type "TimeExpression" ;
	uml-model:association uml-element:A_observation_timeExpression .

element:A_specification_timeConstraint xmi:type uml:Association ;
	xmi:id "A_specification_timeConstraint" ;
	uml-model:name "A_specification_timeConstraint" ;
	rdfs:subClassOf element:A_specification_intervalConstraint .

element:A_specification_timeConstraint-timeConstraint xmi:type uml:Property ;
	xmi:id "A_specification_timeConstraint-timeConstraint" ;
	uml-model:name "timeConstraint" ;
	uml-model:type "TimeConstraint" ;
	uml-model:association uml-element:A_specification_timeConstraint .

element:A_subExpression_owningExpression xmi:type uml:Association ;
	xmi:id "A_subExpression_owningExpression" ;
	uml-model:name "A_subExpression_owningExpression" .

element:A_result_opaqueExpression xmi:type uml:Association ;
	xmi:id "A_result_opaqueExpression" ;
	uml-model:name "A_result_opaqueExpression" .

element:A_result_opaqueExpression-opaqueExpression xmi:type uml:Property ;
	xmi:id "A_result_opaqueExpression-opaqueExpression" ;
	uml-model:name "opaqueExpression" ;
	uml-model:type "OpaqueExpression" ;
	uml-model:association uml-element:A_result_opaqueExpression .

element:A_behavior_opaqueExpression xmi:type uml:Association ;
	xmi:id "A_behavior_opaqueExpression" ;
	uml-model:name "A_behavior_opaqueExpression" .

element:A_behavior_opaqueExpression-opaqueExpression xmi:type uml:Property ;
	xmi:id "A_behavior_opaqueExpression-opaqueExpression" ;
	uml-model:name "opaqueExpression" ;
	uml-model:type "OpaqueExpression" ;
	uml-model:association uml-element:A_behavior_opaqueExpression .

element:A_specification_intervalConstraint xmi:type uml:Association ;
	xmi:id "A_specification_intervalConstraint" ;
	uml-model:name "A_specification_intervalConstraint" ;
	rdfs:subClassOf element:A_specification_owningConstraint .

element:A_specification_intervalConstraint-intervalConstraint xmi:type uml:Property ;
	xmi:id "A_specification_intervalConstraint-intervalConstraint" ;
	uml-model:name "intervalConstraint" ;
	uml-model:type "IntervalConstraint" ;
	uml-model:association uml-element:A_specification_intervalConstraint .

element:A_max_interval xmi:type uml:Association ;
	xmi:id "A_max_interval" ;
	uml-model:name "A_max_interval" .

element:A_max_interval-interval xmi:type uml:Property ;
	xmi:id "A_max_interval-interval" ;
	uml-model:name "interval" ;
	uml-model:type "Interval" ;
	uml-model:association uml-element:A_max_interval .

element:A_min_interval xmi:type uml:Association ;
	xmi:id "A_min_interval" ;
	uml-model:name "A_min_interval" .

element:A_min_interval-interval xmi:type uml:Property ;
	xmi:id "A_min_interval-interval" ;
	uml-model:name "interval" ;
	uml-model:type "Interval" ;
	uml-model:association uml-element:A_min_interval .

element:A_operand_expression xmi:type uml:Association ;
	xmi:id "A_operand_expression" ;
	uml-model:name "A_operand_expression" .

element:A_operand_expression-expression xmi:type uml:Property ;
	xmi:id "A_operand_expression-expression" ;
	uml-model:name "expression" ;
	uml-model:type "Expression" ;
	uml-model:association uml-element:A_operand_expression ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_event_durationObservation xmi:type uml:Association ;
	xmi:id "A_event_durationObservation" ;
	uml-model:name "A_event_durationObservation" .

element:A_event_durationObservation-durationObservation xmi:type uml:Property ;
	xmi:id "A_event_durationObservation-durationObservation" ;
	uml-model:name "durationObservation" ;
	uml-model:type "DurationObservation" ;
	uml-model:association uml-element:A_event_durationObservation .

element:A_max_durationInterval xmi:type uml:Association ;
	xmi:id "A_max_durationInterval" ;
	uml-model:name "A_max_durationInterval" ;
	rdfs:subClassOf element:A_max_interval .

element:A_max_durationInterval-durationInterval xmi:type uml:Property ;
	xmi:id "A_max_durationInterval-durationInterval" ;
	uml-model:name "durationInterval" ;
	uml-model:type "DurationInterval" ;
	uml-model:association uml-element:A_max_durationInterval .

element:A_min_durationInterval xmi:type uml:Association ;
	xmi:id "A_min_durationInterval" ;
	uml-model:name "A_min_durationInterval" ;
	rdfs:subClassOf element:A_min_interval .

element:A_min_durationInterval-durationInterval xmi:type uml:Property ;
	xmi:id "A_min_durationInterval-durationInterval" ;
	uml-model:name "durationInterval" ;
	uml-model:type "DurationInterval" ;
	uml-model:association uml-element:A_min_durationInterval .

element:A_specification_durationConstraint xmi:type uml:Association ;
	xmi:id "A_specification_durationConstraint" ;
	uml-model:name "A_specification_durationConstraint" ;
	rdfs:subClassOf element:A_specification_intervalConstraint .

element:A_specification_durationConstraint-durationConstraint xmi:type uml:Property ;
	xmi:id "A_specification_durationConstraint-durationConstraint" ;
	uml-model:name "durationConstraint" ;
	uml-model:type "DurationConstraint" ;
	uml-model:association uml-element:A_specification_durationConstraint .

element:A_expr_duration xmi:type uml:Association ;
	xmi:id "A_expr_duration" ;
	uml-model:name "A_expr_duration" .

element:A_expr_duration-duration xmi:type uml:Property ;
	xmi:id "A_expr_duration-duration" ;
	uml-model:name "duration" ;
	uml-model:type "Duration" ;
	uml-model:association uml-element:A_expr_duration ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_observation_duration xmi:type uml:Association ;
	xmi:id "A_observation_duration" ;
	uml-model:name "A_observation_duration" .

element:A_observation_duration-duration xmi:type uml:Property ;
	xmi:id "A_observation_duration-duration" ;
	uml-model:name "duration" ;
	uml-model:type "Duration" ;
	uml-model:association uml-element:A_observation_duration .

element:UseCases xmi:type uml:Package ;
	xmi:id "UseCases" ;
	uml-model:name "UseCases" .

uml-import:UseCases-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "UseCases-_packageImport.0" ;
	uml-model:packagedElement element:UseCases ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:UseCases-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "UseCases-_packageImport.1" ;
	uml-model:packagedElement element:UseCases ;
	uml-model:importedPackage element:CommonBehavior .

element:Actor xmi:type uml:Class ;
	xmi:id "Actor" ;
	uml-model:name "Actor" ;
	rdfs:comment "'An Actor specifies a role played by a user or any other system that interacts with the subject."@en ;
	uml-model:rule element:Actor-associations, element:Actor-must_have_name ;
	rdfs:subClassOf element:BehavioredClassifier .

element:Actor-associations rdfs:comment "'An Actor can only have Associations to UseCases, Components, and Classes. Furthermore these Associations must be binary."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Actor-associations-_specification .

element:Actor-associations-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "Association.allInstances()->forAll( a |\n  a.memberEnd->collect(type)->includes(self) implies\n  (\n    a.memberEnd->size() = 2 and\n    let actorEnd : Property = a.memberEnd->any(type = self) in\n      actorEnd.opposite.class.oclIsKindOf(UseCase) or\n      ( actorEnd.opposite.class.oclIsKindOf(Class) and not\n         actorEnd.opposite.class.oclIsKindOf(Behavior))\n      )\n  )"^^<http://www.omg.org/spec/OCL> .

element:Actor-must_have_name rdfs:comment "'An Actor must have a name."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Actor-must_have_name-_specification .

element:Actor-must_have_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "name->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Extend xmi:type uml:Class ;
	xmi:id "Extend" ;
	uml-model:name "Extend" ;
	rdfs:comment "'A relationship from an extending UseCase to an extended UseCase that specifies how and when the behavior defined in the extending UseCase can be inserted into the behavior defined in the extended UseCase."@en ;
	uml-model:rule element:Extend-extension_points ;
	rdfs:subClassOf element:NamedElement, element:DirectedRelationship ;
	uml-model:ownedAttribute property:Extend-condition, property:Extend-extendedCase, property:Extend-extension, property:Extend-extensionLocation .

element:Extend-extension_points rdfs:comment "'The ExtensionPoints referenced by the Extend relationship must belong to the UseCase that is being extended."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Extend-extension_points-_specification .

element:Extend-extension_points-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "extensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))"^^<http://www.omg.org/spec/OCL> .

property:Extend-condition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extend-condition" ;
	rdfs:label "Extend-condition" ;
	uml-model:name "condition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_condition_extend ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'References the condition that must hold when the first ExtensionPoint is reached for the extension to take place. If no constraint is associated with the Extend relationship, the extension is unconditional."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Extend-extendedCase rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extend-extendedCase" ;
	rdfs:label "Extend-extendedCase" ;
	uml-model:name "extendedCase" ;
	uml-model:association uml-element:A_extendedCase_extend ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'The UseCase that is being extended."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Extend-extension rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extend-extension" ;
	rdfs:label "Extend-extension" ;
	uml-model:name "extension" ;
	uml-model:association uml-element:A_extend_extension ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:NamedElement-namespace ;
	rdfs:comment "'The UseCase that represents the extension and owns the Extend relationship."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Extend-extensionLocation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extend-extensionLocation" ;
	rdfs:label "Extend-extensionLocation" ;
	uml-model:name "extensionLocation" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_extensionLocation_extension ;
	rdfs:range element:ExtensionPoint ;
	rdfs:comment "'An ordered list of ExtensionPoints belonging to the extended UseCase, specifying where the respective behavioral fragments of the extending UseCase are to be inserted. The first fragment in the extending UseCase is associated with the first extension point in the list, the second fragment with the second point, and so on. Note that, in most practical cases, the extending UseCase has just a single behavior fragment, so that the list of ExtensionPoints is trivial."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:ExtensionPoint xmi:type uml:Class ;
	xmi:id "ExtensionPoint" ;
	uml-model:name "ExtensionPoint" ;
	rdfs:comment "'An ExtensionPoint identifies a point in the behavior of a UseCase where that behavior can be extended by the behavior of some other (extending) UseCase, as specified by an Extend relationship."@en ;
	uml-model:rule element:ExtensionPoint-must_have_name ;
	rdfs:subClassOf element:RedefinableElement ;
	uml-model:ownedAttribute property:ExtensionPoint-useCase .

element:ExtensionPoint-must_have_name rdfs:comment "'An ExtensionPoint must have a name."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExtensionPoint-must_have_name-_specification .

element:ExtensionPoint-must_have_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "name->notEmpty ()"^^<http://www.omg.org/spec/OCL> .

property:ExtensionPoint-useCase rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExtensionPoint-useCase" ;
	rdfs:label "ExtensionPoint-useCase" ;
	uml-model:name "useCase" ;
	uml-model:association uml-element:A_extensionPoint_useCase ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The UseCase that owns this ExtensionPoint."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Include xmi:type uml:Class ;
	xmi:id "Include" ;
	uml-model:name "Include" ;
	rdfs:comment "'An Include relationship specifies that a UseCase contains the behavior defined in another UseCase."@en ;
	rdfs:subClassOf element:DirectedRelationship, element:NamedElement ;
	uml-model:ownedAttribute property:Include-addition, property:Include-includingCase .

property:Include-addition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Include-addition" ;
	rdfs:label "Include-addition" ;
	uml-model:name "addition" ;
	uml-model:association uml-element:A_addition_include ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'The UseCase that is to be included."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Include-includingCase rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Include-includingCase" ;
	rdfs:label "Include-includingCase" ;
	uml-model:name "includingCase" ;
	uml-model:association uml-element:A_include_includingCase ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:NamedElement-namespace ;
	rdfs:comment "'The UseCase which includes the addition and owns the Include relationship."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:UseCase xmi:type uml:Class ;
	xmi:id "UseCase" ;
	uml-model:name "UseCase" ;
	rdfs:comment "'A UseCase specifies a set of actions performed by its subjects, which yields an observable result that is of value for one or more Actors or other stakeholders of each subject."@en ;
	uml-model:rule element:UseCase-binary_associations, element:UseCase-no_association_to_use_case, element:UseCase-cannot_include_self, element:UseCase-must_have_name ;
	rdfs:subClassOf element:BehavioredClassifier ;
	uml-model:ownedAttribute property:UseCase-extend, property:UseCase-extensionPoint, property:UseCase-include, property:UseCase-subject ;
	uml-model:operation element:UseCase-allIncludedUseCases .

element:UseCase-binary_associations rdfs:comment "'UseCases can only be involved in binary Associations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UseCase-binary_associations-_specification .

element:UseCase-binary_associations-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies a.memberEnd->size() = 2)"^^<http://www.omg.org/spec/OCL> .

element:UseCase-no_association_to_use_case rdfs:comment "'UseCases cannot have Associations to UseCases specifying the same subject."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UseCase-no_association_to_use_case-_specification .

element:UseCase-no_association_to_use_case-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies \n   (\n   let usecases: Set(UseCase) = a.memberEnd.type->select(oclIsKindOf(UseCase))->collect(oclAsType(UseCase))->asSet() in\n   usecases->size() > 1 implies usecases->collect(subject)->size() > 1\n   )\n)"^^<http://www.omg.org/spec/OCL> .

element:UseCase-cannot_include_self rdfs:comment "'A UseCase cannot include UseCases that directly or indirectly include it."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UseCase-cannot_include_self-_specification .

element:UseCase-cannot_include_self-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not allIncludedUseCases()->includes(self)"^^<http://www.omg.org/spec/OCL> .

element:UseCase-must_have_name rdfs:comment "'A UseCase must have a name."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UseCase-must_have_name-_specification .

element:UseCase-must_have_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "name -> notEmpty ()"^^<http://www.omg.org/spec/OCL> .

property:UseCase-extend rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UseCase-extend" ;
	rdfs:label "UseCase-extend" ;
	uml-model:name "extend" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_extend_extension ;
	rdfs:range element:Extend ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Extend relationships owned by this UseCase."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:UseCase-extensionPoint rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UseCase-extensionPoint" ;
	rdfs:label "UseCase-extensionPoint" ;
	uml-model:name "extensionPoint" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_extensionPoint_useCase ;
	rdfs:range element:ExtensionPoint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ExtensionPoints owned by this UseCase."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:UseCase-include rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UseCase-include" ;
	rdfs:label "UseCase-include" ;
	uml-model:name "include" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_include_includingCase ;
	rdfs:range element:Include ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Include relationships owned by this UseCase."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:UseCase-subject rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UseCase-subject" ;
	rdfs:label "UseCase-subject" ;
	uml-model:name "subject" ;
	uml-model:association uml-element:A_subject_useCase ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The subjects to which this UseCase applies. Each subject or its parts realize all the UseCases that apply to it."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:UseCase-allIncludedUseCases rdfs:comment "'The query allIncludedUseCases() returns the transitive closure of all UseCases (directly or indirectly) included by this UseCase."@en ;
	uml-model:rule element:UseCase-allIncludedUseCases-spec ;
	uml-model:returns element:UseCase-allIncludedUseCases-result .

element:UseCase-allIncludedUseCases-spec rdf:type uml:Constraint ;
	uml-model:specification element:UseCase-allIncludedUseCases-spec-_specification .

element:UseCase-allIncludedUseCases-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.include.addition->union(self.include.addition->collect(uc | uc.allIncludedUseCases()))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:UseCase-allIncludedUseCases-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:UseCase ;
	uml-model:upperValue element:UseCase-allIncludedUseCases-result-_upperValue .

element:UseCase-allIncludedUseCases-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:A_extensionPoint_useCase xmi:type uml:Association ;
	xmi:id "A_extensionPoint_useCase" ;
	uml-model:name "A_extensionPoint_useCase" .

element:A_include_includingCase xmi:type uml:Association ;
	xmi:id "A_include_includingCase" ;
	uml-model:name "A_include_includingCase" .

element:A_subject_useCase xmi:type uml:Association ;
	xmi:id "A_subject_useCase" ;
	uml-model:name "A_subject_useCase" .

element:A_extend_extension xmi:type uml:Association ;
	xmi:id "A_extend_extension" ;
	uml-model:name "A_extend_extension" .

element:A_addition_include xmi:type uml:Association ;
	xmi:id "A_addition_include" ;
	uml-model:name "A_addition_include" .

element:A_addition_include-include xmi:type uml:Property ;
	xmi:id "A_addition_include-include" ;
	uml-model:name "include" ;
	uml-model:type "Include" ;
	uml-model:association uml-element:A_addition_include ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_extensionLocation_extension xmi:type uml:Association ;
	xmi:id "A_extensionLocation_extension" ;
	uml-model:name "A_extensionLocation_extension" .

element:A_extensionLocation_extension-extension xmi:type uml:Property ;
	xmi:id "A_extensionLocation_extension-extension" ;
	uml-model:name "extension" ;
	uml-model:type "Extend" ;
	uml-model:association uml-element:A_extensionLocation_extension .

element:A_condition_extend xmi:type uml:Association ;
	xmi:id "A_condition_extend" ;
	uml-model:name "A_condition_extend" .

element:A_condition_extend-extend xmi:type uml:Property ;
	xmi:id "A_condition_extend-extend" ;
	uml-model:name "extend" ;
	uml-model:type "Extend" ;
	uml-model:association uml-element:A_condition_extend ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_extendedCase_extend xmi:type uml:Association ;
	xmi:id "A_extendedCase_extend" ;
	uml-model:name "A_extendedCase_extend" .

element:A_extendedCase_extend-extend xmi:type uml:Property ;
	xmi:id "A_extendedCase_extend-extend" ;
	uml-model:name "extend" ;
	uml-model:type "Extend" ;
	uml-model:association uml-element:A_extendedCase_extend ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:StructuredClassifiers xmi:type uml:Package ;
	xmi:id "StructuredClassifiers" ;
	uml-model:name "StructuredClassifiers" .

uml-import:StructuredClassifiers-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "StructuredClassifiers-_packageImport.0" ;
	uml-model:packagedElement element:StructuredClassifiers ;
	uml-model:importedPackage element:Classification .

uml-import:StructuredClassifiers-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "StructuredClassifiers-_packageImport.1" ;
	uml-model:packagedElement element:StructuredClassifiers ;
	uml-model:importedPackage element:Packages .

uml-import:StructuredClassifiers-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "StructuredClassifiers-_packageImport.2" ;
	uml-model:packagedElement element:StructuredClassifiers ;
	uml-model:importedPackage element:SimpleClassifiers .

uml-import:StructuredClassifiers-_packageImport.3 xmi:type uml:PackageImport ;
	xmi:id "StructuredClassifiers-_packageImport.3" ;
	uml-model:packagedElement element:StructuredClassifiers ;
	uml-model:importedPackage element:CommonStructure .

element:Association xmi:type uml:Class ;
	xmi:id "Association" ;
	uml-model:name "Association" ;
	rdfs:comment "'A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of the type of the corresponding end of the Association.&#xD;&#xA;"@en ;
	uml-model:rule element:Association-specialized_end_number, element:Association-specialized_end_types, element:Association-binary_associations, element:Association-association_ends, element:Association-ends_must_be_typed ;
	rdfs:subClassOf element:Relationship, element:Classifier ;
	uml-model:ownedAttribute property:Association-endType, property:Association-isDerived, property:Association-memberEnd, property:Association-navigableOwnedEnd, property:Association-ownedEnd ;
	uml-model:operation element:Association-endType.1 .

element:Association-specialized_end_number rdfs:comment "'An Association specializing another Association has the same number of ends as the other Association."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Association-specialized_end_number-_specification .

element:Association-specialized_end_number-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parents()->select(oclIsKindOf(Association)).oclAsType(Association)->forAll(p | p.memberEnd->size() = self.memberEnd->size())"^^<http://www.omg.org/spec/OCL> .

element:Association-specialized_end_types rdfs:comment "'When an Association specializes another Association, every end of the specific Association corresponds to an end of the general Association, and the specific end reaches the same type or a subtype of the corresponding general end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Association-specialized_end_types-_specification .

element:Association-specialized_end_types-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "Sequence{1..memberEnd->size()}->\n   forAll(i | general->select(oclIsKindOf(Association)).oclAsType(Association)->\n      forAll(ga | self.memberEnd->at(i).type.conformsTo(ga.memberEnd->at(i).type)))"^^<http://www.omg.org/spec/OCL> .

element:Association-binary_associations rdfs:comment "'Only binary Associations can be aggregations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Association-binary_associations-_specification .

element:Association-binary_associations-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "memberEnd->exists(aggregation <> AggregationKind::none) implies (memberEnd->size() = 2 and memberEnd->exists(aggregation = AggregationKind::none))"^^<http://www.omg.org/spec/OCL> .

element:Association-association_ends rdfs:comment "'Ends of Associations with more than two ends must be owned by the Association itself."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Association-association_ends-_specification .

element:Association-association_ends-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "memberEnd->size() > 2 implies ownedEnd->includesAll(memberEnd)"^^<http://www.omg.org/spec/OCL> .

element:Association-ends_must_be_typed rdf:type uml:Constraint ;
	uml-model:specification element:Association-ends_must_be_typed-_specification .

element:Association-ends_must_be_typed-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "memberEnd->forAll(type->notEmpty())"^^<http://www.omg.org/spec/OCL> .

property:Association-endType rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Association-endType" ;
	rdfs:label "Association-endType" ;
	uml-model:name "endType" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_endType_association ;
	rdfs:range element:Type ;
	uml-model:subsettedProperty uml-element:Relationship-relatedElement ;
	rdfs:comment "'The Classifiers that are used as types of the ends of the Association."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Association-endType.1-spec .

property:Association-isDerived rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Association-isDerived" ;
	rdfs:label "Association-isDerived" ;
	uml-model:name "isDerived" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the Association is derived from other model elements such as other Associations."@en ;
	xmi:defaultValue element:Association-isDerived-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Association-isDerived-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Association-isDerived-_defaultValue" .

property:Association-memberEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Association-memberEnd" ;
	rdfs:label "Association-memberEnd" ;
	uml-model:name "memberEnd" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_memberEnd_association ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Namespace-member ;
	rdfs:comment "'Each end represents participation of instances of the Classifier connected to the end in links of the Association."@en ;
	uml-model:multiplicity "2..*"^^uml-model-dt:multiplicityRange .

property:Association-navigableOwnedEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Association-navigableOwnedEnd" ;
	rdfs:label "Association-navigableOwnedEnd" ;
	uml-model:name "navigableOwnedEnd" ;
	uml-model:association uml-element:A_navigableOwnedEnd_association ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Association-ownedEnd ;
	rdfs:comment "'The navigable ends that are owned by the Association itself."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Association-ownedEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Association-ownedEnd" ;
	rdfs:label "Association-ownedEnd" ;
	uml-model:name "ownedEnd" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedEnd_owningAssociation ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Association-memberEnd, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ends that are owned by the Association itself."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Association-endType.1 rdfs:comment "'endType is derived from the types of the member ends."@en ;
	uml-model:returns element:Association-endType.1-result .

element:Association-endType.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Association-endType.1-spec-_specification .

element:Association-endType.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (memberEnd->collect(type)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Association-endType.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Type ;
	uml-model:upperValue element:Association-endType.1-result-_upperValue .

element:Association-endType.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:AssociationClass xmi:type uml:Class ;
	xmi:id "AssociationClass" ;
	uml-model:name "AssociationClass" ;
	rdfs:comment "'A model element that has both Association and Class properties. An AssociationClass can be seen as an Association that also has Class properties, or as a Class that also has Association properties. It not only connects a set of Classifiers but also defines a set of Features that belong to the Association itself and not to any of the associated Classifiers."@en ;
	uml-model:rule element:AssociationClass-cannot_be_defined, element:AssociationClass-disjoint_attributes_ends ;
	rdfs:subClassOf element:Class, element:Association .

element:AssociationClass-cannot_be_defined rdfs:comment "'An AssociationClass cannot be defined between itself and something else."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AssociationClass-cannot_be_defined-_specification .

element:AssociationClass-cannot_be_defined-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.endType()->excludes(self) and self.endType()->collect(et|et.oclAsType(Classifier).allParents())->flatten()->excludes(self)"^^<http://www.omg.org/spec/OCL> .

element:AssociationClass-disjoint_attributes_ends rdfs:comment "'The owned attributes and owned ends of an AssociationClass are disjoint."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AssociationClass-disjoint_attributes_ends-_specification .

element:AssociationClass-disjoint_attributes_ends-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedAttribute->intersection(ownedEnd)->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Class xmi:type uml:Class ;
	xmi:id "Class" ;
	uml-model:name "Class" ;
	rdfs:comment "'A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.&#xD;&#xA;"@en ;
	uml-model:rule element:Class-passive_class ;
	rdfs:subClassOf element:BehavioredClassifier, element:EncapsulatedClassifier ;
	uml-model:ownedAttribute property:Class-extension, property:Class-isAbstract, property:Class-isActive, property:Class-nestedClassifier, property:Class-ownedAttribute, property:Class-ownedOperation, property:Class-ownedReception, property:Class-superClass ;
	uml-model:operation element:Class-extension.1, element:Class-superClass.1 .

element:Class-passive_class rdfs:comment "'Only an active Class may own Receptions and have a classifierBehavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Class-passive_class-_specification .

element:Class-passive_class-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not isActive implies (ownedReception->isEmpty() and classifierBehavior = null)"^^<http://www.omg.org/spec/OCL> .

property:Class-extension rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-extension" ;
	rdfs:label "Class-extension" ;
	uml-model:name "extension" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_extension_metaclass ;
	rdfs:range element:Extension ;
	rdfs:comment "'This property is used when the Class is acting as a metaclass. It references the Extensions that specify additional properties of the metaclass. The property is derived from the Extensions whose memberEnds are typed by the Class."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Class-extension.1-spec .

property:Class-isAbstract rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-isAbstract" ;
	rdfs:label "Class-isAbstract" ;
	uml-model:name "isAbstract" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the Class does not provide a complete declaration and cannot be instantiated. An abstract Class is typically used as a target of Associations or Generalizations."@en ;
	xmi:defaultValue element:Class-isAbstract-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Class-isAbstract-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Class-isAbstract-_defaultValue" .

property:Class-isActive rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-isActive" ;
	rdfs:label "Class-isActive" ;
	uml-model:name "isActive" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Determines whether an object specified by this Class is active or not. If true, then the owning Class is referred to as an active Class. If false, then such a Class is referred to as a passive Class."@en ;
	xmi:defaultValue element:Class-isActive-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Class-isActive-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Class-isActive-_defaultValue" .

property:Class-nestedClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-nestedClassifier" ;
	rdfs:label "Class-nestedClassifier" ;
	uml-model:name "nestedClassifier" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nestedClassifier_nestingClass ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Classifiers owned by the Class that are not ownedBehaviors."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Class-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-ownedAttribute" ;
	rdfs:label "Class-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_class ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The attributes (i.e., the Properties) owned by the Class."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Class-ownedOperation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-ownedOperation" ;
	rdfs:label "Class-ownedOperation" ;
	uml-model:name "ownedOperation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedOperation_class ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Operations owned by the Class."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Class-ownedReception rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-ownedReception" ;
	rdfs:label "Class-ownedReception" ;
	uml-model:name "ownedReception" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedReception_class ;
	rdfs:range element:Reception ;
	uml-model:subsettedProperty uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Receptions owned by the Class."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Class-superClass rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Class-superClass" ;
	rdfs:label "Class-superClass" ;
	uml-model:name "superClass" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_superClass_class ;
	rdfs:range element:Class ;
	rdfs:comment "'The superclasses of a Class, derived from its Generalizations."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Class-superClass.1-spec .

element:Class-extension.1 rdfs:comment "'Derivation for Class::/extension : Extension"@en ;
	uml-model:returns element:Class-extension.1-result .

element:Class-extension.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Class-extension.1-spec-_specification .

element:Class-extension.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (Extension.allInstances()->select(ext | \n  let endTypes : Sequence(Classifier) = ext.memberEnd->collect(type.oclAsType(Classifier)) in\n  endTypes->includes(self) or endTypes.allParents()->includes(self) ))"^^<http://www.omg.org/spec/OCL> .

element:Class-extension.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Extension ;
	uml-model:upperValue element:Class-extension.1-result-_upperValue .

element:Class-extension.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Class-superClass.1 rdfs:comment "'Derivation for Class::/superClass : Class"@en ;
	uml-model:returns element:Class-superClass.1-result .

element:Class-superClass.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Class-superClass.1-spec-_specification .

element:Class-superClass.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.general()->select(oclIsKindOf(Class))->collect(oclAsType(Class))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Class-superClass.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Class ;
	uml-model:upperValue element:Class-superClass.1-result-_upperValue .

element:Class-superClass.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Collaboration xmi:type uml:Class ;
	xmi:id "Collaboration" ;
	uml-model:name "Collaboration" ;
	rdfs:comment "'A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality. "@en ;
	rdfs:subClassOf element:StructuredClassifier, element:BehavioredClassifier ;
	uml-model:ownedAttribute property:Collaboration-collaborationRole .

property:Collaboration-collaborationRole rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Collaboration-collaborationRole" ;
	rdfs:label "Collaboration-collaborationRole" ;
	uml-model:name "collaborationRole" ;
	uml-model:association uml-element:A_collaborationRole_collaboration ;
	rdfs:range element:ConnectableElement ;
	uml-model:subsettedProperty uml-element:StructuredClassifier-role ;
	rdfs:comment "'Represents the participants in the Collaboration."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:CollaborationUse xmi:type uml:Class ;
	xmi:id "CollaborationUse" ;
	uml-model:name "CollaborationUse" ;
	rdfs:comment "'A CollaborationUse is used to specify the application of a pattern specified by a Collaboration to a specific situation."@en ;
	uml-model:rule element:CollaborationUse-client_elements, element:CollaborationUse-every_role, element:CollaborationUse-connectors ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:CollaborationUse-roleBinding, property:CollaborationUse-type .

element:CollaborationUse-client_elements rdfs:comment "'All the client elements of a roleBinding are in one Classifier and all supplier elements of a roleBinding are in one Collaboration."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CollaborationUse-client_elements-_specification .

element:CollaborationUse-client_elements-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "roleBinding->collect(client)->forAll(ne1, ne2 |\n  ne1.oclIsKindOf(ConnectableElement) and ne2.oclIsKindOf(ConnectableElement) and\n    let ce1 : ConnectableElement = ne1.oclAsType(ConnectableElement), ce2 : ConnectableElement = ne2.oclAsType(ConnectableElement) in\n      ce1.structuredClassifier = ce2.structuredClassifier)\nand\n  roleBinding->collect(supplier)->forAll(ne1, ne2 |\n  ne1.oclIsKindOf(ConnectableElement) and ne2.oclIsKindOf(ConnectableElement) and\n    let ce1 : ConnectableElement = ne1.oclAsType(ConnectableElement), ce2 : ConnectableElement = ne2.oclAsType(ConnectableElement) in\n      ce1.collaboration = ce2.collaboration)"^^<http://www.omg.org/spec/OCL> .

element:CollaborationUse-every_role rdfs:comment "'Every collaborationRole in the Collaboration is bound within the CollaborationUse."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CollaborationUse-every_role-_specification .

element:CollaborationUse-every_role-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "type.collaborationRole->forAll(role | roleBinding->exists(rb | rb.supplier->includes(role)))"^^<http://www.omg.org/spec/OCL> .

element:CollaborationUse-connectors rdfs:comment "'Connectors in a Collaboration typing a CollaborationUse must have corresponding Connectors between elements bound in the context Classifier, and these corresponding Connectors must have the same or more general type than the Collaboration Connectors."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CollaborationUse-connectors-_specification .

element:CollaborationUse-connectors-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "type.ownedConnector->forAll(connector |\n  let rolesConnectedInCollab : Set(ConnectableElement) = connector.end.role->asSet(),\n        relevantBindings : Set(Dependency) = roleBinding->select(rb | rb.supplier->intersection(rolesConnectedInCollab)->notEmpty()),\n        boundRoles : Set(ConnectableElement) = relevantBindings->collect(client.oclAsType(ConnectableElement))->asSet(),\n        contextClassifier : StructuredClassifier = boundRoles->any(true).structuredClassifier->any(true) in\n          contextClassifier.ownedConnector->exists( correspondingConnector | \n              correspondingConnector.end.role->forAll( role | boundRoles->includes(role) )\n              and (connector.type->notEmpty() and correspondingConnector.type->notEmpty()) implies connector.type->forAll(conformsTo(correspondingConnector.type)) )\n)"^^<http://www.omg.org/spec/OCL> .

property:CollaborationUse-roleBinding rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CollaborationUse-roleBinding" ;
	rdfs:label "CollaborationUse-roleBinding" ;
	uml-model:name "roleBinding" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_roleBinding_collaborationUse ;
	rdfs:range element:Dependency ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A mapping between features of the Collaboration and features of the owning Classifier. This mapping indicates which ConnectableElement of the Classifier plays which role(s) in the Collaboration. A ConnectableElement may be bound to multiple roles in the same CollaborationUse (that is, it may play multiple roles)."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:CollaborationUse-type rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CollaborationUse-type" ;
	rdfs:label "CollaborationUse-type" ;
	uml-model:name "type" ;
	uml-model:association uml-element:A_type_collaborationUse ;
	rdfs:range element:Collaboration ;
	rdfs:comment "'The Collaboration which is used in this CollaborationUse. The Collaboration defines the cooperation between its roles which are mapped to ConnectableElements relating to the Classifier owning the CollaborationUse."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Component xmi:type uml:Class ;
	xmi:id "Component" ;
	uml-model:name "Component" ;
	rdfs:comment "'A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.  "@en ;
	uml-model:rule element:Component-no_nested_classifiers, element:Component-no_packaged_elements ;
	rdfs:subClassOf element:Class ;
	uml-model:ownedAttribute property:Component-isIndirectlyInstantiated, property:Component-packagedElement, property:Component-provided, property:Component-realization, property:Component-required ;
	uml-model:operation element:Component-provided.1, element:Component-required.1 .

element:Component-no_nested_classifiers rdfs:comment "'A Component cannot nest Classifiers."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Component-no_nested_classifiers-_specification .

element:Component-no_nested_classifiers-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "nestedClassifier->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Component-no_packaged_elements rdfs:comment "'A Component nested in a Class cannot have any packaged elements."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Component-no_packaged_elements-_specification .

element:Component-no_packaged_elements-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "nestingClass <> null implies packagedElement->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:Component-isIndirectlyInstantiated rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Component-isIndirectlyInstantiated" ;
	rdfs:label "Component-isIndirectlyInstantiated" ;
	uml-model:name "isIndirectlyInstantiated" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the Component is defined at design-time, but at run-time (or execution-time) an object specified by the Component does not exist, that is, the Component is instantiated indirectly, through the instantiation of its realizing Classifiers or parts."@en ;
	xmi:defaultValue element:Component-isIndirectlyInstantiated-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Component-isIndirectlyInstantiated-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Component-isIndirectlyInstantiated-_defaultValue" ;
	uml-model:value "true" .

property:Component-packagedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Component-packagedElement" ;
	rdfs:label "Component-packagedElement" ;
	uml-model:name "packagedElement" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_packagedElement_component ;
	rdfs:range element:PackageableElement ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The set of PackageableElements that a Component owns. In the namespace of a Component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g., Classes, Interfaces, Components, Packages, UseCases, Dependencies (e.g., mappings), and Artifacts."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Component-provided rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Component-provided" ;
	rdfs:label "Component-provided" ;
	uml-model:name "provided" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_provided_component ;
	rdfs:range element:Interface ;
	rdfs:comment "'The Interfaces that the Component exposes to its environment. These Interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Component-provided.1-spec .

property:Component-realization rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Component-realization" ;
	rdfs:label "Component-realization" ;
	uml-model:name "realization" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_realization_abstraction_component ;
	rdfs:range element:ComponentRealization ;
	uml-model:subsettedProperty uml-element:A_supplier_supplierDependency-supplierDependency, uml-element:Element-ownedElement ;
	rdfs:comment "'The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Component-required rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Component-required" ;
	rdfs:label "Component-required" ;
	uml-model:name "required" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_required_component ;
	rdfs:range element:Interface ;
	rdfs:comment "'The Interfaces that the Component requires from other Components in its environment in order to be able to offer its full set of provided functionality. These Interfaces may be used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Component-required.1-spec .

element:Component-provided.1 rdfs:comment "'Derivation for Component::/provided"@en ;
	uml-model:returns element:Component-provided.1-result .

element:Component-provided.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Component-provided.1-spec-_specification .

element:Component-provided.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (let  ris : Set(Interface) = allRealizedInterfaces(),\n        realizingClassifiers : Set(Classifier) =  self.realization.realizingClassifier->union(self.allParents()->collect(realization.realizingClassifier))->asSet(),\n        allRealizingClassifiers : Set(Classifier) = realizingClassifiers->union(realizingClassifiers.allParents())->asSet(),\n        realizingClassifierInterfaces : Set(Interface) = allRealizingClassifiers->iterate(c; rci : Set(Interface) = Set{} | rci->union(c.allRealizedInterfaces())),\n        ports : Set(Port) = self.ownedPort->union(allParents()->collect(ownedPort))->asSet(),\n        providedByPorts : Set(Interface) = ports.provided->asSet()\nin     ris->union(realizingClassifierInterfaces) ->union(providedByPorts)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Component-provided.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Component-provided.1-result-_upperValue .

element:Component-provided.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Component-required.1 rdfs:comment "'Derivation for Component::/required"@en ;
	uml-model:returns element:Component-required.1-result .

element:Component-required.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Component-required.1-spec-_specification .

element:Component-required.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (let  uis : Set(Interface) = allUsedInterfaces(),\n        realizingClassifiers : Set(Classifier) = self.realization.realizingClassifier->union(self.allParents()->collect(realization.realizingClassifier))->asSet(),\n        allRealizingClassifiers : Set(Classifier) = realizingClassifiers->union(realizingClassifiers.allParents())->asSet(),\n        realizingClassifierInterfaces : Set(Interface) = allRealizingClassifiers->iterate(c; rci : Set(Interface) = Set{} | rci->union(c.allUsedInterfaces())),\n        ports : Set(Port) = self.ownedPort->union(allParents()->collect(ownedPort))->asSet(),\n        usedByPorts : Set(Interface) = ports.required->asSet()\nin     uis->union(realizingClassifierInterfaces)->union(usedByPorts)->asSet()\n)"^^<http://www.omg.org/spec/OCL> .

element:Component-required.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Component-required.1-result-_upperValue .

element:Component-required.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:ComponentRealization xmi:type uml:Class ;
	xmi:id "ComponentRealization" ;
	uml-model:name "ComponentRealization" ;
	rdfs:comment "'Realization is specialized to (optionally) define the Classifiers that realize the contract offered by a Component in terms of its provided and required Interfaces. The Component forms an abstraction from these various Classifiers."@en ;
	rdfs:subClassOf element:Realization ;
	uml-model:ownedAttribute property:ComponentRealization-abstraction, property:ComponentRealization-realizingClassifier .

property:ComponentRealization-abstraction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ComponentRealization-abstraction" ;
	rdfs:label "ComponentRealization-abstraction" ;
	uml-model:name "abstraction" ;
	uml-model:association uml-element:A_realization_abstraction_component ;
	rdfs:range element:Component ;
	uml-model:subsettedProperty uml-element:Dependency-supplier, uml-element:Element-owner ;
	rdfs:comment "'The Component that owns this ComponentRealization and which is implemented by its realizing Classifiers."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ComponentRealization-realizingClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ComponentRealization-realizingClassifier" ;
	rdfs:label "ComponentRealization-realizingClassifier" ;
	uml-model:name "realizingClassifier" ;
	uml-model:association uml-element:A_realizingClassifier_componentRealization ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:Dependency-client ;
	rdfs:comment "'The Classifiers that are involved in the implementation of the Component that owns this Realization."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:ConnectableElement xmi:type uml:Class ;
	xmi:id "ConnectableElement" ;
	uml-model:name "ConnectableElement" ;
	rdfs:comment "'ConnectableElement is an abstract metaclass representing a set of instances that play roles of a StructuredClassifier. ConnectableElements may be joined by attached Connectors and specify configurations of linked instances to be created within an instance of the containing StructuredClassifier."@en ;
	rdfs:subClassOf element:TypedElement, element:ParameterableElement ;
	uml-model:ownedAttribute property:ConnectableElement-end, property:ConnectableElement-templateParameter ;
	uml-model:operation element:ConnectableElement-end.1 .

property:ConnectableElement-end rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectableElement-end" ;
	rdfs:label "ConnectableElement-end" ;
	uml-model:name "end" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_end_role ;
	rdfs:range element:ConnectorEnd ;
	rdfs:comment "'A set of ConnectorEnds that attach to this ConnectableElement."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:ConnectableElement-end.1-spec .

property:ConnectableElement-templateParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectableElement-templateParameter" ;
	rdfs:label "ConnectableElement-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:association uml-element:A_connectableElement_templateParameter_parameteredElement ;
	rdfs:range element:ConnectableElementTemplateParameter ;
	rdfs:comment "'The ConnectableElementTemplateParameter for this ConnectableElement parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ConnectableElement-end.1 rdfs:comment "'Derivation for ConnectableElement::/end : ConnectorEnd"@en ;
	uml-model:returns element:ConnectableElement-end.1-result .

element:ConnectableElement-end.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:ConnectableElement-end.1-spec-_specification .

element:ConnectableElement-end.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ConnectorEnd.allInstances()->select(role = self))"^^<http://www.omg.org/spec/OCL> .

element:ConnectableElement-end.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ConnectorEnd ;
	uml-model:upperValue element:ConnectableElement-end.1-result-_upperValue .

element:ConnectableElement-end.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:ConnectableElementTemplateParameter xmi:type uml:Class ;
	xmi:id "ConnectableElementTemplateParameter" ;
	uml-model:name "ConnectableElementTemplateParameter" ;
	rdfs:comment "'A ConnectableElementTemplateParameter exposes a ConnectableElement as a formal parameter for a template."@en ;
	rdfs:subClassOf element:TemplateParameter ;
	uml-model:ownedAttribute property:ConnectableElementTemplateParameter-parameteredElement .

property:ConnectableElementTemplateParameter-parameteredElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectableElementTemplateParameter-parameteredElement" ;
	rdfs:label "ConnectableElementTemplateParameter-parameteredElement" ;
	uml-model:name "parameteredElement" ;
	uml-model:association uml-element:A_connectableElement_templateParameter_parameteredElement ;
	rdfs:range element:ConnectableElement ;
	rdfs:comment "'The ConnectableElement for this ConnectableElementTemplateParameter."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Connector xmi:type uml:Class ;
	xmi:id "Connector" ;
	uml-model:name "Connector" ;
	rdfs:comment "'A Connector specifies links that enables communication between two or more instances. In contrast to Associations, which specify links between any instance of the associated Classifiers, Connectors specify links between instances playing the connected parts only."@en ;
	uml-model:rule element:Connector-types, element:Connector-roles ;
	rdfs:subClassOf element:Feature ;
	uml-model:ownedAttribute property:Connector-contract, property:Connector-end, property:Connector-kind, property:Connector-redefinedConnector, property:Connector-type ;
	uml-model:operation element:Connector-kind.1 .

element:Connector-types rdfs:comment "'The types of the ConnectableElements that the ends of a Connector are attached to must conform to the types of the ends of the Association that types the Connector, if any."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Connector-types-_specification .

element:Connector-types-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "type<>null implies \n  let noOfEnds : Integer = end->size() in \n  (type.memberEnd->size() = noOfEnds) and Sequence{1..noOfEnds}->forAll(i | end->at(i).role.type.conformsTo(type.memberEnd->at(i).type))"^^<http://www.omg.org/spec/OCL> .

element:Connector-roles rdfs:comment "'The ConnectableElements attached as roles to each ConnectorEnd owned by a Connector must be owned or inherited roles of the Classifier that owned the Connector, or they must be Ports of such roles."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Connector-roles-_specification .

element:Connector-roles-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "structuredClassifier <> null\nand\n  end->forAll( e | structuredClassifier.allRoles()->includes(e.role)\nor\n  e.role.oclIsKindOf(Port) and structuredClassifier.allRoles()->includes(e.partWithPort))"^^<http://www.omg.org/spec/OCL> .

property:Connector-contract rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Connector-contract" ;
	rdfs:label "Connector-contract" ;
	uml-model:name "contract" ;
	uml-model:association uml-element:A_contract_connector ;
	rdfs:range element:Behavior ;
	rdfs:comment "'The set of Behaviors that specify the valid interaction patterns across the Connector."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Connector-end rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Connector-end" ;
	rdfs:label "Connector-end" ;
	uml-model:name "end" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_end_connector ;
	rdfs:range element:ConnectorEnd ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Connector has at least two ConnectorEnds, each representing the participation of instances of the Classifiers typing the ConnectableElements attached to the end. The set of ConnectorEnds is ordered."@en ;
	uml-model:multiplicity "2..*"^^uml-model-dt:multiplicityRange .

property:Connector-kind rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Connector-kind" ;
	rdfs:label "Connector-kind" ;
	uml-model:name "kind" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range element:ConnectorKind ;
	rdfs:comment "'Indicates the kind of Connector. This is derived: a Connector with one or more ends connected to a Port which is not on a Part and which is not a behavior port is a delegation; otherwise it is an assembly."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Connector-kind.1-spec .

property:Connector-redefinedConnector rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Connector-redefinedConnector" ;
	rdfs:label "Connector-redefinedConnector" ;
	uml-model:name "redefinedConnector" ;
	uml-model:association uml-element:A_redefinedConnector_connector ;
	rdfs:range element:Connector ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'A Connector may be redefined when its containing Classifier is specialized. The redefining Connector may have a type that specializes the type of the redefined Connector. The types of the ConnectorEnds of the redefining Connector may specialize the types of the ConnectorEnds of the redefined Connector. The properties of the ConnectorEnds of the redefining Connector may be replaced."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Connector-type rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Connector-type" ;
	rdfs:label "Connector-type" ;
	uml-model:name "type" ;
	uml-model:association uml-element:A_type_connector ;
	rdfs:range element:Association ;
	rdfs:comment "'An optional Association that classifies links corresponding to this Connector."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Connector-kind.1 rdfs:comment "'Derivation for Connector::/kind : ConnectorKind"@en ;
	uml-model:returns element:Connector-kind.1-result .

element:Connector-kind.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Connector-kind.1-spec-_specification .

element:Connector-kind.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if end->exists(\n      role.oclIsKindOf(Port) \n      and partWithPort->isEmpty()\n      and not role.oclAsType(Port).isBehavior)\nthen ConnectorKind::delegation \nelse ConnectorKind::assembly \nendif)"^^<http://www.omg.org/spec/OCL> .

element:Connector-kind.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ConnectorKind .

element:ConnectorEnd xmi:type uml:Class ;
	xmi:id "ConnectorEnd" ;
	uml-model:name "ConnectorEnd" ;
	rdfs:comment "'A ConnectorEnd is an endpoint of a Connector, which attaches the Connector to a ConnectableElement."@en ;
	uml-model:rule element:ConnectorEnd-role_and_part_with_port, element:ConnectorEnd-part_with_port_empty, element:ConnectorEnd-multiplicity, element:ConnectorEnd-self_part_with_port ;
	rdfs:subClassOf element:MultiplicityElement ;
	uml-model:ownedAttribute property:ConnectorEnd-definingEnd, property:ConnectorEnd-partWithPort, property:ConnectorEnd-role ;
	uml-model:operation element:ConnectorEnd-definingEnd.1 .

element:ConnectorEnd-role_and_part_with_port rdfs:comment "'If a ConnectorEnd references a partWithPort, then the role must be a Port that is defined or inherited by the type of the partWithPort."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectorEnd-role_and_part_with_port-_specification .

element:ConnectorEnd-role_and_part_with_port-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "partWithPort->notEmpty() implies \n  (role.oclIsKindOf(Port) and partWithPort.type.oclAsType(Namespace).member->includes(role))"^^<http://www.omg.org/spec/OCL> .

element:ConnectorEnd-part_with_port_empty rdfs:comment "'If a ConnectorEnd is attached to a Port of the containing Classifier, partWithPort will be empty."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectorEnd-part_with_port_empty-_specification .

element:ConnectorEnd-part_with_port_empty-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(role.oclIsKindOf(Port) and role.owner = connector.owner) implies partWithPort->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ConnectorEnd-multiplicity rdfs:comment "'The multiplicity of the ConnectorEnd may not be more general than the multiplicity of the corresponding end of the Association typing the owning Connector, if any."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectorEnd-multiplicity-_specification .

element:ConnectorEnd-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.compatibleWith(definingEnd)"^^<http://www.omg.org/spec/OCL> .

element:ConnectorEnd-self_part_with_port rdfs:comment "'The Property held in self.partWithPort must not be a Port."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectorEnd-self_part_with_port-_specification .

element:ConnectorEnd-self_part_with_port-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "partWithPort->notEmpty() implies not partWithPort.oclIsKindOf(Port)"^^<http://www.omg.org/spec/OCL> .

property:ConnectorEnd-definingEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectorEnd-definingEnd" ;
	rdfs:label "ConnectorEnd-definingEnd" ;
	uml-model:name "definingEnd" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_definingEnd_connectorEnd ;
	rdfs:range element:Property ;
	rdfs:comment "'A derived property referencing the corresponding end on the Association which types the Connector owing this ConnectorEnd, if any. It is derived by selecting the end at the same place in the ordering of Association ends as this ConnectorEnd."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:ConnectorEnd-definingEnd.1-spec .

property:ConnectorEnd-partWithPort rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectorEnd-partWithPort" ;
	rdfs:label "ConnectorEnd-partWithPort" ;
	uml-model:name "partWithPort" ;
	uml-model:association uml-element:A_partWithPort_connectorEnd ;
	rdfs:range element:Property ;
	rdfs:comment "'Indicates the role of the internal structure of a Classifier with the Port to which the ConnectorEnd is attached."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ConnectorEnd-role rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectorEnd-role" ;
	rdfs:label "ConnectorEnd-role" ;
	uml-model:name "role" ;
	uml-model:association uml-element:A_end_role ;
	rdfs:range element:ConnectableElement ;
	rdfs:comment "'The ConnectableElement attached at this ConnectorEnd. When an instance of the containing Classifier is created, a link may (depending on the multiplicities) be created to an instance of the Classifier that types this ConnectableElement."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ConnectorEnd-definingEnd.1 rdfs:comment "'Derivation for ConnectorEnd::/definingEnd : Property"@en ;
	uml-model:returns element:ConnectorEnd-definingEnd.1-result .

element:ConnectorEnd-definingEnd.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:ConnectorEnd-definingEnd.1-spec-_specification .

element:ConnectorEnd-definingEnd.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if connector.type = null \nthen\n  null \nelse\n  let index : Integer = connector.end->indexOf(self) in\n    connector.type.memberEnd->at(index)\nendif)"^^<http://www.omg.org/spec/OCL> .

element:ConnectorEnd-definingEnd.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property .

element:EncapsulatedClassifier xmi:type uml:Class ;
	xmi:id "EncapsulatedClassifier" ;
	uml-model:name "EncapsulatedClassifier" ;
	rdfs:comment "'An EncapsulatedClassifier may own Ports to specify typed interaction points."@en ;
	rdfs:subClassOf element:StructuredClassifier ;
	uml-model:ownedAttribute property:EncapsulatedClassifier-ownedPort ;
	uml-model:operation element:EncapsulatedClassifier-ownedPort.1 .

property:EncapsulatedClassifier-ownedPort rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "EncapsulatedClassifier-ownedPort" ;
	rdfs:label "EncapsulatedClassifier-ownedPort" ;
	uml-model:name "ownedPort" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedPort_encapsulatedClassifier ;
	rdfs:range element:Port ;
	uml-model:subsettedProperty uml-element:StructuredClassifier-ownedAttribute ;
	rdfs:comment "'The Ports owned by the EncapsulatedClassifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:EncapsulatedClassifier-ownedPort.1-spec .

element:EncapsulatedClassifier-ownedPort.1 rdfs:comment "'Derivation for EncapsulatedClassifier::/ownedPort : Port"@en ;
	uml-model:returns element:EncapsulatedClassifier-ownedPort.1-result .

element:EncapsulatedClassifier-ownedPort.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:EncapsulatedClassifier-ownedPort.1-spec-_specification .

element:EncapsulatedClassifier-ownedPort.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedAttribute->select(oclIsKindOf(Port))->collect(oclAsType(Port))->asOrderedSet())"^^<http://www.omg.org/spec/OCL> .

element:EncapsulatedClassifier-ownedPort.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Port ;
	uml-model:upperValue element:EncapsulatedClassifier-ownedPort.1-result-_upperValue .

element:EncapsulatedClassifier-ownedPort.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Port xmi:type uml:Class ;
	xmi:id "Port" ;
	uml-model:name "Port" ;
	rdfs:comment "'A Port is a property of an EncapsulatedClassifier that specifies a distinct interaction point between that EncapsulatedClassifier and its environment or between the (behavior of the) EncapsulatedClassifier and its internal parts. Ports are connected to Properties of the EncapsulatedClassifier by Connectors through which requests can be made to invoke BehavioralFeatures. A Port may specify the services an EncapsulatedClassifier provides (offers) to its environment as well as the services that an EncapsulatedClassifier expects (requires) of its environment.  A Port may have an associated ProtocolStateMachine."@en ;
	uml-model:rule element:Port-port_aggregation, element:Port-default_value, element:Port-encapsulated_owner ;
	rdfs:subClassOf element:Property ;
	uml-model:ownedAttribute property:Port-isBehavior, property:Port-isConjugated, property:Port-isService, property:Port-protocol, property:Port-provided, property:Port-redefinedPort, property:Port-required ;
	uml-model:operation element:Port-provided.1, element:Port-required.1, element:Port-basicProvided, element:Port-basicRequired .

element:Port-port_aggregation rdfs:comment "'Port.aggregation must be composite."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Port-port_aggregation-_specification .

element:Port-port_aggregation-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "aggregation = AggregationKind::composite"^^<http://www.omg.org/spec/OCL> .

element:Port-default_value rdfs:comment "'A defaultValue for port cannot be specified when the type of the Port is an Interface."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Port-default_value-_specification .

element:Port-default_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "type.oclIsKindOf(Interface) implies defaultValue->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Port-encapsulated_owner rdfs:comment "'All Ports are owned by an EncapsulatedClassifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Port-encapsulated_owner-_specification .

element:Port-encapsulated_owner-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "owner = encapsulatedClassifier"^^<http://www.omg.org/spec/OCL> .

property:Port-isBehavior rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-isBehavior" ;
	rdfs:label "Port-isBehavior" ;
	uml-model:name "isBehavior" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether requests arriving at this Port are sent to the classifier behavior of this EncapsulatedClassifier. Such a Port is referred to as a behavior Port. Any invocation of a BehavioralFeature targeted at a behavior Port will be handled by the instance of the owning EncapsulatedClassifier itself, rather than by any instances that it may contain."@en ;
	xmi:defaultValue element:Port-isBehavior-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Port-isBehavior-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Port-isBehavior-_defaultValue" .

property:Port-isConjugated rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-isConjugated" ;
	rdfs:label "Port-isConjugated" ;
	uml-model:name "isConjugated" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies the way that the provided and required Interfaces are derived from the Port’s Type."@en ;
	xmi:defaultValue element:Port-isConjugated-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Port-isConjugated-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Port-isConjugated-_defaultValue" .

property:Port-isService rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-isService" ;
	rdfs:label "Port-isService" ;
	uml-model:name "isService" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, indicates that this Port is used to provide the published functionality of an EncapsulatedClassifier.  If false, this Port is used to implement the EncapsulatedClassifier but is not part of the essential externally-visible functionality of the EncapsulatedClassifier and can, therefore, be altered or deleted along with the internal implementation of the EncapsulatedClassifier and other properties that are considered part of its implementation."@en ;
	xmi:defaultValue element:Port-isService-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Port-isService-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Port-isService-_defaultValue" ;
	uml-model:value "true" .

property:Port-protocol rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-protocol" ;
	rdfs:label "Port-protocol" ;
	uml-model:name "protocol" ;
	uml-model:association uml-element:A_protocol_port ;
	rdfs:range element:ProtocolStateMachine ;
	rdfs:comment "'An optional ProtocolStateMachine which describes valid interactions at this interaction point."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Port-provided rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-provided" ;
	rdfs:label "Port-provided" ;
	uml-model:name "provided" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_provided_port ;
	rdfs:range element:Interface ;
	rdfs:comment "'The Interfaces specifying the set of Operations and Receptions that the EncapsulatedCclassifier offers to its environment via this Port, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived according to the value of isConjugated. If isConjugated is false, provided is derived as the union of the sets of Interfaces realized by the type of the port and its supertypes, or directly from the type of the Port if the Port is typed by an Interface. If isConjugated is true, it is derived as the union of the sets of Interfaces used by the type of the Port and its supertypes."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Port-provided.1-spec .

property:Port-redefinedPort rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-redefinedPort" ;
	rdfs:label "Port-redefinedPort" ;
	uml-model:name "redefinedPort" ;
	uml-model:association uml-element:A_redefinedPort_port ;
	rdfs:range element:Port ;
	uml-model:subsettedProperty uml-element:Property-redefinedProperty ;
	rdfs:comment "'A Port may be redefined when its containing EncapsulatedClassifier is specialized. The redefining Port may have additional Interfaces to those that are associated with the redefined Port or it may replace an Interface by one of its subtypes."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Port-required rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Port-required" ;
	rdfs:label "Port-required" ;
	uml-model:name "required" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_required_port ;
	rdfs:range element:Interface ;
	rdfs:comment "'The Interfaces specifying the set of Operations and Receptions that the EncapsulatedCassifier expects its environment to handle via this port. This association is derived according to the value of isConjugated. If isConjugated is false, required is derived as the union of the sets of Interfaces used by the type of the Port and its supertypes. If isConjugated is true, it is derived as the union of the sets of Interfaces realized by the type of the Port and its supertypes, or directly from the type of the Port if the Port is typed by an Interface."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Port-required.1-spec .

element:Port-provided.1 rdfs:comment "'Derivation for Port::/provided"@en ;
	uml-model:returns element:Port-provided.1-result .

element:Port-provided.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Port-provided.1-spec-_specification .

element:Port-provided.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if isConjugated then basicRequired() else basicProvided() endif)"^^<http://www.omg.org/spec/OCL> .

element:Port-provided.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Port-provided.1-result-_upperValue .

element:Port-provided.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Port-required.1 rdfs:comment "'Derivation for Port::/required"@en ;
	uml-model:returns element:Port-required.1-result .

element:Port-required.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Port-required.1-spec-_specification .

element:Port-required.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if isConjugated then basicProvided() else basicRequired() endif)"^^<http://www.omg.org/spec/OCL> .

element:Port-required.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Port-required.1-result-_upperValue .

element:Port-required.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Port-basicProvided rdfs:comment "'The union of the sets of Interfaces realized by the type of the Port and its supertypes, or directly the type of the Port if the Port is typed by an Interface."@en ;
	uml-model:rule element:Port-basicProvided-spec ;
	uml-model:returns element:Port-basicProvided-result .

element:Port-basicProvided-spec rdf:type uml:Constraint ;
	uml-model:specification element:Port-basicProvided-spec-_specification .

element:Port-basicProvided-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if type.oclIsKindOf(Interface) \nthen type.oclAsType(Interface)->asSet() \nelse type.oclAsType(Classifier).allRealizedInterfaces() \nendif)"^^<http://www.omg.org/spec/OCL> .

element:Port-basicProvided-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Port-basicProvided-result-_upperValue .

element:Port-basicProvided-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Port-basicRequired rdfs:comment "'The union of the sets of Interfaces used by the type of the Port and its supertypes."@en ;
	uml-model:rule element:Port-basicRequired-spec ;
	uml-model:returns element:Port-basicRequired-result .

element:Port-basicRequired-spec rdf:type uml:Constraint ;
	uml-model:specification element:Port-basicRequired-spec-_specification .

element:Port-basicRequired-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ( type.oclAsType(Classifier).allUsedInterfaces() )"^^<http://www.omg.org/spec/OCL> .

element:Port-basicRequired-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Port-basicRequired-result-_upperValue .

element:Port-basicRequired-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredClassifier xmi:type uml:Class ;
	xmi:id "StructuredClassifier" ;
	uml-model:name "StructuredClassifier" ;
	rdfs:comment "'StructuredClassifiers may contain an internal structure of connected elements each of which plays a role in the overall Behavior modeled by the StructuredClassifier."@en ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:StructuredClassifier-ownedAttribute, property:StructuredClassifier-ownedConnector, property:StructuredClassifier-part, property:StructuredClassifier-role ;
	uml-model:operation element:StructuredClassifier-part.1, element:StructuredClassifier-allRoles .

property:StructuredClassifier-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredClassifier-ownedAttribute" ;
	rdfs:label "StructuredClassifier-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_structuredClassifier ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember, uml-element:StructuredClassifier-role ;
	rdfs:comment "'The Properties owned by the StructuredClassifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredClassifier-ownedConnector rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredClassifier-ownedConnector" ;
	rdfs:label "StructuredClassifier-ownedConnector" ;
	uml-model:name "ownedConnector" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedConnector_structuredClassifier ;
	rdfs:range element:Connector ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The connectors owned by the StructuredClassifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredClassifier-part rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredClassifier-part" ;
	rdfs:label "StructuredClassifier-part" ;
	uml-model:name "part" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_part_structuredClassifier ;
	rdfs:range element:Property ;
	rdfs:comment "'The Properties specifying instances that the StructuredClassifier owns by composition. This collection is derived, selecting those owned Properties where isComposite is true."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:StructuredClassifier-part.1-spec .

property:StructuredClassifier-role rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredClassifier-role" ;
	rdfs:label "StructuredClassifier-role" ;
	uml-model:name "role" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_role_structuredClassifier ;
	rdfs:range element:ConnectableElement ;
	uml-model:subsettedProperty uml-element:Namespace-member ;
	rdfs:comment "'The roles that instances may play in this StructuredClassifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StructuredClassifier-part.1 rdfs:comment "'Derivation for StructuredClassifier::/part"@en ;
	uml-model:returns element:StructuredClassifier-part.1-result .

element:StructuredClassifier-part.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredClassifier-part.1-spec-_specification .

element:StructuredClassifier-part.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedAttribute->select(isComposite))"^^<http://www.omg.org/spec/OCL> .

element:StructuredClassifier-part.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property ;
	uml-model:upperValue element:StructuredClassifier-part.1-result-_upperValue .

element:StructuredClassifier-part.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredClassifier-allRoles rdfs:comment "'All features of type ConnectableElement, equivalent to all direct and inherited roles."@en ;
	uml-model:rule element:StructuredClassifier-allRoles-spec ;
	uml-model:returns element:StructuredClassifier-allRoles-result .

element:StructuredClassifier-allRoles-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredClassifier-allRoles-spec-_specification .

element:StructuredClassifier-allRoles-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (allFeatures()->select(oclIsKindOf(ConnectableElement))->collect(oclAsType(ConnectableElement))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:StructuredClassifier-allRoles-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ConnectableElement ;
	uml-model:upperValue element:StructuredClassifier-allRoles-result-_upperValue .

element:StructuredClassifier-allRoles-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:ConnectorKind xmi:type uml:Enumeration ;
	xmi:id "ConnectorKind" ;
	uml-model:name "ConnectorKind" ;
	rdfs:comment "'ConnectorKind is an enumeration that defines whether a Connector is an assembly or a delegation."@en .

element:A_part_structuredClassifier xmi:type uml:Association ;
	xmi:id "A_part_structuredClassifier" ;
	uml-model:name "A_part_structuredClassifier" .

element:A_part_structuredClassifier-structuredClassifier xmi:type uml:Property ;
	xmi:id "A_part_structuredClassifier-structuredClassifier" ;
	uml-model:name "structuredClassifier" ;
	uml-model:type "StructuredClassifier" ;
	uml-model:association uml-element:A_part_structuredClassifier .

element:A_ownedConnector_structuredClassifier xmi:type uml:Association ;
	xmi:id "A_ownedConnector_structuredClassifier" ;
	uml-model:name "A_ownedConnector_structuredClassifier" .

element:A_ownedConnector_structuredClassifier-structuredClassifier xmi:type uml:Property ;
	xmi:id "A_ownedConnector_structuredClassifier-structuredClassifier" ;
	uml-model:name "structuredClassifier" ;
	uml-model:type "StructuredClassifier" ;
	uml-model:association uml-element:A_ownedConnector_structuredClassifier ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext .

element:A_ownedAttribute_structuredClassifier xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_structuredClassifier" ;
	uml-model:name "A_ownedAttribute_structuredClassifier" ;
	rdfs:subClassOf element:A_role_structuredClassifier .

element:A_ownedAttribute_structuredClassifier-structuredClassifier xmi:type uml:Property ;
	xmi:id "A_ownedAttribute_structuredClassifier-structuredClassifier" ;
	uml-model:name "structuredClassifier" ;
	uml-model:type "StructuredClassifier" ;
	uml-model:association uml-element:A_ownedAttribute_structuredClassifier ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:NamedElement-namespace .

element:A_role_structuredClassifier xmi:type uml:Association ;
	xmi:id "A_role_structuredClassifier" ;
	uml-model:name "A_role_structuredClassifier" .

element:A_role_structuredClassifier-structuredClassifier xmi:type uml:Property ;
	xmi:id "A_role_structuredClassifier-structuredClassifier" ;
	uml-model:name "structuredClassifier" ;
	uml-model:type "StructuredClassifier" ;
	uml-model:association uml-element:A_role_structuredClassifier ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace .

element:A_protocol_port xmi:type uml:Association ;
	xmi:id "A_protocol_port" ;
	uml-model:name "A_protocol_port" .

element:A_protocol_port-port xmi:type uml:Property ;
	xmi:id "A_protocol_port-port" ;
	uml-model:name "port" ;
	uml-model:type "Port" ;
	uml-model:association uml-element:A_protocol_port .

element:A_required_port xmi:type uml:Association ;
	xmi:id "A_required_port" ;
	uml-model:name "A_required_port" .

element:A_required_port-port xmi:type uml:Property ;
	xmi:id "A_required_port-port" ;
	uml-model:name "port" ;
	uml-model:type "Port" ;
	uml-model:association uml-element:A_required_port .

element:A_redefinedPort_port xmi:type uml:Association ;
	xmi:id "A_redefinedPort_port" ;
	uml-model:name "A_redefinedPort_port" .

element:A_redefinedPort_port-port xmi:type uml:Property ;
	xmi:id "A_redefinedPort_port-port" ;
	uml-model:name "port" ;
	uml-model:type "Port" ;
	uml-model:association uml-element:A_redefinedPort_port ;
	uml-model:subsettedProperty uml-element:A_redefinedProperty_property-property .

element:A_provided_port xmi:type uml:Association ;
	xmi:id "A_provided_port" ;
	uml-model:name "A_provided_port" .

element:A_provided_port-port xmi:type uml:Property ;
	xmi:id "A_provided_port-port" ;
	uml-model:name "port" ;
	uml-model:type "Port" ;
	uml-model:association uml-element:A_provided_port .

element:A_ownedPort_encapsulatedClassifier xmi:type uml:Association ;
	xmi:id "A_ownedPort_encapsulatedClassifier" ;
	uml-model:name "A_ownedPort_encapsulatedClassifier" .

element:A_ownedPort_encapsulatedClassifier-encapsulatedClassifier xmi:type uml:Property ;
	xmi:id "A_ownedPort_encapsulatedClassifier-encapsulatedClassifier" ;
	uml-model:name "encapsulatedClassifier" ;
	uml-model:type "EncapsulatedClassifier" ;
	uml-model:association uml-element:A_ownedPort_encapsulatedClassifier ;
	uml-model:subsettedProperty uml-element:A_ownedAttribute_structuredClassifier-structuredClassifier .

element:A_partWithPort_connectorEnd xmi:type uml:Association ;
	xmi:id "A_partWithPort_connectorEnd" ;
	uml-model:name "A_partWithPort_connectorEnd" .

element:A_partWithPort_connectorEnd-connectorEnd xmi:type uml:Property ;
	xmi:id "A_partWithPort_connectorEnd-connectorEnd" ;
	uml-model:name "connectorEnd" ;
	uml-model:type "ConnectorEnd" ;
	uml-model:association uml-element:A_partWithPort_connectorEnd .

element:A_definingEnd_connectorEnd xmi:type uml:Association ;
	xmi:id "A_definingEnd_connectorEnd" ;
	uml-model:name "A_definingEnd_connectorEnd" .

element:A_definingEnd_connectorEnd-connectorEnd xmi:type uml:Property ;
	xmi:id "A_definingEnd_connectorEnd-connectorEnd" ;
	uml-model:name "connectorEnd" ;
	uml-model:type "ConnectorEnd" ;
	uml-model:association uml-element:A_definingEnd_connectorEnd .

element:A_end_connector xmi:type uml:Association ;
	xmi:id "A_end_connector" ;
	uml-model:name "A_end_connector" .

element:A_end_connector-connector xmi:type uml:Property ;
	xmi:id "A_end_connector-connector" ;
	uml-model:name "connector" ;
	uml-model:type "Connector" ;
	uml-model:association uml-element:A_end_connector ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_redefinedConnector_connector xmi:type uml:Association ;
	xmi:id "A_redefinedConnector_connector" ;
	uml-model:name "A_redefinedConnector_connector" .

element:A_redefinedConnector_connector-connector xmi:type uml:Property ;
	xmi:id "A_redefinedConnector_connector-connector" ;
	uml-model:name "connector" ;
	uml-model:type "Connector" ;
	uml-model:association uml-element:A_redefinedConnector_connector ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_contract_connector xmi:type uml:Association ;
	xmi:id "A_contract_connector" ;
	uml-model:name "A_contract_connector" .

element:A_contract_connector-connector xmi:type uml:Property ;
	xmi:id "A_contract_connector-connector" ;
	uml-model:name "connector" ;
	uml-model:type "Connector" ;
	uml-model:association uml-element:A_contract_connector .

element:A_type_connector xmi:type uml:Association ;
	xmi:id "A_type_connector" ;
	uml-model:name "A_type_connector" .

element:A_type_connector-connector xmi:type uml:Property ;
	xmi:id "A_type_connector-connector" ;
	uml-model:name "connector" ;
	uml-model:type "Connector" ;
	uml-model:association uml-element:A_type_connector .

element:A_connectableElement_templateParameter_parameteredElement xmi:type uml:Association ;
	xmi:id "A_connectableElement_templateParameter_parameteredElement" ;
	uml-model:name "A_connectableElement_templateParameter_parameteredElement" .

element:A_end_role xmi:type uml:Association ;
	xmi:id "A_end_role" ;
	uml-model:name "A_end_role" .

element:A_realizingClassifier_componentRealization xmi:type uml:Association ;
	xmi:id "A_realizingClassifier_componentRealization" ;
	uml-model:name "A_realizingClassifier_componentRealization" .

element:A_realizingClassifier_componentRealization-componentRealization xmi:type uml:Property ;
	xmi:id "A_realizingClassifier_componentRealization-componentRealization" ;
	uml-model:name "componentRealization" ;
	uml-model:type "ComponentRealization" ;
	uml-model:association uml-element:A_realizingClassifier_componentRealization ;
	uml-model:subsettedProperty uml-element:NamedElement-clientDependency .

element:A_required_component xmi:type uml:Association ;
	xmi:id "A_required_component" ;
	uml-model:name "A_required_component" .

element:A_required_component-component xmi:type uml:Property ;
	xmi:id "A_required_component-component" ;
	uml-model:name "component" ;
	uml-model:type "Component" ;
	uml-model:association uml-element:A_required_component .

element:A_packagedElement_component xmi:type uml:Association ;
	xmi:id "A_packagedElement_component" ;
	uml-model:name "A_packagedElement_component" .

element:A_packagedElement_component-component xmi:type uml:Property ;
	xmi:id "A_packagedElement_component-component" ;
	uml-model:name "component" ;
	uml-model:type "Component" ;
	uml-model:association uml-element:A_packagedElement_component ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_realization_abstraction_component xmi:type uml:Association ;
	xmi:id "A_realization_abstraction_component" ;
	uml-model:name "A_realization_abstraction_component" .

element:A_provided_component xmi:type uml:Association ;
	xmi:id "A_provided_component" ;
	uml-model:name "A_provided_component" .

element:A_provided_component-component xmi:type uml:Property ;
	xmi:id "A_provided_component-component" ;
	uml-model:name "component" ;
	uml-model:type "Component" ;
	uml-model:association uml-element:A_provided_component .

element:A_type_collaborationUse xmi:type uml:Association ;
	xmi:id "A_type_collaborationUse" ;
	uml-model:name "A_type_collaborationUse" .

element:A_type_collaborationUse-collaborationUse xmi:type uml:Property ;
	xmi:id "A_type_collaborationUse-collaborationUse" ;
	uml-model:name "collaborationUse" ;
	uml-model:type "CollaborationUse" ;
	uml-model:association uml-element:A_type_collaborationUse .

element:A_roleBinding_collaborationUse xmi:type uml:Association ;
	xmi:id "A_roleBinding_collaborationUse" ;
	uml-model:name "A_roleBinding_collaborationUse" .

element:A_roleBinding_collaborationUse-collaborationUse xmi:type uml:Property ;
	xmi:id "A_roleBinding_collaborationUse-collaborationUse" ;
	uml-model:name "collaborationUse" ;
	uml-model:type "CollaborationUse" ;
	uml-model:association uml-element:A_roleBinding_collaborationUse ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_collaborationRole_collaboration xmi:type uml:Association ;
	xmi:id "A_collaborationRole_collaboration" ;
	uml-model:name "A_collaborationRole_collaboration" .

element:A_collaborationRole_collaboration-collaboration xmi:type uml:Property ;
	xmi:id "A_collaborationRole_collaboration-collaboration" ;
	uml-model:name "collaboration" ;
	uml-model:type "Collaboration" ;
	uml-model:association uml-element:A_collaborationRole_collaboration ;
	uml-model:subsettedProperty uml-element:A_role_structuredClassifier-structuredClassifier .

element:A_ownedOperation_class xmi:type uml:Association ;
	xmi:id "A_ownedOperation_class" ;
	uml-model:name "A_ownedOperation_class" .

element:A_superClass_class xmi:type uml:Association ;
	xmi:id "A_superClass_class" ;
	uml-model:name "A_superClass_class" .

element:A_superClass_class-class xmi:type uml:Property ;
	xmi:id "A_superClass_class-class" ;
	uml-model:name "class" ;
	uml-model:type "Class" ;
	uml-model:association uml-element:A_superClass_class ;
	uml-model:subsettedProperty uml-element:A_general_classifier-classifier .

element:A_extension_metaclass xmi:type uml:Association ;
	xmi:id "A_extension_metaclass" ;
	uml-model:name "A_extension_metaclass" .

element:A_ownedAttribute_class xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_class" ;
	uml-model:name "A_ownedAttribute_class" .

element:A_nestedClassifier_nestingClass xmi:type uml:Association ;
	xmi:id "A_nestedClassifier_nestingClass" ;
	uml-model:name "A_nestedClassifier_nestingClass" .

element:A_nestedClassifier_nestingClass-nestingClass xmi:type uml:Property ;
	xmi:id "A_nestedClassifier_nestingClass-nestingClass" ;
	uml-model:name "nestingClass" ;
	uml-model:type "Class" ;
	uml-model:association uml-element:A_nestedClassifier_nestingClass ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext .

element:A_ownedReception_class xmi:type uml:Association ;
	xmi:id "A_ownedReception_class" ;
	uml-model:name "A_ownedReception_class" .

element:A_ownedReception_class-class xmi:type uml:Property ;
	xmi:id "A_ownedReception_class-class" ;
	uml-model:name "class" ;
	uml-model:type "Class" ;
	uml-model:association uml-element:A_ownedReception_class ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace .

element:A_memberEnd_association xmi:type uml:Association ;
	xmi:id "A_memberEnd_association" ;
	uml-model:name "A_memberEnd_association" .

element:A_endType_association xmi:type uml:Association ;
	xmi:id "A_endType_association" ;
	uml-model:name "A_endType_association" .

element:A_endType_association-association xmi:type uml:Property ;
	xmi:id "A_endType_association-association" ;
	uml-model:name "association" ;
	uml-model:type "Association" ;
	uml-model:association uml-element:A_endType_association ;
	uml-model:subsettedProperty uml-element:A_relatedElement_relationship-relationship .

element:A_ownedEnd_owningAssociation xmi:type uml:Association ;
	xmi:id "A_ownedEnd_owningAssociation" ;
	uml-model:name "A_ownedEnd_owningAssociation" .

element:A_navigableOwnedEnd_association xmi:type uml:Association ;
	xmi:id "A_navigableOwnedEnd_association" ;
	uml-model:name "A_navigableOwnedEnd_association" .

element:A_navigableOwnedEnd_association-association xmi:type uml:Property ;
	xmi:id "A_navigableOwnedEnd_association-association" ;
	uml-model:name "association" ;
	uml-model:type "Association" ;
	uml-model:association uml-element:A_navigableOwnedEnd_association ;
	uml-model:subsettedProperty uml-element:Property-owningAssociation .

element:StateMachines xmi:type uml:Package ;
	xmi:id "StateMachines" ;
	uml-model:name "StateMachines" .

uml-import:StateMachines-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "StateMachines-_packageImport.0" ;
	uml-model:packagedElement element:StateMachines ;
	uml-model:importedPackage element:Classification .

uml-import:StateMachines-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "StateMachines-_packageImport.1" ;
	uml-model:packagedElement element:StateMachines ;
	uml-model:importedPackage element:SimpleClassifiers .

uml-import:StateMachines-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "StateMachines-_packageImport.2" ;
	uml-model:packagedElement element:StateMachines ;
	uml-model:importedPackage element:CommonStructure .

element:ConnectionPointReference xmi:type uml:Class ;
	xmi:id "ConnectionPointReference" ;
	uml-model:name "ConnectionPointReference" ;
	rdfs:comment "'A ConnectionPointReference represents a usage (as part of a submachine State) of an entry/exit point Pseudostate defined in the StateMachine referenced by the submachine State."@en ;
	uml-model:rule element:ConnectionPointReference-exit_pseudostates, element:ConnectionPointReference-entry_pseudostates ;
	rdfs:subClassOf element:Vertex ;
	uml-model:ownedAttribute property:ConnectionPointReference-entry, property:ConnectionPointReference-exit, property:ConnectionPointReference-state ;
	uml-model:operation element:ConnectionPointReference-isConsistentWith .

element:ConnectionPointReference-exit_pseudostates rdfs:comment "'The exit Pseudostates must be Pseudostates with kind exitPoint."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectionPointReference-exit_pseudostates-_specification .

element:ConnectionPointReference-exit_pseudostates-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "exit->forAll(kind = PseudostateKind::exitPoint)"^^<http://www.omg.org/spec/OCL> .

element:ConnectionPointReference-entry_pseudostates rdfs:comment "'The entry Pseudostates must be Pseudostates with kind entryPoint."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConnectionPointReference-entry_pseudostates-_specification .

element:ConnectionPointReference-entry_pseudostates-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "entry->forAll(kind = PseudostateKind::entryPoint)"^^<http://www.omg.org/spec/OCL> .

property:ConnectionPointReference-entry rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectionPointReference-entry" ;
	rdfs:label "ConnectionPointReference-entry" ;
	uml-model:name "entry" ;
	uml-model:association uml-element:A_entry_connectionPointReference ;
	rdfs:range element:Pseudostate ;
	rdfs:comment "'The entryPoint Pseudostates corresponding to this connection point."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ConnectionPointReference-exit rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectionPointReference-exit" ;
	rdfs:label "ConnectionPointReference-exit" ;
	uml-model:name "exit" ;
	uml-model:association uml-element:A_exit_connectionPointReference ;
	rdfs:range element:Pseudostate ;
	rdfs:comment "'The exitPoints kind Pseudostates corresponding to this connection point."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ConnectionPointReference-state rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConnectionPointReference-state" ;
	rdfs:label "ConnectionPointReference-state" ;
	uml-model:name "state" ;
	uml-model:association uml-element:A_connection_state ;
	rdfs:range element:State ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The State in which the ConnectionPointReference is defined."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ConnectionPointReference-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies a ConnectionPointReference can only be redefined by a ConnectionPointReference."@en ;
	uml-model:rule element:ConnectionPointReference-isConsistentWith-pre, element:ConnectionPointReference-isConsistentWith-spec ;
	uml-model:returns element:ConnectionPointReference-isConsistentWith-result .

element:ConnectionPointReference-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:ConnectionPointReference-isConsistentWith-pre-_specification .

element:ConnectionPointReference-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:ConnectionPointReference-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:ConnectionPointReference-isConsistentWith-spec-_specification .

element:ConnectionPointReference-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = redefiningElement.oclIsKindOf(ConnectionPointReference)"^^<http://www.omg.org/spec/OCL> .

element:ConnectionPointReference-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:ConnectionPointReference-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:FinalState xmi:type uml:Class ;
	xmi:id "FinalState" ;
	uml-model:name "FinalState" ;
	rdfs:comment "'A special kind of State, which, when entered, signifies that the enclosing Region has completed. If the enclosing Region is directly contained in a StateMachine and all other Regions in that StateMachine also are completed, then it means that the entire StateMachine behavior is completed."@en ;
	uml-model:rule element:FinalState-no_exit_behavior, element:FinalState-no_outgoing_transitions, element:FinalState-no_regions, element:FinalState-cannot_reference_submachine, element:FinalState-no_entry_behavior, element:FinalState-no_state_behavior ;
	rdfs:subClassOf element:State ;
	uml-model:operation element:FinalState-isConsistentWith .

element:FinalState-no_exit_behavior rdfs:comment "'A FinalState has no exit Behavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-no_exit_behavior-_specification .

element:FinalState-no_exit_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "exit->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:FinalState-no_outgoing_transitions rdfs:comment "'A FinalState cannot have any outgoing Transitions."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-no_outgoing_transitions-_specification .

element:FinalState-no_outgoing_transitions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->size() = 0"^^<http://www.omg.org/spec/OCL> .

element:FinalState-no_regions rdfs:comment "'A FinalState cannot have Regions."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-no_regions-_specification .

element:FinalState-no_regions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "region->size() = 0"^^<http://www.omg.org/spec/OCL> .

element:FinalState-cannot_reference_submachine rdfs:comment "'A FinalState cannot reference a submachine."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-cannot_reference_submachine-_specification .

element:FinalState-cannot_reference_submachine-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "submachine->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:FinalState-no_entry_behavior rdfs:comment "'A FinalState has no entry Behavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-no_entry_behavior-_specification .

element:FinalState-no_entry_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "entry->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:FinalState-no_state_behavior rdfs:comment "'A FinalState has no state (doActivity) Behavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-no_state_behavior-_specification .

element:FinalState-no_state_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "doActivity->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:FinalState-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies a FinalState can only be redefined by a FinalState."@en ;
	uml-model:rule element:FinalState-isConsistentWith-pre, element:FinalState-isConsistentWith-spec ;
	uml-model:returns element:FinalState-isConsistentWith-result .

element:FinalState-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-isConsistentWith-pre-_specification .

element:FinalState-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:FinalState-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:FinalState-isConsistentWith-spec-_specification .

element:FinalState-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = redefiningElement.oclIsKindOf(FinalState)"^^<http://www.omg.org/spec/OCL> .

element:FinalState-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:FinalState-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ProtocolConformance xmi:type uml:Class ;
	xmi:id "ProtocolConformance" ;
	uml-model:name "ProtocolConformance" ;
	rdfs:comment "'A ProtocolStateMachine can be redefined into a more specific ProtocolStateMachine or into behavioral StateMachine. ProtocolConformance declares that the specific ProtocolStateMachine specifies a protocol that conforms to the general ProtocolStateMachine or that the specific behavioral StateMachine abides by the protocol of the general ProtocolStateMachine."@en ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:ProtocolConformance-generalMachine, property:ProtocolConformance-specificMachine .

property:ProtocolConformance-generalMachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolConformance-generalMachine" ;
	rdfs:label "ProtocolConformance-generalMachine" ;
	uml-model:name "generalMachine" ;
	uml-model:association uml-element:A_generalMachine_protocolConformance ;
	rdfs:range element:ProtocolStateMachine ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'Specifies the ProtocolStateMachine to which the specific ProtocolStateMachine conforms."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ProtocolConformance-specificMachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolConformance-specificMachine" ;
	rdfs:label "ProtocolConformance-specificMachine" ;
	uml-model:name "specificMachine" ;
	uml-model:association uml-element:A_conformance_specificMachine ;
	rdfs:range element:ProtocolStateMachine ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'Specifies the ProtocolStateMachine which conforms to the general ProtocolStateMachine."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ProtocolStateMachine xmi:type uml:Class ;
	xmi:id "ProtocolStateMachine" ;
	uml-model:name "ProtocolStateMachine" ;
	rdfs:comment "'A ProtocolStateMachine is always defined in the context of a Classifier. It specifies which BehavioralFeatures of the Classifier can be called in which State and under which conditions, thus specifying the allowed invocation sequences on the Classifier's BehavioralFeatures. A ProtocolStateMachine specifies the possible and permitted Transitions on the instances of its context Classifier, together with the BehavioralFeatures that carry the Transitions. In this manner, an instance lifecycle can be specified for a Classifier, by defining the order in which the BehavioralFeatures can be activated and the States through which an instance progresses during its existence."@en ;
	uml-model:rule element:ProtocolStateMachine-classifier_context, element:ProtocolStateMachine-deep_or_shallow_history, element:ProtocolStateMachine-entry_exit_do, element:ProtocolStateMachine-protocol_transitions ;
	rdfs:subClassOf element:StateMachine ;
	uml-model:ownedAttribute property:ProtocolStateMachine-conformance .

element:ProtocolStateMachine-classifier_context rdfs:comment "'A ProtocolStateMachine must only have a Classifier context, not a BehavioralFeature context."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolStateMachine-classifier_context-_specification .

element:ProtocolStateMachine-classifier_context-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "_'context' <> null and specification = null"^^<http://www.omg.org/spec/OCL> .

element:ProtocolStateMachine-deep_or_shallow_history rdfs:comment "'ProtocolStateMachines cannot have deep or shallow history Pseudostates."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolStateMachine-deep_or_shallow_history-_specification .

element:ProtocolStateMachine-deep_or_shallow_history-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "region->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\n((v.oclAsType(Pseudostate).kind <>  PseudostateKind::deepHistory) and (v.oclAsType(Pseudostate).kind <> PseudostateKind::shallowHistory))))"^^<http://www.omg.org/spec/OCL> .

element:ProtocolStateMachine-entry_exit_do rdfs:comment "'The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolStateMachine-entry_exit_do-_specification .

element:ProtocolStateMachine-entry_exit_do-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "region->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\n(v.oclAsType(State).entry->isEmpty() and v.oclAsType(State).exit->isEmpty() and v.oclAsType(State).doActivity->isEmpty())))"^^<http://www.omg.org/spec/OCL> .

element:ProtocolStateMachine-protocol_transitions rdfs:comment "'All Transitions of a ProtocolStateMachine must be ProtocolTransitions."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolStateMachine-protocol_transitions-_specification .

element:ProtocolStateMachine-protocol_transitions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "region->forAll(r | r.transition->forAll(t | t.oclIsTypeOf(ProtocolTransition)))"^^<http://www.omg.org/spec/OCL> .

property:ProtocolStateMachine-conformance rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolStateMachine-conformance" ;
	rdfs:label "ProtocolStateMachine-conformance" ;
	uml-model:name "conformance" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_conformance_specificMachine ;
	rdfs:range element:ProtocolConformance ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'Conformance between ProtocolStateMachine "@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ProtocolTransition xmi:type uml:Class ;
	xmi:id "ProtocolTransition" ;
	uml-model:name "ProtocolTransition" ;
	rdfs:comment "'A ProtocolTransition specifies a legal Transition for an Operation. Transitions of ProtocolStateMachines have the following information: a pre-condition (guard), a Trigger, and a post-condition. Every ProtocolTransition is associated with at most one BehavioralFeature belonging to the context Classifier of the ProtocolStateMachine."@en ;
	uml-model:rule element:ProtocolTransition-refers_to_operation, element:ProtocolTransition-associated_actions, element:ProtocolTransition-belongs_to_psm ;
	rdfs:subClassOf element:Transition ;
	uml-model:ownedAttribute property:ProtocolTransition-postCondition, property:ProtocolTransition-preCondition, property:ProtocolTransition-referred ;
	uml-model:operation element:ProtocolTransition-referred.1 .

element:ProtocolTransition-refers_to_operation rdfs:comment "'If a ProtocolTransition refers to an Operation (i.e., has a CallEvent trigger corresponding to an Operation), then that Operation should apply to the context Classifier of the StateMachine of the ProtocolTransition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolTransition-refers_to_operation-_specification .

element:ProtocolTransition-refers_to_operation-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if (referred()->notEmpty() and containingStateMachine()._'context'->notEmpty()) then \n    containingStateMachine()._'context'.oclAsType(BehavioredClassifier).allFeatures()->includesAll(referred())\nelse true endif"^^<http://www.omg.org/spec/OCL> .

element:ProtocolTransition-associated_actions rdfs:comment "'A ProtocolTransition never has associated Behaviors."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolTransition-associated_actions-_specification .

element:ProtocolTransition-associated_actions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "effect = null"^^<http://www.omg.org/spec/OCL> .

element:ProtocolTransition-belongs_to_psm rdfs:comment "'A ProtocolTransition always belongs to a ProtocolStateMachine."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolTransition-belongs_to_psm-_specification .

element:ProtocolTransition-belongs_to_psm-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "container.belongsToPSM()"^^<http://www.omg.org/spec/OCL> .

property:ProtocolTransition-postCondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolTransition-postCondition" ;
	rdfs:label "ProtocolTransition-postCondition" ;
	uml-model:name "postCondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_postCondition_owningTransition ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'Specifies the post condition of the Transition which is the Condition that should be obtained once the Transition is triggered. This post condition is part of the post condition of the Operation connected to the Transition."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ProtocolTransition-preCondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolTransition-preCondition" ;
	rdfs:label "ProtocolTransition-preCondition" ;
	uml-model:name "preCondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_preCondition_protocolTransition ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Transition-guard ;
	rdfs:comment "'Specifies the precondition of the Transition. It specifies the Condition that should be verified before triggering the Transition. This guard condition added to the source State will be evaluated as part of the precondition of the Operation referred by the Transition if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ProtocolTransition-referred rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProtocolTransition-referred" ;
	rdfs:label "ProtocolTransition-referred" ;
	uml-model:name "referred" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_referred_protocolTransition ;
	rdfs:range element:Operation ;
	rdfs:comment "'This association refers to the associated Operation. It is derived from the Operation of the CallEvent Trigger when applicable."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:ProtocolTransition-referred.1-spec .

element:ProtocolTransition-referred.1 rdfs:comment "'Derivation for ProtocolTransition::/referred"@en ;
	uml-model:returns element:ProtocolTransition-referred.1-result .

element:ProtocolTransition-referred.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:ProtocolTransition-referred.1-spec-_specification .

element:ProtocolTransition-referred.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (trigger->collect(event)->select(oclIsKindOf(CallEvent))->collect(oclAsType(CallEvent).operation)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:ProtocolTransition-referred.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Operation ;
	uml-model:upperValue element:ProtocolTransition-referred.1-result-_upperValue .

element:ProtocolTransition-referred.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Pseudostate xmi:type uml:Class ;
	xmi:id "Pseudostate" ;
	uml-model:name "Pseudostate" ;
	rdfs:comment "'A Pseudostate is an abstraction that encompasses different types of transient Vertices in the StateMachine graph. A StateMachine instance never comes to rest in a Pseudostate, instead, it will exit and enter the Pseudostate within a single run-to-completion step."@en ;
	uml-model:rule element:Pseudostate-transitions_outgoing, element:Pseudostate-choice_vertex, element:Pseudostate-outgoing_from_initial, element:Pseudostate-join_vertex, element:Pseudostate-junction_vertex, element:Pseudostate-history_vertices, element:Pseudostate-initial_vertex, element:Pseudostate-fork_vertex, element:Pseudostate-transitions_incoming ;
	rdfs:subClassOf element:Vertex ;
	uml-model:ownedAttribute property:Pseudostate-kind, property:Pseudostate-state, property:Pseudostate-stateMachine ;
	uml-model:operation element:Pseudostate-isConsistentWith .

element:Pseudostate-transitions_outgoing rdfs:comment "'All transitions outgoing a fork vertex must target states in different regions of an orthogonal state."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-transitions_outgoing-_specification .

element:Pseudostate-transitions_outgoing-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::fork) implies\n\n-- for any pair of outgoing transitions there exists an orthogonal state which contains the targets of these transitions \n-- such that these targets belong to different regions of that orthogonal state \n\noutgoing->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.target, t2.target) in\n   ((contState <> null) and (contState.region\n      ->exists(r1:Region, r2: Region | (r1 <> r2) and t1.target.isContainedInRegion(r1) and t2.target.isContainedInRegion(r2)))))"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-choice_vertex rdfs:comment "'In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-choice_vertex-_specification .

element:Pseudostate-choice_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-outgoing_from_initial rdfs:comment "'The outgoing Transition from an initial vertex may have a behavior, but not a trigger or a guard."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-outgoing_from_initial-_specification .

element:Pseudostate-outgoing_from_initial-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::initial) implies (outgoing.guard = null and outgoing.trigger->isEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-join_vertex rdfs:comment "'In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-join_vertex-_specification .

element:Pseudostate-join_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->size() >= 2)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-junction_vertex rdfs:comment "'In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-junction_vertex-_specification .

element:Pseudostate-junction_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-history_vertices rdfs:comment "'History Vertices can have at most one outgoing Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-history_vertices-_specification .

element:Pseudostate-history_vertices-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-initial_vertex rdfs:comment "'An initial Vertex can have at most one outgoing Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-initial_vertex-_specification .

element:Pseudostate-initial_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::initial) implies (outgoing->size() <= 1)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-fork_vertex rdfs:comment "'In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-fork_vertex-_specification .

element:Pseudostate-fork_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->size() >= 2)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-transitions_incoming rdfs:comment "'All Transitions incoming a join Vertex must originate in different Regions of an orthogonal State."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-transitions_incoming-_specification .

element:Pseudostate-transitions_incoming-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = PseudostateKind::join) implies\n\n-- for any pair of incoming transitions there exists an orthogonal state which contains the source vetices of these transitions \n-- such that these source vertices belong to different regions of that orthogonal state \n\nincoming->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.source, t2.source) in\n   ((contState <> null) and (contState.region\n      ->exists(r1:Region, r2: Region | (r1 <> r2) and t1.source.isContainedInRegion(r1) and t2.source.isContainedInRegion(r2)))))"^^<http://www.omg.org/spec/OCL> .

property:Pseudostate-kind rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Pseudostate-kind" ;
	rdfs:label "Pseudostate-kind" ;
	uml-model:name "kind" ;
	rdfs:range element:PseudostateKind ;
	rdfs:comment "'Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice."@en ;
	xmi:defaultValue element:Pseudostate-kind-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Pseudostate-kind-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "Pseudostate-kind-_defaultValue" .

property:Pseudostate-state rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Pseudostate-state" ;
	rdfs:label "Pseudostate-state" ;
	uml-model:name "state" ;
	uml-model:association uml-element:A_connectionPoint_state ;
	rdfs:range element:State ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The State that owns this Pseudostate and in which it appears."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Pseudostate-stateMachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Pseudostate-stateMachine" ;
	rdfs:label "Pseudostate-stateMachine" ;
	uml-model:name "stateMachine" ;
	uml-model:association uml-element:A_connectionPoint_stateMachine ;
	rdfs:range element:StateMachine ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Pseudostate-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies a Pseudostate can only be redefined by a Pseudostate of the same kind."@en ;
	uml-model:rule element:Pseudostate-isConsistentWith-pre, element:Pseudostate-isConsistentWith-spec ;
	uml-model:returns element:Pseudostate-isConsistentWith-result .

element:Pseudostate-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-isConsistentWith-pre-_specification .

element:Pseudostate-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Pseudostate-isConsistentWith-spec-_specification .

element:Pseudostate-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(Pseudostate) and\nredefiningElement.oclAsType(Pseudostate).kind = kind)"^^<http://www.omg.org/spec/OCL> .

element:Pseudostate-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Pseudostate-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Region xmi:type uml:Class ;
	xmi:id "Region" ;
	uml-model:name "Region" ;
	rdfs:comment "'A Region is a top-level part of a StateMachine or a composite State, that serves as a container for the Vertices and Transitions of the StateMachine. A StateMachine or composite State may contain multiple Regions representing behaviors that may occur in parallel."@en ;
	uml-model:rule element:Region-deep_history_vertex, element:Region-shallow_history_vertex, element:Region-owned, element:Region-initial_vertex ;
	rdfs:subClassOf element:Namespace, element:RedefinableElement ;
	uml-model:ownedAttribute property:Region-extendedRegion, property:Region-redefinitionContext, property:Region-state, property:Region-stateMachine, property:Region-subvertex, property:Region-transition ;
	uml-model:operation element:Region-belongsToPSM, element:Region-containingStateMachine, element:Region-isConsistentWith, element:Region-isRedefinitionContextValid, element:Region-redefinitionContext.1 .

element:Region-deep_history_vertex rdfs:comment "'A Region can have at most one deep history Vertex."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Region-deep_history_vertex-_specification .

element:Region-deep_history_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n   select(kind = PseudostateKind::deepHistory)->size() <= 1"^^<http://www.omg.org/spec/OCL> .

element:Region-shallow_history_vertex rdfs:comment "'A Region can have at most one shallow history Vertex."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Region-shallow_history_vertex-_specification .

element:Region-shallow_history_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "subvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1"^^<http://www.omg.org/spec/OCL> .

element:Region-owned rdfs:comment "'If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Region-owned-_specification .

element:Region-owned-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(stateMachine <> null implies state = null) and (state <> null implies stateMachine = null)"^^<http://www.omg.org/spec/OCL> .

element:Region-initial_vertex rdfs:comment "'A Region can have at most one initial Vertex."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Region-initial_vertex-_specification .

element:Region-initial_vertex-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n  select(kind = PseudostateKind::initial)->size() <= 1"^^<http://www.omg.org/spec/OCL> .

property:Region-extendedRegion rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-extendedRegion" ;
	rdfs:label "Region-extendedRegion" ;
	uml-model:name "extendedRegion" ;
	uml-model:association uml-element:A_extendedRegion_region ;
	rdfs:range element:Region ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The region of which this region is an extension."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Region-redefinitionContext rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-redefinitionContext" ;
	rdfs:label "Region-redefinitionContext" ;
	uml-model:name "redefinitionContext" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_redefinitionContext_region ;
	rdfs:range element:Classifier ;
	rdfs:comment "'References the Classifier in which context this element may be redefined."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Region-redefinitionContext.1-spec .

property:Region-state rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-state" ;
	rdfs:label "Region-state" ;
	uml-model:name "state" ;
	uml-model:association uml-element:A_region_state ;
	rdfs:range element:State ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Region-stateMachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-stateMachine" ;
	rdfs:label "Region-stateMachine" ;
	uml-model:name "stateMachine" ;
	uml-model:association uml-element:A_region_stateMachine ;
	rdfs:range element:StateMachine ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Region-subvertex rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-subvertex" ;
	rdfs:label "Region-subvertex" ;
	uml-model:name "subvertex" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_subvertex_container ;
	rdfs:range element:Vertex ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The set of Vertices that are owned by this Region."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Region-transition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Region-transition" ;
	rdfs:label "Region-transition" ;
	uml-model:name "transition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_transition_container ;
	rdfs:range element:Transition ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The set of Transitions owned by the Region."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Region-belongsToPSM rdfs:comment "'The operation belongsToPSM () checks if the Region belongs to a ProtocolStateMachine."@en ;
	uml-model:rule element:Region-belongsToPSM-spec ;
	uml-model:returns element:Region-belongsToPSM-result .

element:Region-belongsToPSM-spec rdf:type uml:Constraint ;
	uml-model:specification element:Region-belongsToPSM-spec-_specification .

element:Region-belongsToPSM-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if  stateMachine <> null \nthen\n  stateMachine.oclIsKindOf(ProtocolStateMachine)\nelse \n  state <> null  implies  state.container.belongsToPSM()\nendif )"^^<http://www.omg.org/spec/OCL> .

element:Region-belongsToPSM-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Region-containingStateMachine rdfs:comment "'The operation containingStateMachine() returns the StateMachine in which this Region is defined."@en ;
	uml-model:rule element:Region-containingStateMachine-spec ;
	uml-model:returns element:Region-containingStateMachine-result .

element:Region-containingStateMachine-spec rdf:type uml:Constraint ;
	uml-model:specification element:Region-containingStateMachine-spec-_specification .

element:Region-containingStateMachine-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if stateMachine = null \nthen\n  state.containingStateMachine()\nelse\n  stateMachine\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Region-containingStateMachine-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:StateMachine .

element:Region-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith specifies that a Region can be redefined by any Region for which the redefinition context is valid (see the isRedefinitionContextValid operation). Note that consistency requirements for the redefinition of Vertices and Transitions within a redefining Region are specified by the isConsistentWith and isRedefinitionContextValid operations for Vertex (and its subclasses) and Transition."@en ;
	uml-model:rule element:Region-isConsistentWith-spec, element:Region-isConsistentWith-pre ;
	uml-model:returns element:Region-isConsistentWith-result .

element:Region-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Region-isConsistentWith-spec-_specification .

element:Region-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = true"^^<http://www.omg.org/spec/OCL> .

element:Region-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:Region-isConsistentWith-pre-_specification .

element:Region-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:Region-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Region-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Region-isRedefinitionContextValid uml-model:redefines element:RedefinableElement-isRedefinitionContextValid ;
	rdfs:comment "'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a Region are properly related to the redefinition contexts of the specified Region to allow this element to redefine the other. The containing StateMachine or State of a redefining Region must Redefine the containing StateMachine or State of the redefined Region."@en ;
	uml-model:rule element:Region-isRedefinitionContextValid-spec ;
	uml-model:returns element:Region-isRedefinitionContextValid-result .

element:Region-isRedefinitionContextValid-spec rdf:type uml:Constraint ;
	uml-model:specification element:Region-isRedefinitionContextValid-spec-_specification .

element:Region-isRedefinitionContextValid-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if redefinedElement.oclIsKindOf(Region) then\n  let redefinedRegion : Region = redefinedElement.oclAsType(Region) in\n    if stateMachine->isEmpty() then\n    -- the Region is owned by a State\n      (state.redefinedState->notEmpty() and state.redefinedState.region->includes(redefinedRegion))\n    else -- the region is owned by a StateMachine\n      (stateMachine.extendedStateMachine->notEmpty() and\n        stateMachine.extendedStateMachine->exists(sm : StateMachine |\n          sm.region->includes(redefinedRegion)))\n    endif\nelse\n  false\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Region-isRedefinitionContextValid-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Region-isRedefinitionContextValid-redefinedElement rdf:type uml:Parameter ;
	uml-model:name "redefinedElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Region-redefinitionContext.1 rdfs:comment "'The redefinition context of a Region is the nearest containing StateMachine."@en ;
	uml-model:returns element:Region-redefinitionContext.1-result .

element:Region-redefinitionContext.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Region-redefinitionContext.1-spec-_specification .

element:Region-redefinitionContext.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = containingStateMachine()"^^<http://www.omg.org/spec/OCL> .

element:Region-redefinitionContext.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier .

element:State xmi:type uml:Class ;
	xmi:id "State" ;
	uml-model:name "State" ;
	rdfs:comment "'A State models a situation during which some (usually implicit) invariant condition holds."@en ;
	uml-model:rule element:State-entry_or_exit, element:State-submachine_states, element:State-composite_states, element:State-destinations_or_sources_of_transitions, element:State-submachine_or_regions ;
	rdfs:subClassOf element:Namespace, element:Vertex ;
	uml-model:ownedAttribute property:State-connection, property:State-connectionPoint, property:State-deferrableTrigger, property:State-doActivity, property:State-entry, property:State-exit, property:State-isComposite, property:State-isOrthogonal, property:State-isSimple, property:State-isSubmachineState, property:State-region, property:State-stateInvariant, property:State-submachine ;
	uml-model:operation element:State-containingStateMachine, element:State-isComposite.1, element:State-isConsistentWith, element:State-isOrthogonal.1, element:State-isSimple.1, element:State-isSubmachineState.1 .

element:State-entry_or_exit rdfs:comment "'Only entry or exit Pseudostates can serve as connection points."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:State-entry_or_exit-_specification .

element:State-entry_or_exit-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "connectionPoint->forAll(kind = PseudostateKind::entryPoint or kind = PseudostateKind::exitPoint)"^^<http://www.omg.org/spec/OCL> .

element:State-submachine_states rdfs:comment "'Only submachine States can have connection point references."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:State-submachine_states-_specification .

element:State-submachine_states-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isSubmachineState implies connection->notEmpty( )"^^<http://www.omg.org/spec/OCL> .

element:State-composite_states rdfs:comment "'Only composite States can have entry or exit Pseudostates defined."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:State-composite_states-_specification .

element:State-composite_states-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "connectionPoint->notEmpty() implies isComposite"^^<http://www.omg.org/spec/OCL> .

element:State-destinations_or_sources_of_transitions rdfs:comment "'The connection point references used as destinations/sources of Transitions associated with a submachine State must be defined as entry/exit points in the submachine StateMachine."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:State-destinations_or_sources_of_transitions-_specification .

element:State-destinations_or_sources_of_transitions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.isSubmachineState implies (self.connection->forAll (cp |\n  cp.entry->forAll (ps | ps.stateMachine = self.submachine) and\n  cp.exit->forAll (ps | ps.stateMachine = self.submachine)))"^^<http://www.omg.org/spec/OCL> .

element:State-submachine_or_regions rdfs:comment "'A State is not allowed to have both a submachine and Regions."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:State-submachine_or_regions-_specification .

element:State-submachine_or_regions-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isComposite implies not isSubmachineState"^^<http://www.omg.org/spec/OCL> .

property:State-connection rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-connection" ;
	rdfs:label "State-connection" ;
	uml-model:name "connection" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_connection_state ;
	rdfs:range element:ConnectionPointReference ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The entry and exit connection points used in conjunction with this (submachine) State, i.e., as targets and sources, respectively, in the Region with the submachine State. A connection point reference references the corresponding definition of a connection point Pseudostate in the StateMachine referenced by the submachine State."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:State-connectionPoint rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-connectionPoint" ;
	rdfs:label "State-connectionPoint" ;
	uml-model:name "connectionPoint" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_connectionPoint_state ;
	rdfs:range element:Pseudostate ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The entry and exit Pseudostates of a composite State. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite States."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:State-deferrableTrigger rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-deferrableTrigger" ;
	rdfs:label "State-deferrableTrigger" ;
	uml-model:name "deferrableTrigger" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_deferrableTrigger_state ;
	rdfs:range element:Trigger ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A list of Triggers that are candidates to be retained by the StateMachine if they trigger no Transitions out of the State (not consumed). A deferred Trigger is retained until the StateMachine reaches a State configuration where it is no longer deferred."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:State-doActivity rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-doActivity" ;
	rdfs:label "State-doActivity" ;
	uml-model:name "doActivity" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_doActivity_state ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'An optional Behavior that is executed while being in the State. The execution starts when this State is entered, and ceases either by itself when done, or when the State is exited, whichever comes first."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:State-entry rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-entry" ;
	rdfs:label "State-entry" ;
	uml-model:name "entry" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_entry_state ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'An optional Behavior that is executed whenever this State is entered regardless of the Transition taken to reach the State. If defined, entry Behaviors are always executed to completion prior to any internal Behavior or Transitions performed within the State."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:State-exit rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-exit" ;
	rdfs:label "State-exit" ;
	uml-model:name "exit" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_exit_state ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'An optional Behavior that is executed whenever this State is exited regardless of which Transition was taken out of the State. If defined, exit Behaviors are always executed to completion only after all internal and transition Behaviors have completed execution."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:State-isComposite rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "State-isComposite" ;
	rdfs:label "State-isComposite" ;
	uml-model:name "isComposite" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'A state with isComposite=true is said to be a composite State. A composite State is a State that contains at least one Region."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:State-isComposite.1-spec .

property:State-isOrthogonal rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "State-isOrthogonal" ;
	rdfs:label "State-isOrthogonal" ;
	uml-model:name "isOrthogonal" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'A State with isOrthogonal=true is said to be an orthogonal composite State An orthogonal composite State contains two or more Regions."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:State-isOrthogonal.1-spec .

property:State-isSimple rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "State-isSimple" ;
	rdfs:label "State-isSimple" ;
	uml-model:name "isSimple" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'A State with isSimple=true is said to be a simple State A simple State does not have any Regions and it does not refer to any submachine StateMachine."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:State-isSimple.1-spec .

property:State-isSubmachineState rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "State-isSubmachineState" ;
	rdfs:label "State-isSubmachineState" ;
	uml-model:name "isSubmachineState" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'A State with isSubmachineState=true is said to be a submachine State Such a State refers to another StateMachine(submachine)."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:State-isSubmachineState.1-spec .

property:State-region rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-region" ;
	rdfs:label "State-region" ;
	uml-model:name "region" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_region_state ;
	rdfs:range element:Region ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Regions owned directly by the State."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:State-stateInvariant rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-stateInvariant" ;
	rdfs:label "State-stateInvariant" ;
	uml-model:name "stateInvariant" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_stateInvariant_owningState ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'Specifies conditions that are always true when this State is the current State. In ProtocolStateMachines state invariants are additional conditions to the preconditions of the outgoing Transitions, and to the postcondition of the incoming Transitions."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:State-submachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-submachine" ;
	rdfs:label "State-submachine" ;
	uml-model:name "submachine" ;
	uml-model:association uml-element:A_submachineState_submachine ;
	rdfs:range element:StateMachine ;
	rdfs:comment "'The StateMachine that is to be inserted in place of the (submachine) State."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:State-containingStateMachine uml-model:redefines element:Vertex-containingStateMachine ;
	rdfs:comment "'The query containingStateMachine() returns the StateMachine that contains the State either directly or transitively."@en ;
	uml-model:rule element:State-containingStateMachine-spec ;
	uml-model:returns element:State-containingStateMachine-result .

element:State-containingStateMachine-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-containingStateMachine-spec-_specification .

element:State-containingStateMachine-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (container.containingStateMachine())"^^<http://www.omg.org/spec/OCL> .

element:State-containingStateMachine-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:StateMachine .

element:State-isComposite.1 rdfs:comment "'A composite State is a State with at least one Region."@en ;
	uml-model:returns element:State-isComposite.1-result .

element:State-isComposite.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-isComposite.1-spec-_specification .

element:State-isComposite.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (region->notEmpty())"^^<http://www.omg.org/spec/OCL> .

element:State-isComposite.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:State-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith specifies that a non-final State can only be redefined by a non-final State (this is overridden by FinalState to allow a FinalState to be redefined by a FinalState) and, if the redefined State is a submachine State, then the redefining State must be a submachine state whose submachine is a redefinition of the submachine of the redefined State. Note that consistency requirements for the redefinition of Regions and connectionPoint Pseudostates within a composite State and connection ConnectionPoints of a submachine State are specified by the isConsistentWith and isRedefinitionContextValid operations for Region and Vertex (and its subclasses, Pseudostate and ConnectionPointReference)."@en, "'The query isRedefinitionContextValid specifies that the redefinition context of a redefining Vertex is properly related to the redefinition context of the redefined Vertex if the owner of the redefining Vertex is a redefinition of the owner of the redefined Vertex. Note that the owner of a Vertex may be a Region, a StateMachine (for a connectionPoint Pseudostate), or a State (for a connectionPoint Pseudostate or a connection ConnectionPointReference), all of which are RedefinableElements."@en ;
	uml-model:rule element:State-isConsistentWith-spec, element:State-isConsistentWith-pre ;
	uml-model:returns element:State-isConsistentWith-result .

element:State-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-isConsistentWith-spec-_specification .

element:State-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsTypeOf(State) and \n  let redefiningState : State = redefiningElement.oclAsType(State) in\n    submachine <> null implies (redefiningState.submachine <> null and\n      redefiningState.submachine.extendedStateMachine->includes(submachine)))"^^<http://www.omg.org/spec/OCL>, "result = (redefinedElement.oclIsKindOf(Vertex) and\n  owner.oclAsType(RedefinableElement).redefinedElement->includes(redefinedElement.owner))"^^<http://www.omg.org/spec/OCL> .

element:State-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:State-isConsistentWith-pre-_specification .

element:State-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:State-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:State-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:State-isOrthogonal.1 rdfs:comment "'An orthogonal State is a composite state with at least 2 regions."@en ;
	uml-model:returns element:State-isOrthogonal.1-result .

element:State-isOrthogonal.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-isOrthogonal.1-spec-_specification .

element:State-isOrthogonal.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (region->size () > 1)"^^<http://www.omg.org/spec/OCL> .

element:State-isOrthogonal.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:State-isSimple.1 rdfs:comment "'A simple State is a State without any regions."@en ;
	uml-model:returns element:State-isSimple.1-result .

element:State-isSimple.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-isSimple.1-spec-_specification .

element:State-isSimple.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((region->isEmpty()) and not isSubmachineState())"^^<http://www.omg.org/spec/OCL> .

element:State-isSimple.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:State-isSubmachineState.1 rdfs:comment "'Only submachine State references another StateMachine."@en ;
	uml-model:returns element:State-isSubmachineState.1-result .

element:State-isSubmachineState.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-isSubmachineState.1-spec-_specification .

element:State-isSubmachineState.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (submachine <> null)"^^<http://www.omg.org/spec/OCL> .

element:State-isSubmachineState.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:StateMachine xmi:type uml:Class ;
	xmi:id "StateMachine" ;
	uml-model:name "StateMachine" ;
	rdfs:comment "'StateMachines can be used to express event-driven behaviors of parts of a system. Behavior is modeled as a traversal of a graph of Vertices interconnected by one or more joined Transition arcs that are triggered by the dispatching of successive Event occurrences. During this traversal, the StateMachine may execute a sequence of Behaviors associated with various elements of the StateMachine."@en ;
	uml-model:rule element:StateMachine-connection_points, element:StateMachine-classifier_context, element:StateMachine-method, element:StateMachine-context_classifier ;
	rdfs:subClassOf element:Behavior ;
	uml-model:ownedAttribute property:StateMachine-connectionPoint, property:StateMachine-extendedStateMachine, property:StateMachine-region, property:StateMachine-submachineState ;
	uml-model:operation element:StateMachine-LCA, element:StateMachine-ancestor, element:StateMachine-isConsistentWith, element:StateMachine-isRedefinitionContextValid, element:StateMachine-LCAState .

element:StateMachine-connection_points rdfs:comment "'The connection points of a StateMachine are Pseudostates of kind entry point or exit point."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-connection_points-_specification .

element:StateMachine-connection_points-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "connectionPoint->forAll (kind = PseudostateKind::entryPoint or kind = PseudostateKind::exitPoint)"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-classifier_context rdfs:comment "'The Classifier context of a StateMachine cannot be an Interface."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-classifier_context-_specification .

element:StateMachine-classifier_context-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "_'context' <> null implies not _'context'.oclIsKindOf(Interface)"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-method rdfs:comment "'A StateMachine as the method for a BehavioralFeature cannot have entry/exit connection points."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-method-_specification .

element:StateMachine-method-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "specification <> null implies connectionPoint->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-context_classifier rdfs:comment "'The context Classifier of the method StateMachine of a BehavioralFeature must be the Classifier that owns the BehavioralFeature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-context_classifier-_specification .

element:StateMachine-context_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "specification <> null implies ( _'context' <> null and specification.featuringClassifier->exists(c | c = _'context'))"^^<http://www.omg.org/spec/OCL> .

property:StateMachine-connectionPoint rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateMachine-connectionPoint" ;
	rdfs:label "StateMachine-connectionPoint" ;
	uml-model:name "connectionPoint" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_connectionPoint_stateMachine ;
	rdfs:range element:Pseudostate ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The connection points defined for this StateMachine. They represent the interface of the StateMachine when used as part of submachine State"@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StateMachine-extendedStateMachine rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateMachine-extendedStateMachine" ;
	rdfs:label "StateMachine-extendedStateMachine" ;
	uml-model:name "extendedStateMachine" ;
	uml-model:association uml-element:A_extendedStateMachine_stateMachine ;
	rdfs:range element:StateMachine ;
	rdfs:comment "'The StateMachines of which this is an extension."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StateMachine-region rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateMachine-region" ;
	rdfs:label "StateMachine-region" ;
	uml-model:name "region" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_region_stateMachine ;
	rdfs:range element:Region ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Regions owned directly by the StateMachine."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:StateMachine-submachineState rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateMachine-submachineState" ;
	rdfs:label "StateMachine-submachineState" ;
	uml-model:name "submachineState" ;
	uml-model:association uml-element:A_submachineState_submachine ;
	rdfs:range element:State ;
	rdfs:comment "'References the submachine(s) in case of a submachine State. Multiple machines are referenced in case of a concurrent State."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StateMachine-LCA rdfs:comment "'The operation LCA(s1,s2) returns the Region that is the least common ancestor of Vertices s1 and s2, based on the StateMachine containment hierarchy."@en ;
	uml-model:rule element:StateMachine-LCA-spec ;
	uml-model:returns element:StateMachine-LCA-result .

element:StateMachine-LCA-spec rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-LCA-spec-_specification .

element:StateMachine-LCA-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if ancestor(s1, s2) then \n    s2.container\nelse\n   if ancestor(s2, s1) then\n       s1.container \n   else \n       LCA(s1.container.state, s2.container.state)\n   endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-LCA-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Region .

element:StateMachine-LCA-s1 rdf:type uml:Parameter ;
	uml-model:name "s1" ;
	uml-model:parameterType element:Vertex .

element:StateMachine-LCA-s2 rdf:type uml:Parameter ;
	uml-model:name "s2" ;
	uml-model:parameterType element:Vertex .

element:StateMachine-ancestor rdfs:comment "'The query ancestor(s1, s2) checks whether Vertex s2 is an ancestor of Vertex s1."@en ;
	uml-model:rule element:StateMachine-ancestor-spec ;
	uml-model:returns element:StateMachine-ancestor-result .

element:StateMachine-ancestor-spec rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-ancestor-spec-_specification .

element:StateMachine-ancestor-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if (s2 = s1) then \n   true \nelse \n   if s1.container.stateMachine->notEmpty() then \n       true\n   else \n       if s2.container.stateMachine->notEmpty() then \n           false\n       else\n           ancestor(s1, s2.container.state)\n        endif\n    endif\nendif  )"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-ancestor-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:StateMachine-ancestor-s1 rdf:type uml:Parameter ;
	uml-model:name "s1" ;
	uml-model:parameterType element:Vertex .

element:StateMachine-ancestor-s2 rdf:type uml:Parameter ;
	uml-model:name "s2" ;
	uml-model:parameterType element:Vertex .

element:StateMachine-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith specifies that a StateMachine can be redefined by any other StateMachine for which the redefinition context is valid (see the isRedefinitionContextValid operation). Note that consistency requirements for the redefinition of Regions and connectionPoint Pseudostates owned by a StateMachine are specified by the isConsistentWith and isRedefinitionContextValid operations for Region and Vertex (and its subclass Pseudostate)."@en ;
	uml-model:rule element:StateMachine-isConsistentWith-spec ;
	uml-model:returns element:StateMachine-isConsistentWith-result .

element:StateMachine-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-isConsistentWith-spec-_specification .

element:StateMachine-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = true"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:StateMachine-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:StateMachine-isRedefinitionContextValid uml-model:redefines element:RedefinableElement-isRedefinitionContextValid ;
	rdfs:comment "'The query isRedefinitionContextValid specifies whether the redefinition context of a StateMachine is properly related to the redefinition contexts of a StateMachine it redefines. The requirement is that the context BehavioredClassifier of a redefining StateMachine must specialize the context Classifier of the redefined StateMachine. If the redefining StateMachine does not have a context BehavioredClassifier, then then the redefining StateMachine also must not have a context BehavioredClassifier but must, instead, specialize the redefining StateMachine."@en ;
	uml-model:rule element:StateMachine-isRedefinitionContextValid-spec ;
	uml-model:returns element:StateMachine-isRedefinitionContextValid-result .

element:StateMachine-isRedefinitionContextValid-spec rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-isRedefinitionContextValid-spec-_specification .

element:StateMachine-isRedefinitionContextValid-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefinedElement.oclIsKindOf(StateMachine) and\n  let parentContext : BehavioredClassifier =\n    redefinedElement.oclAsType(StateMachine).context in\n  if context = null then\n    parentContext = null and self.allParents()→includes(redefinedElement)\n  else\n    parentContext <> null and context.allParents()->includes(parentContext)\n  endif)"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-isRedefinitionContextValid-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:StateMachine-isRedefinitionContextValid-redefinedElement rdf:type uml:Parameter ;
	uml-model:name "redefinedElement" ;
	uml-model:parameterType element:RedefinableElement .

element:StateMachine-LCAState rdfs:comment "'This utility funciton is like the LCA, except that it returns the nearest composite State that contains both input Vertices."@en ;
	uml-model:rule element:StateMachine-LCAState-spec ;
	uml-model:returns element:StateMachine-LCAState-result .

element:StateMachine-LCAState-spec rdf:type uml:Constraint ;
	uml-model:specification element:StateMachine-LCAState-spec-_specification .

element:StateMachine-LCAState-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if v2.oclIsTypeOf(State) and ancestor(v1, v2) then\n   v2.oclAsType(State)\nelse if v1.oclIsTypeOf(State) and ancestor(v2, v1) then\n   v1.oclAsType(State)\nelse if (v1.container.state->isEmpty() or v2.container.state->isEmpty()) then \n   null.oclAsType(State)\nelse LCAState(v1.container.state, v2.container.state)\nendif endif endif)"^^<http://www.omg.org/spec/OCL> .

element:StateMachine-LCAState-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:State .

element:StateMachine-LCAState-v1 rdf:type uml:Parameter ;
	uml-model:name "v1" ;
	uml-model:parameterType element:Vertex .

element:StateMachine-LCAState-v2 rdf:type uml:Parameter ;
	uml-model:name "v2" ;
	uml-model:parameterType element:Vertex .

element:Transition xmi:type uml:Class ;
	xmi:id "Transition" ;
	uml-model:name "Transition" ;
	rdfs:comment "'A Transition represents an arc between exactly one source Vertex and exactly one Target vertex (the source and targets may be the same Vertex). It may form part of a compound transition, which takes the StateMachine from one steady State configuration to another, representing the full response of the StateMachine to an occurrence of an Event that triggered it."@en ;
	uml-model:rule element:Transition-state_is_external, element:Transition-join_segment_guards, element:Transition-state_is_internal, element:Transition-outgoing_pseudostates, element:Transition-join_segment_state, element:Transition-fork_segment_state, element:Transition-state_is_local, element:Transition-initial_transition, element:Transition-fork_segment_guards, element:Transition-transition_vertices ;
	rdfs:subClassOf element:Namespace, element:RedefinableElement ;
	uml-model:ownedAttribute property:Transition-container, property:Transition-effect, property:Transition-guard, property:Transition-kind, property:Transition-redefinedTransition, property:Transition-redefinitionContext, property:Transition-source, property:Transition-target, property:Transition-trigger ;
	uml-model:operation element:Transition-containingStateMachine, element:Transition-isConsistentWith, element:Transition-redefinitionContext.1 .

element:Transition-state_is_external rdfs:comment "'A Transition with kind external can source any Vertex except entry points."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-state_is_external-_specification .

element:Transition-state_is_external-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = TransitionKind::external) implies\n   not (source.oclIsKindOf(Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint)"^^<http://www.omg.org/spec/OCL> .

element:Transition-join_segment_guards rdfs:comment "'A join segment must not have Guards or Triggers."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-join_segment_guards-_specification .

element:Transition-join_segment_guards-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(target.oclIsKindOf(Pseudostate) and target.oclAsType(Pseudostate).kind = PseudostateKind::join) implies (guard = null and trigger->isEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Transition-state_is_internal rdfs:comment "'A Transition with kind internal must have a State as its source, and its source and target must be equal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-state_is_internal-_specification .

element:Transition-state_is_internal-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = TransitionKind::internal) implies\n      (source.oclIsKindOf (State) and source = target)"^^<http://www.omg.org/spec/OCL> .

element:Transition-outgoing_pseudostates rdfs:comment "'Transitions outgoing Pseudostates may not have a Trigger."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-outgoing_pseudostates-_specification .

element:Transition-outgoing_pseudostates-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "source.oclIsKindOf(Pseudostate) and (source.oclAsType(Pseudostate).kind <> PseudostateKind::initial) implies trigger->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Transition-join_segment_state rdfs:comment "'A join segment must always originate from a State."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-join_segment_state-_specification .

element:Transition-join_segment_state-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(target.oclIsKindOf(Pseudostate) and target.oclAsType(Pseudostate).kind = PseudostateKind::join) implies (source.oclIsKindOf(State))"^^<http://www.omg.org/spec/OCL> .

element:Transition-fork_segment_state rdfs:comment "'A fork segment must always target a State."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-fork_segment_state-_specification .

element:Transition-fork_segment_state-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(source.oclIsKindOf(Pseudostate) and  source.oclAsType(Pseudostate).kind = PseudostateKind::fork) implies (target.oclIsKindOf(State))"^^<http://www.omg.org/spec/OCL> .

element:Transition-state_is_local rdfs:comment "'A Transition with kind local must have a composite State or an entry point as its source."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-state_is_local-_specification .

element:Transition-state_is_local-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(kind = TransitionKind::local) implies\n      ((source.oclIsKindOf (State) and source.oclAsType(State).isComposite) or\n      (source.oclIsKindOf (Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint))"^^<http://www.omg.org/spec/OCL> .

element:Transition-initial_transition rdfs:comment "'An initial Transition at the topmost level Region of a StateMachine that has no Trigger."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-initial_transition-_specification .

element:Transition-initial_transition-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\n   trigger->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Transition-fork_segment_guards rdfs:comment "'A fork segment must not have Guards or Triggers."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-fork_segment_guards-_specification .

element:Transition-fork_segment_guards-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(source.oclIsKindOf(Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::fork) implies (guard = null and trigger->isEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Transition-transition_vertices rdfs:comment "'The source and target Vertices of a Transition must be contained in the same StateMachine as the Transition."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Transition-transition_vertices-_specification .

element:Transition-transition_vertices-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let stateMachine = self.containingStateMachine() in \nsource.containingStateMachine() = stateMachine and \ntarget.containingStateMachine() = stateMachine"^^<http://www.omg.org/spec/OCL> .

property:Transition-container rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-container" ;
	rdfs:label "Transition-container" ;
	uml-model:name "container" ;
	uml-model:association uml-element:A_transition_container ;
	rdfs:range element:Region ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'Designates the Region that owns this Transition."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Transition-effect rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-effect" ;
	rdfs:label "Transition-effect" ;
	uml-model:name "effect" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_effect_transition ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies an optional behavior to be performed when the Transition fires."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Transition-guard rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-guard" ;
	rdfs:label "Transition-guard" ;
	uml-model:name "guard" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_guard_transition ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'A guard is a Constraint that provides a fine-grained control over the firing of the Transition. The guard is evaluated when an Event occurrence is dispatched by the StateMachine. If the guard is true at that time, the Transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Transition-kind rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-kind" ;
	rdfs:label "Transition-kind" ;
	uml-model:name "kind" ;
	rdfs:range element:TransitionKind ;
	rdfs:comment "'Indicates the precise type of the Transition."@en ;
	xmi:defaultValue element:Transition-kind-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Transition-kind-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "Transition-kind-_defaultValue" .

property:Transition-redefinedTransition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-redefinedTransition" ;
	rdfs:label "Transition-redefinedTransition" ;
	uml-model:name "redefinedTransition" ;
	uml-model:association uml-element:A_redefinedTransition_transition ;
	rdfs:range element:Transition ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The Transition that is redefined by this Transition."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Transition-redefinitionContext rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-redefinitionContext" ;
	rdfs:label "Transition-redefinitionContext" ;
	uml-model:name "redefinitionContext" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_redefinitionContext_transition ;
	rdfs:range element:Classifier ;
	rdfs:comment "'References the Classifier in which context this element may be redefined."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Transition-redefinitionContext.1-spec .

property:Transition-source rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-source" ;
	rdfs:label "Transition-source" ;
	uml-model:name "source" ;
	uml-model:association uml-element:A_outgoing_source_vertex ;
	rdfs:range element:Vertex ;
	rdfs:comment "'Designates the originating Vertex (State or Pseudostate) of the Transition."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Transition-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-target" ;
	rdfs:label "Transition-target" ;
	uml-model:name "target" ;
	uml-model:association uml-element:A_incoming_target_vertex ;
	rdfs:range element:Vertex ;
	rdfs:comment "'Designates the target Vertex that is reached when the Transition is taken."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Transition-trigger rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Transition-trigger" ;
	rdfs:label "Transition-trigger" ;
	uml-model:name "trigger" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_trigger_transition ;
	rdfs:range element:Trigger ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies the Triggers that may fire the transition."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Transition-containingStateMachine rdfs:comment "'The query containingStateMachine() returns the StateMachine that contains the Transition either directly or transitively."@en ;
	uml-model:rule element:Transition-containingStateMachine-spec ;
	uml-model:returns element:Transition-containingStateMachine-result .

element:Transition-containingStateMachine-spec rdf:type uml:Constraint ;
	uml-model:specification element:Transition-containingStateMachine-spec-_specification .

element:Transition-containingStateMachine-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (container.containingStateMachine())"^^<http://www.omg.org/spec/OCL> .

element:Transition-containingStateMachine-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:StateMachine .

element:Transition-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith specifies that a redefining Transition is consistent with a redefined Transition provided that the source Vertex of the redefining Transition redefines the source Vertex of the redefined Transition."@en ;
	uml-model:rule element:Transition-isConsistentWith-spec, element:Transition-isConsistentWith-pre ;
	uml-model:returns element:Transition-isConsistentWith-result .

element:Transition-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Transition-isConsistentWith-spec-_specification .

element:Transition-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(Transition) and\n  redefiningElement.oclAsType(Transition).source.redefinedTransition = source)"^^<http://www.omg.org/spec/OCL> .

element:Transition-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:Transition-isConsistentWith-pre-_specification .

element:Transition-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:Transition-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Transition-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Transition-redefinitionContext.1 rdfs:comment "'The redefinition context of a Transition is the nearest containing StateMachine."@en ;
	uml-model:returns element:Transition-redefinitionContext.1-result .

element:Transition-redefinitionContext.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Transition-redefinitionContext.1-spec-_specification .

element:Transition-redefinitionContext.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = containingStateMachine()"^^<http://www.omg.org/spec/OCL> .

element:Transition-redefinitionContext.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier .

element:Vertex xmi:type uml:Class ;
	xmi:id "Vertex" ;
	uml-model:name "Vertex" ;
	rdfs:comment "'A Vertex is an abstraction of a node in a StateMachine graph. It can be the source or destination of any number of Transitions."@en ;
	rdfs:subClassOf element:NamedElement, element:RedefinableElement ;
	uml-model:ownedAttribute property:Vertex-container, property:Vertex-incoming, property:Vertex-outgoing, property:State-redefinitionContext, property:State-redefinedState ;
	uml-model:operation element:Vertex-containingStateMachine, element:Vertex-incoming.1, element:Vertex-outgoing.1, element:Vertex-isContainedInState, element:Vertex-isContainedInRegion, element:State-redefinitionContext.1, element:State-isConsistentWith .

property:Vertex-container rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Vertex-container" ;
	rdfs:label "Vertex-container" ;
	uml-model:name "container" ;
	uml-model:association uml-element:A_subvertex_container ;
	rdfs:range element:Region ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The Region that contains this Vertex."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Vertex-incoming rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Vertex-incoming" ;
	rdfs:label "Vertex-incoming" ;
	uml-model:name "incoming" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_incoming_target_vertex ;
	rdfs:range element:Transition ;
	rdfs:comment "'Specifies the Transitions entering this Vertex."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Vertex-incoming.1-spec .

property:Vertex-outgoing rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Vertex-outgoing" ;
	rdfs:label "Vertex-outgoing" ;
	uml-model:name "outgoing" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_outgoing_source_vertex ;
	rdfs:range element:Transition ;
	rdfs:comment "'Specifies the Transitions departing from this Vertex."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Vertex-outgoing.1-spec .

property:State-redefinitionContext rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-redefinitionContext" ;
	rdfs:label "State-redefinitionContext" ;
	uml-model:name "redefinitionContext" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_redefinitionContext_state ;
	rdfs:range element:Classifier ;
	rdfs:comment "'References the Classifier in which context this element may be redefined."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:State-redefinitionContext.1-spec .

property:State-redefinedState rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "State-redefinedState" ;
	rdfs:label "State-redefinedState" ;
	uml-model:name "redefinedVertex" ;
	uml-model:association uml-element:A_redefinedState_state ;
	rdfs:range element:Vertex ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The Vertex of which this Vertex is a redefinition."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Vertex-containingStateMachine rdfs:comment "'The operation containingStateMachine() returns the StateMachine in which this Vertex is defined."@en ;
	uml-model:rule element:Vertex-containingStateMachine-spec ;
	uml-model:returns element:Vertex-containingStateMachine-result .

element:Vertex-containingStateMachine-spec rdf:type uml:Constraint ;
	uml-model:specification element:Vertex-containingStateMachine-spec-_specification .

element:Vertex-containingStateMachine-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if container <> null\nthen\n-- the container is a region\n   container.containingStateMachine()\nelse \n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\n      self.oclAsType(Pseudostate).stateMachine\n   else \n      if (self.oclIsKindOf(ConnectionPointReference)) then\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\n      else \n          null\n      endif\n   endif\nendif\n\n)"^^<http://www.omg.org/spec/OCL> .

element:Vertex-containingStateMachine-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:StateMachine .

element:Vertex-incoming.1 rdfs:comment "'Derivation for Vertex::/incoming."@en ;
	uml-model:returns element:Vertex-incoming.1-result .

element:Vertex-incoming.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Vertex-incoming.1-spec-_specification .

element:Vertex-incoming.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (Transition.allInstances()->select(target=self))"^^<http://www.omg.org/spec/OCL> .

element:Vertex-incoming.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Transition ;
	uml-model:upperValue element:Vertex-incoming.1-result-_upperValue .

element:Vertex-incoming.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Vertex-outgoing.1 rdfs:comment "'Derivation for Vertex::/outgoing"@en ;
	uml-model:returns element:Vertex-outgoing.1-result .

element:Vertex-outgoing.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Vertex-outgoing.1-spec-_specification .

element:Vertex-outgoing.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (Transition.allInstances()->select(source=self))"^^<http://www.omg.org/spec/OCL> .

element:Vertex-outgoing.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Transition ;
	uml-model:upperValue element:Vertex-outgoing.1-result-_upperValue .

element:Vertex-outgoing.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Vertex-isContainedInState rdfs:comment "'This utility operation returns true if the Vertex is contained in the State s (input argument)."@en ;
	uml-model:rule element:Vertex-isContainedInState-spec ;
	uml-model:returns element:Vertex-isContainedInState-result .

element:Vertex-isContainedInState-spec rdf:type uml:Constraint ;
	uml-model:specification element:Vertex-isContainedInState-spec-_specification .

element:Vertex-isContainedInState-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if not s.isComposite() or container->isEmpty() then\n   false\nelse\n   if container.state = s then \n      true\n   else\n      container.state.isContainedInState(s)\n   endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Vertex-isContainedInState-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Vertex-isContainedInState-s rdf:type uml:Parameter ;
	uml-model:name "s" ;
	uml-model:parameterType element:State .

element:Vertex-isContainedInRegion rdfs:comment "'This utility query returns true if the Vertex is contained in the Region r (input argument)."@en ;
	uml-model:rule element:Vertex-isContainedInRegion-spec ;
	uml-model:returns element:Vertex-isContainedInRegion-result .

element:Vertex-isContainedInRegion-spec rdf:type uml:Constraint ;
	uml-model:specification element:Vertex-isContainedInRegion-spec-_specification .

element:Vertex-isContainedInRegion-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if (container = r) then\n   true\nelse\n   if (r.state->isEmpty()) then\n      false\n   else\n      container.state.isContainedInRegion(r)\n   endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Vertex-isContainedInRegion-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Vertex-isContainedInRegion-r rdf:type uml:Parameter ;
	uml-model:name "r" ;
	uml-model:parameterType element:Region .

element:State-redefinitionContext.1 rdfs:comment "'The redefinition context of a Vertex is the nearest containing StateMachine."@en ;
	uml-model:returns element:State-redefinitionContext.1-result .

element:State-redefinitionContext.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:State-redefinitionContext.1-spec-_specification .

element:State-redefinitionContext.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = containingStateMachine()"^^<http://www.omg.org/spec/OCL> .

element:State-redefinitionContext.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier .

element:PseudostateKind xmi:type uml:Enumeration ;
	xmi:id "PseudostateKind" ;
	uml-model:name "PseudostateKind" ;
	rdfs:comment "'PseudostateKind is an Enumeration type that is used to differentiate various kinds of Pseudostates."@en .

element:TransitionKind xmi:type uml:Enumeration ;
	xmi:id "TransitionKind" ;
	uml-model:name "TransitionKind" ;
	rdfs:comment "'TransitionKind is an Enumeration type used to differentiate the various kinds of Transitions."@en .

element:A_incoming_target_vertex xmi:type uml:Association ;
	xmi:id "A_incoming_target_vertex" ;
	uml-model:name "A_incoming_target_vertex" .

element:A_outgoing_source_vertex xmi:type uml:Association ;
	xmi:id "A_outgoing_source_vertex" ;
	uml-model:name "A_outgoing_source_vertex" .

element:A_trigger_transition xmi:type uml:Association ;
	xmi:id "A_trigger_transition" ;
	uml-model:name "A_trigger_transition" .

element:A_trigger_transition-transition xmi:type uml:Property ;
	xmi:id "A_trigger_transition-transition" ;
	uml-model:name "transition" ;
	uml-model:type "Transition" ;
	uml-model:association uml-element:A_trigger_transition ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_guard_transition xmi:type uml:Association ;
	xmi:id "A_guard_transition" ;
	uml-model:name "A_guard_transition" .

element:A_guard_transition-transition xmi:type uml:Property ;
	xmi:id "A_guard_transition-transition" ;
	uml-model:name "transition" ;
	uml-model:type "Transition" ;
	uml-model:association uml-element:A_guard_transition ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_redefinedTransition_transition xmi:type uml:Association ;
	xmi:id "A_redefinedTransition_transition" ;
	uml-model:name "A_redefinedTransition_transition" .

element:A_redefinedTransition_transition-transition xmi:type uml:Property ;
	xmi:id "A_redefinedTransition_transition-transition" ;
	uml-model:name "transition" ;
	uml-model:type "Transition" ;
	uml-model:association uml-element:A_redefinedTransition_transition ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_redefinitionContext_transition xmi:type uml:Association ;
	xmi:id "A_redefinitionContext_transition" ;
	uml-model:name "A_redefinitionContext_transition" ;
	rdfs:subClassOf element:A_redefinitionContext_redefinableElement .

element:A_redefinitionContext_transition-transition xmi:type uml:Property ;
	xmi:id "A_redefinitionContext_transition-transition" ;
	uml-model:name "transition" ;
	uml-model:type "Transition" ;
	uml-model:association uml-element:A_redefinitionContext_transition ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement .

element:A_effect_transition xmi:type uml:Association ;
	xmi:id "A_effect_transition" ;
	uml-model:name "A_effect_transition" .

element:A_effect_transition-transition xmi:type uml:Property ;
	xmi:id "A_effect_transition-transition" ;
	uml-model:name "transition" ;
	uml-model:type "Transition" ;
	uml-model:association uml-element:A_effect_transition ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_submachineState_submachine xmi:type uml:Association ;
	xmi:id "A_submachineState_submachine" ;
	uml-model:name "A_submachineState_submachine" .

element:A_connectionPoint_stateMachine xmi:type uml:Association ;
	xmi:id "A_connectionPoint_stateMachine" ;
	uml-model:name "A_connectionPoint_stateMachine" .

element:A_region_stateMachine xmi:type uml:Association ;
	xmi:id "A_region_stateMachine" ;
	uml-model:name "A_region_stateMachine" .

element:A_extendedStateMachine_stateMachine xmi:type uml:Association ;
	xmi:id "A_extendedStateMachine_stateMachine" ;
	uml-model:name "A_extendedStateMachine_stateMachine" .

element:A_extendedStateMachine_stateMachine-stateMachine xmi:type uml:Property ;
	xmi:id "A_extendedStateMachine_stateMachine-stateMachine" ;
	uml-model:name "stateMachine" ;
	uml-model:type "StateMachine" ;
	uml-model:association uml-element:A_extendedStateMachine_stateMachine ;
	uml-model:subsettedProperty uml-element:A_redefinedBehavior_behavior-behavior .

element:A_redefinitionContext_state xmi:type uml:Association ;
	xmi:id "A_redefinitionContext_state" ;
	uml-model:name "A_redefinitionContext_vertex" ;
	rdfs:subClassOf element:A_redefinitionContext_redefinableElement .

element:A_redefinitionContext_state-state xmi:type uml:Property ;
	xmi:id "A_redefinitionContext_state-state" ;
	uml-model:name "vertex" ;
	uml-model:type "Vertex" ;
	uml-model:association uml-element:A_redefinitionContext_state ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement .

element:A_region_state xmi:type uml:Association ;
	xmi:id "A_region_state" ;
	uml-model:name "A_region_state" .

element:A_stateInvariant_owningState xmi:type uml:Association ;
	xmi:id "A_stateInvariant_owningState" ;
	uml-model:name "A_stateInvariant_owningState" .

element:A_stateInvariant_owningState-owningState xmi:type uml:Property ;
	xmi:id "A_stateInvariant_owningState-owningState" ;
	uml-model:name "owningState" ;
	uml-model:type "State" ;
	uml-model:association uml-element:A_stateInvariant_owningState ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_redefinedState_state xmi:type uml:Association ;
	xmi:id "A_redefinedState_state" ;
	uml-model:name "A_redefinedVertex_vertex" .

element:A_redefinedState_state-state xmi:type uml:Property ;
	xmi:id "A_redefinedState_state-state" ;
	uml-model:name "vertex" ;
	uml-model:type "Vertex" ;
	uml-model:association uml-element:A_redefinedState_state ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_deferrableTrigger_state xmi:type uml:Association ;
	xmi:id "A_deferrableTrigger_state" ;
	uml-model:name "A_deferrableTrigger_state" .

element:A_deferrableTrigger_state-state xmi:type uml:Property ;
	xmi:id "A_deferrableTrigger_state-state" ;
	uml-model:name "state" ;
	uml-model:type "State" ;
	uml-model:association uml-element:A_deferrableTrigger_state ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_connection_state xmi:type uml:Association ;
	xmi:id "A_connection_state" ;
	uml-model:name "A_connection_state" .

element:A_entry_state xmi:type uml:Association ;
	xmi:id "A_entry_state" ;
	uml-model:name "A_entry_state" .

element:A_entry_state-state xmi:type uml:Property ;
	xmi:id "A_entry_state-state" ;
	uml-model:name "state" ;
	uml-model:type "State" ;
	uml-model:association uml-element:A_entry_state ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_connectionPoint_state xmi:type uml:Association ;
	xmi:id "A_connectionPoint_state" ;
	uml-model:name "A_connectionPoint_state" .

element:A_doActivity_state xmi:type uml:Association ;
	xmi:id "A_doActivity_state" ;
	uml-model:name "A_doActivity_state" .

element:A_doActivity_state-state xmi:type uml:Property ;
	xmi:id "A_doActivity_state-state" ;
	uml-model:name "state" ;
	uml-model:type "State" ;
	uml-model:association uml-element:A_doActivity_state ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_exit_state xmi:type uml:Association ;
	xmi:id "A_exit_state" ;
	uml-model:name "A_exit_state" .

element:A_exit_state-state xmi:type uml:Property ;
	xmi:id "A_exit_state-state" ;
	uml-model:name "state" ;
	uml-model:type "State" ;
	uml-model:association uml-element:A_exit_state ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_extendedRegion_region xmi:type uml:Association ;
	xmi:id "A_extendedRegion_region" ;
	uml-model:name "A_extendedRegion_region" .

element:A_extendedRegion_region-region xmi:type uml:Property ;
	xmi:id "A_extendedRegion_region-region" ;
	uml-model:name "region" ;
	uml-model:type "Region" ;
	uml-model:association uml-element:A_extendedRegion_region ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_subvertex_container xmi:type uml:Association ;
	xmi:id "A_subvertex_container" ;
	uml-model:name "A_subvertex_container" .

element:A_redefinitionContext_region xmi:type uml:Association ;
	xmi:id "A_redefinitionContext_region" ;
	uml-model:name "A_redefinitionContext_region" ;
	rdfs:subClassOf element:A_redefinitionContext_redefinableElement .

element:A_redefinitionContext_region-region xmi:type uml:Property ;
	xmi:id "A_redefinitionContext_region-region" ;
	uml-model:name "region" ;
	uml-model:type "Region" ;
	uml-model:association uml-element:A_redefinitionContext_region ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement .

element:A_transition_container xmi:type uml:Association ;
	xmi:id "A_transition_container" ;
	uml-model:name "A_transition_container" .

element:A_referred_protocolTransition xmi:type uml:Association ;
	xmi:id "A_referred_protocolTransition" ;
	uml-model:name "A_referred_protocolTransition" .

element:A_referred_protocolTransition-protocolTransition xmi:type uml:Property ;
	xmi:id "A_referred_protocolTransition-protocolTransition" ;
	uml-model:name "protocolTransition" ;
	uml-model:type "ProtocolTransition" ;
	uml-model:association uml-element:A_referred_protocolTransition .

element:A_preCondition_protocolTransition xmi:type uml:Association ;
	xmi:id "A_preCondition_protocolTransition" ;
	uml-model:name "A_preCondition_protocolTransition" ;
	rdfs:subClassOf element:A_guard_transition .

element:A_preCondition_protocolTransition-protocolTransition xmi:type uml:Property ;
	xmi:id "A_preCondition_protocolTransition-protocolTransition" ;
	uml-model:name "protocolTransition" ;
	uml-model:type "ProtocolTransition" ;
	uml-model:association uml-element:A_preCondition_protocolTransition .

element:A_postCondition_owningTransition xmi:type uml:Association ;
	xmi:id "A_postCondition_owningTransition" ;
	uml-model:name "A_postCondition_owningTransition" .

element:A_postCondition_owningTransition-owningTransition xmi:type uml:Property ;
	xmi:id "A_postCondition_owningTransition-owningTransition" ;
	uml-model:name "owningTransition" ;
	uml-model:type "ProtocolTransition" ;
	uml-model:association uml-element:A_postCondition_owningTransition ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_conformance_specificMachine xmi:type uml:Association ;
	xmi:id "A_conformance_specificMachine" ;
	uml-model:name "A_conformance_specificMachine" .

element:A_generalMachine_protocolConformance xmi:type uml:Association ;
	xmi:id "A_generalMachine_protocolConformance" ;
	uml-model:name "A_generalMachine_protocolConformance" .

element:A_generalMachine_protocolConformance-protocolConformance xmi:type uml:Property ;
	xmi:id "A_generalMachine_protocolConformance-protocolConformance" ;
	uml-model:name "protocolConformance" ;
	uml-model:type "ProtocolConformance" ;
	uml-model:association uml-element:A_generalMachine_protocolConformance ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_entry_connectionPointReference xmi:type uml:Association ;
	xmi:id "A_entry_connectionPointReference" ;
	uml-model:name "A_entry_connectionPointReference" .

element:A_entry_connectionPointReference-connectionPointReference xmi:type uml:Property ;
	xmi:id "A_entry_connectionPointReference-connectionPointReference" ;
	uml-model:name "connectionPointReference" ;
	uml-model:type "ConnectionPointReference" ;
	uml-model:association uml-element:A_entry_connectionPointReference .

element:A_exit_connectionPointReference xmi:type uml:Association ;
	xmi:id "A_exit_connectionPointReference" ;
	uml-model:name "A_exit_connectionPointReference" .

element:A_exit_connectionPointReference-connectionPointReference xmi:type uml:Property ;
	xmi:id "A_exit_connectionPointReference-connectionPointReference" ;
	uml-model:name "connectionPointReference" ;
	uml-model:type "ConnectionPointReference" ;
	uml-model:association uml-element:A_exit_connectionPointReference .

element:SimpleClassifiers xmi:type uml:Package ;
	xmi:id "SimpleClassifiers" ;
	uml-model:name "SimpleClassifiers" .

uml-import:SimpleClassifiers-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "SimpleClassifiers-_packageImport.0" ;
	uml-model:packagedElement element:SimpleClassifiers ;
	uml-model:importedPackage element:Classification .

element:BehavioredClassifier xmi:type uml:Class ;
	xmi:id "BehavioredClassifier" ;
	uml-model:name "BehavioredClassifier" ;
	rdfs:comment "'A BehavioredClassifier may have InterfaceRealizations, and owns a set of Behaviors one of which may specify the behavior of the BehavioredClassifier itself."@en ;
	uml-model:rule element:BehavioredClassifier-class_behavior ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:BehavioredClassifier-classifierBehavior, property:BehavioredClassifier-interfaceRealization, property:BehavioredClassifier-ownedBehavior .

element:BehavioredClassifier-class_behavior rdfs:comment "'If a behavior is classifier behavior, it does not have a specification."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:BehavioredClassifier-class_behavior-_specification .

element:BehavioredClassifier-class_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "classifierBehavior->notEmpty() implies classifierBehavior.specification->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:BehavioredClassifier-classifierBehavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioredClassifier-classifierBehavior" ;
	rdfs:label "BehavioredClassifier-classifierBehavior" ;
	uml-model:name "classifierBehavior" ;
	uml-model:association uml-element:A_classifierBehavior_behavioredClassifier ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:BehavioredClassifier-ownedBehavior ;
	rdfs:comment "'A Behavior that specifies the behavior of the BehavioredClassifier itself."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:BehavioredClassifier-interfaceRealization rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioredClassifier-interfaceRealization" ;
	rdfs:label "BehavioredClassifier-interfaceRealization" ;
	uml-model:name "interfaceRealization" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_interfaceRealization_implementingClassifier ;
	rdfs:range element:InterfaceRealization ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:NamedElement-clientDependency ;
	rdfs:comment "'The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:BehavioredClassifier-ownedBehavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioredClassifier-ownedBehavior" ;
	rdfs:label "BehavioredClassifier-ownedBehavior" ;
	uml-model:name "ownedBehavior" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedBehavior_behavioredClassifier ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Behaviors owned by a BehavioredClassifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:DataType xmi:type uml:Class ;
	xmi:id "DataType" ;
	uml-model:name "DataType" ;
	rdfs:comment "'A DataType is a type whose instances are identified only by their value."@en ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:DataType-ownedAttribute, property:DataType-ownedOperation .

property:DataType-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DataType-ownedAttribute" ;
	rdfs:label "DataType-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_datatype ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The attributes owned by the DataType."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:DataType-ownedOperation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DataType-ownedOperation" ;
	rdfs:label "DataType-ownedOperation" ;
	uml-model:name "ownedOperation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedOperation_datatype ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Operations owned by the DataType."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Enumeration xmi:type uml:Class ;
	xmi:id "Enumeration" ;
	uml-model:name "Enumeration" ;
	rdfs:comment "'An Enumeration is a DataType whose values are enumerated in the model as EnumerationLiterals."@en ;
	uml-model:rule element:Enumeration-immutable ;
	rdfs:subClassOf element:DataType ;
	uml-model:ownedAttribute property:Enumeration-ownedLiteral .

element:Enumeration-immutable rdf:type uml:Constraint ;
	uml-model:specification element:Enumeration-immutable-_specification .

element:Enumeration-immutable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedAttribute->forAll(isReadOnly)"^^<http://www.omg.org/spec/OCL> .

property:Enumeration-ownedLiteral rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Enumeration-ownedLiteral" ;
	rdfs:label "Enumeration-ownedLiteral" ;
	uml-model:name "ownedLiteral" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedLiteral_enumeration ;
	rdfs:range element:EnumerationLiteral ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ordered set of literals owned by this Enumeration."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:EnumerationLiteral xmi:type uml:Class ;
	xmi:id "EnumerationLiteral" ;
	uml-model:name "EnumerationLiteral" ;
	rdfs:comment "'An EnumerationLiteral is a user-defined data value for an Enumeration."@en ;
	rdfs:subClassOf element:InstanceSpecification ;
	uml-model:ownedAttribute property:EnumerationLiteral-classifier, property:EnumerationLiteral-enumeration ;
	uml-model:operation element:EnumerationLiteral-classifier.1 .

property:EnumerationLiteral-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "EnumerationLiteral-classifier" ;
	rdfs:label "EnumerationLiteral-classifier" ;
	uml-model:name "classifier" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_classifier_enumerationLiteral ;
	rdfs:range element:Enumeration ;
	rdfs:comment "'The classifier of this EnumerationLiteral derived to be equal to its Enumeration."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:EnumerationLiteral-classifier.1-spec .

property:EnumerationLiteral-enumeration rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "EnumerationLiteral-enumeration" ;
	rdfs:label "EnumerationLiteral-enumeration" ;
	uml-model:name "enumeration" ;
	uml-model:association uml-element:A_ownedLiteral_enumeration ;
	rdfs:range element:Enumeration ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The Enumeration that this EnumerationLiteral is a member of."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:EnumerationLiteral-classifier.1 rdfs:comment "'Derivation of Enumeration::/classifier"@en ;
	uml-model:returns element:EnumerationLiteral-classifier.1-result .

element:EnumerationLiteral-classifier.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:EnumerationLiteral-classifier.1-spec-_specification .

element:EnumerationLiteral-classifier.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (enumeration)"^^<http://www.omg.org/spec/OCL> .

element:EnumerationLiteral-classifier.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Enumeration .

element:Interface xmi:type uml:Class ;
	xmi:id "Interface" ;
	uml-model:name "Interface" ;
	rdfs:comment "'Interfaces declare coherent services that are implemented by BehavioredClassifiers that implement the Interfaces via InterfaceRealizations."@en ;
	uml-model:rule element:Interface-visibility ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:Interface-nestedClassifier, property:Interface-ownedAttribute, property:Interface-ownedOperation, property:Interface-ownedReception, property:Interface-protocol, property:Interface-redefinedInterface .

element:Interface-visibility rdfs:comment "'The visibility of all Features owned by an Interface must be public."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Interface-visibility-_specification .

element:Interface-visibility-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "feature->forAll(visibility = VisibilityKind::public)"^^<http://www.omg.org/spec/OCL> .

property:Interface-nestedClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-nestedClassifier" ;
	rdfs:label "Interface-nestedClassifier" ;
	uml-model:name "nestedClassifier" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nestedClassifier_interface ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Namespace-ownedMember ;
	rdfs:comment "'References all the Classifiers that are defined (nested) within the Interface."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interface-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-ownedAttribute" ;
	rdfs:label "Interface-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_interface ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The attributes (i.e., the Properties) owned by the Interface."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interface-ownedOperation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-ownedOperation" ;
	rdfs:label "Interface-ownedOperation" ;
	uml-model:name "ownedOperation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedOperation_interface ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Operations owned by the Interface."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interface-ownedReception rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-ownedReception" ;
	rdfs:label "Interface-ownedReception" ;
	uml-model:name "ownedReception" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedReception_interface ;
	rdfs:range element:Reception ;
	uml-model:subsettedProperty uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'Receptions that objects providing this Interface are willing to accept."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interface-protocol rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-protocol" ;
	rdfs:label "Interface-protocol" ;
	uml-model:name "protocol" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_protocol_interface ;
	rdfs:range element:ProtocolStateMachine ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'References a ProtocolStateMachine specifying the legal sequences of the invocation of the BehavioralFeatures described in the Interface."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Interface-redefinedInterface rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interface-redefinedInterface" ;
	rdfs:label "Interface-redefinedInterface" ;
	uml-model:name "redefinedInterface" ;
	uml-model:association uml-element:A_redefinedInterface_interface ;
	rdfs:range element:Interface ;
	uml-model:subsettedProperty uml-element:Classifier-redefinedClassifier ;
	rdfs:comment "'References all the Interfaces redefined by this Interface."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:InterfaceRealization xmi:type uml:Class ;
	xmi:id "InterfaceRealization" ;
	uml-model:name "InterfaceRealization" ;
	rdfs:comment "'An InterfaceRealization is a specialized realization relationship between a BehavioredClassifier and an Interface. This relationship signifies that the realizing BehavioredClassifier conforms to the contract specified by the Interface."@en ;
	rdfs:subClassOf element:Realization ;
	uml-model:ownedAttribute property:InterfaceRealization-contract, property:InterfaceRealization-implementingClassifier .

property:InterfaceRealization-contract rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InterfaceRealization-contract" ;
	rdfs:label "InterfaceRealization-contract" ;
	uml-model:name "contract" ;
	uml-model:association uml-element:A_contract_interfaceRealization ;
	rdfs:range element:Interface ;
	uml-model:subsettedProperty uml-element:Dependency-supplier ;
	rdfs:comment "'References the Interface specifying the conformance contract."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:InterfaceRealization-implementingClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InterfaceRealization-implementingClassifier" ;
	rdfs:label "InterfaceRealization-implementingClassifier" ;
	uml-model:name "implementingClassifier" ;
	uml-model:association uml-element:A_interfaceRealization_implementingClassifier ;
	rdfs:range element:BehavioredClassifier ;
	uml-model:subsettedProperty uml-element:Dependency-client, uml-element:Element-owner ;
	rdfs:comment "'References the BehavioredClassifier that owns this InterfaceRealization, i.e., the BehavioredClassifier that realizes the Interface to which it refers."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:PrimitiveType xmi:type uml:Class ;
	xmi:id "PrimitiveType" ;
	uml-model:name "PrimitiveType" ;
	rdfs:comment "'A PrimitiveType defines a predefined DataType, without any substructure. A PrimitiveType may have an algebra and operations defined outside of UML, for example, mathematically."@en ;
	rdfs:subClassOf element:DataType .

element:Reception xmi:type uml:Class ;
	xmi:id "Reception" ;
	uml-model:name "Reception" ;
	rdfs:comment "'A Reception is a declaration stating that a Classifier is prepared to react to the receipt of a Signal."@en ;
	uml-model:rule element:Reception-same_name_as_signal, element:Reception-same_structure_as_signal ;
	rdfs:subClassOf element:BehavioralFeature ;
	uml-model:ownedAttribute property:Reception-signal .

element:Reception-same_name_as_signal rdfs:comment "'A Reception has the same name as its signal"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Reception-same_name_as_signal-_specification .

element:Reception-same_name_as_signal-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "name = signal.name"^^<http://www.omg.org/spec/OCL> .

element:Reception-same_structure_as_signal rdfs:comment "'A Reception's parameters match the ownedAttributes of its signal by name, type, and multiplicity"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Reception-same_structure_as_signal-_specification .

element:Reception-same_structure_as_signal-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "signal.ownedAttribute->size() = ownedParameter->size() and\nSequence{1..signal.ownedAttribute->size()}->forAll( i | \n    ownedParameter->at(i).direction = ParameterDirectionKind::_'in' and \n    ownedParameter->at(i).name = signal.ownedAttribute->at(i).name and\n    ownedParameter->at(i).type = signal.ownedAttribute->at(i).type and\n    ownedParameter->at(i).lowerBound() = signal.ownedAttribute->at(i).lowerBound() and\n    ownedParameter->at(i).upperBound() = signal.ownedAttribute->at(i).upperBound()\n)"^^<http://www.omg.org/spec/OCL> .

property:Reception-signal rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Reception-signal" ;
	rdfs:label "Reception-signal" ;
	uml-model:name "signal" ;
	uml-model:association uml-element:A_signal_reception ;
	rdfs:range element:Signal ;
	rdfs:comment "'The Signal that this Reception handles."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Signal xmi:type uml:Class ;
	xmi:id "Signal" ;
	uml-model:name "Signal" ;
	rdfs:comment "'A Signal is a specification of a kind of communication between objects in which a reaction is asynchronously triggered in the receiver without a reply."@en ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:Signal-ownedAttribute .

property:Signal-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Signal-ownedAttribute" ;
	rdfs:label "Signal-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_owningSignal ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The attributes owned by the Signal."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:A_ownedAttribute_owningSignal xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_owningSignal" ;
	uml-model:name "A_ownedAttribute_owningSignal" .

element:A_ownedAttribute_owningSignal-owningSignal xmi:type uml:Property ;
	xmi:id "A_ownedAttribute_owningSignal-owningSignal" ;
	uml-model:name "owningSignal" ;
	uml-model:type "Signal" ;
	uml-model:association uml-element:A_ownedAttribute_owningSignal ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:NamedElement-namespace .

element:A_signal_reception xmi:type uml:Association ;
	xmi:id "A_signal_reception" ;
	uml-model:name "A_signal_reception" .

element:A_signal_reception-reception xmi:type uml:Property ;
	xmi:id "A_signal_reception-reception" ;
	uml-model:name "reception" ;
	uml-model:type "Reception" ;
	uml-model:association uml-element:A_signal_reception .

element:A_contract_interfaceRealization xmi:type uml:Association ;
	xmi:id "A_contract_interfaceRealization" ;
	uml-model:name "A_contract_interfaceRealization" .

element:A_contract_interfaceRealization-interfaceRealization xmi:type uml:Property ;
	xmi:id "A_contract_interfaceRealization-interfaceRealization" ;
	uml-model:name "interfaceRealization" ;
	uml-model:type "InterfaceRealization" ;
	uml-model:association uml-element:A_contract_interfaceRealization ;
	uml-model:subsettedProperty uml-element:A_supplier_supplierDependency-supplierDependency .

element:A_protocol_interface xmi:type uml:Association ;
	xmi:id "A_protocol_interface" ;
	uml-model:name "A_protocol_interface" .

element:A_protocol_interface-interface xmi:type uml:Property ;
	xmi:id "A_protocol_interface-interface" ;
	uml-model:name "interface" ;
	uml-model:type "Interface" ;
	uml-model:association uml-element:A_protocol_interface ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'Specifies the namespace in which the protocol state machine is defined."@en .

element:A_ownedReception_interface xmi:type uml:Association ;
	xmi:id "A_ownedReception_interface" ;
	uml-model:name "A_ownedReception_interface" .

element:A_ownedReception_interface-interface xmi:type uml:Property ;
	xmi:id "A_ownedReception_interface-interface" ;
	uml-model:name "interface" ;
	uml-model:type "Interface" ;
	uml-model:association uml-element:A_ownedReception_interface ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace .

element:A_redefinedInterface_interface xmi:type uml:Association ;
	xmi:id "A_redefinedInterface_interface" ;
	uml-model:name "A_redefinedInterface_interface" .

element:A_redefinedInterface_interface-interface xmi:type uml:Property ;
	xmi:id "A_redefinedInterface_interface-interface" ;
	uml-model:name "interface" ;
	uml-model:type "Interface" ;
	uml-model:association uml-element:A_redefinedInterface_interface ;
	uml-model:subsettedProperty uml-element:A_redefinedClassifier_classifier-classifier .

element:A_nestedClassifier_interface xmi:type uml:Association ;
	xmi:id "A_nestedClassifier_interface" ;
	uml-model:name "A_nestedClassifier_interface" .

element:A_nestedClassifier_interface-interface xmi:type uml:Property ;
	xmi:id "A_nestedClassifier_interface-interface" ;
	uml-model:name "interface" ;
	uml-model:type "Interface" ;
	uml-model:association uml-element:A_nestedClassifier_interface ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext .

element:A_ownedOperation_interface xmi:type uml:Association ;
	xmi:id "A_ownedOperation_interface" ;
	uml-model:name "A_ownedOperation_interface" .

element:A_ownedAttribute_interface xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_interface" ;
	uml-model:name "A_ownedAttribute_interface" .

element:A_classifier_enumerationLiteral xmi:type uml:Association ;
	xmi:id "A_classifier_enumerationLiteral" ;
	uml-model:name "A_classifier_enumerationLiteral" ;
	rdfs:subClassOf element:A_classifier_instanceSpecification .

element:A_classifier_enumerationLiteral-enumerationLiteral xmi:type uml:Property ;
	xmi:id "A_classifier_enumerationLiteral-enumerationLiteral" ;
	uml-model:name "enumerationLiteral" ;
	uml-model:type "EnumerationLiteral" ;
	uml-model:association uml-element:A_classifier_enumerationLiteral .

element:A_ownedLiteral_enumeration xmi:type uml:Association ;
	xmi:id "A_ownedLiteral_enumeration" ;
	uml-model:name "A_ownedLiteral_enumeration" .

element:A_ownedAttribute_datatype xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_datatype" ;
	uml-model:name "A_ownedAttribute_datatype" .

element:A_ownedOperation_datatype xmi:type uml:Association ;
	xmi:id "A_ownedOperation_datatype" ;
	uml-model:name "A_ownedOperation_datatype" .

element:A_ownedBehavior_behavioredClassifier xmi:type uml:Association ;
	xmi:id "A_ownedBehavior_behavioredClassifier" ;
	uml-model:name "A_ownedBehavior_behavioredClassifier" .

element:A_ownedBehavior_behavioredClassifier-behavioredClassifier xmi:type uml:Property ;
	xmi:id "A_ownedBehavior_behavioredClassifier-behavioredClassifier" ;
	uml-model:name "behavioredClassifier" ;
	uml-model:type "BehavioredClassifier" ;
	uml-model:association uml-element:A_ownedBehavior_behavioredClassifier ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_classifierBehavior_behavioredClassifier xmi:type uml:Association ;
	xmi:id "A_classifierBehavior_behavioredClassifier" ;
	uml-model:name "A_classifierBehavior_behavioredClassifier" ;
	rdfs:subClassOf element:A_ownedBehavior_behavioredClassifier .

element:A_classifierBehavior_behavioredClassifier-behavioredClassifier xmi:type uml:Property ;
	xmi:id "A_classifierBehavior_behavioredClassifier-behavioredClassifier" ;
	uml-model:name "behavioredClassifier" ;
	uml-model:type "BehavioredClassifier" ;
	uml-model:association uml-element:A_classifierBehavior_behavioredClassifier .

element:A_interfaceRealization_implementingClassifier xmi:type uml:Association ;
	xmi:id "A_interfaceRealization_implementingClassifier" ;
	uml-model:name "A_interfaceRealization_implementingClassifier" .

element:Packages xmi:type uml:Package ;
	xmi:id "Packages" ;
	uml-model:name "Packages" .

uml-import:Packages-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Packages-_packageImport.0" ;
	uml-model:packagedElement element:Packages ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:Packages-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Packages-_packageImport.1" ;
	uml-model:packagedElement element:Packages ;
	uml-model:importedPackage element:Classification .

uml-import:Packages-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "Packages-_packageImport.2" ;
	uml-model:packagedElement element:Packages ;
	uml-model:importedPackage element:CommonStructure .

element:Extension xmi:type uml:Class ;
	xmi:id "Extension" ;
	uml-model:name "Extension" ;
	rdfs:comment "'An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes."@en ;
	uml-model:rule element:Extension-non_owned_end, element:Extension-is_binary ;
	rdfs:subClassOf element:Association ;
	uml-model:ownedAttribute property:Extension-isRequired, property:Extension-metaclass, property:Extension-ownedEnd ;
	uml-model:operation element:Extension-isRequired.1, element:Extension-metaclass.1, element:Extension-metaclassEnd .

element:Extension-non_owned_end rdfs:comment "'The non-owned end of an Extension is typed by a Class."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Extension-non_owned_end-_specification .

element:Extension-non_owned_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "metaclassEnd()->notEmpty() and metaclassEnd().type.oclIsKindOf(Class)"^^<http://www.omg.org/spec/OCL> .

element:Extension-is_binary rdfs:comment "'An Extension is binary, i.e., it has only two memberEnds."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Extension-is_binary-_specification .

element:Extension-is_binary-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "memberEnd->size() = 2"^^<http://www.omg.org/spec/OCL> .

property:Extension-isRequired rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Extension-isRequired" ;
	rdfs:label "Extension-isRequired" ;
	uml-model:name "isRequired" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the value of the lower property of the ExtensionEnd referenced by Extension::ownedEnd; a lower value of 1 means that isRequired is true, but otherwise it is false. Since the default value of ExtensionEnd::lower is 0, the default value of isRequired is false."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Extension-isRequired.1-spec .

property:Extension-metaclass rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extension-metaclass" ;
	rdfs:label "Extension-metaclass" ;
	uml-model:name "metaclass" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_extension_metaclass ;
	rdfs:range element:Class ;
	rdfs:comment "'References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Extension-metaclass.1-spec .

property:Extension-ownedEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Extension-ownedEnd" ;
	rdfs:label "Extension-ownedEnd" ;
	uml-model:name "ownedEnd" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedEnd_extension ;
	rdfs:range element:ExtensionEnd ;
	rdfs:comment "'References the end of the extension that is typed by a Stereotype."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Extension-isRequired.1 rdfs:comment "'The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1."@en ;
	uml-model:returns element:Extension-isRequired.1-result .

element:Extension-isRequired.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Extension-isRequired.1-spec-_specification .

element:Extension-isRequired.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedEnd.lowerBound() = 1)"^^<http://www.omg.org/spec/OCL> .

element:Extension-isRequired.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Extension-metaclass.1 rdfs:comment "'The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype)."@en ;
	uml-model:returns element:Extension-metaclass.1-result .

element:Extension-metaclass.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Extension-metaclass.1-spec-_specification .

element:Extension-metaclass.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (metaclassEnd().type.oclAsType(Class))"^^<http://www.omg.org/spec/OCL> .

element:Extension-metaclass.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Class .

element:Extension-metaclassEnd rdfs:comment "'The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype)."@en ;
	uml-model:rule element:Extension-metaclassEnd-spec ;
	uml-model:returns element:Extension-metaclassEnd-result .

element:Extension-metaclassEnd-spec rdf:type uml:Constraint ;
	uml-model:specification element:Extension-metaclassEnd-spec-_specification .

element:Extension-metaclassEnd-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (memberEnd->reject(p | ownedEnd->includes(p.oclAsType(ExtensionEnd)))->any(true))"^^<http://www.omg.org/spec/OCL> .

element:Extension-metaclassEnd-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property .

element:ExtensionEnd xmi:type uml:Class ;
	xmi:id "ExtensionEnd" ;
	uml-model:name "ExtensionEnd" ;
	rdfs:comment "'An extension end is used to tie an extension to a stereotype when extending a metaclass.&#xA;The default multiplicity of an extension end is 0..1."@en ;
	uml-model:rule element:ExtensionEnd-multiplicity, element:ExtensionEnd-aggregation ;
	rdfs:subClassOf element:Property ;
	uml-model:ownedAttribute property:ExtensionEnd-lower, property:ExtensionEnd-type ;
	uml-model:operation element:ExtensionEnd-lowerBound .

element:ExtensionEnd-multiplicity rdfs:comment "'The multiplicity of ExtensionEnd is 0..1 or 1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExtensionEnd-multiplicity-_specification .

element:ExtensionEnd-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(lowerBound() = 0 or lowerBound() = 1) and upperBound() = 1"^^<http://www.omg.org/spec/OCL> .

element:ExtensionEnd-aggregation rdfs:comment "'The aggregation of an ExtensionEnd is composite."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExtensionEnd-aggregation-_specification .

element:ExtensionEnd-aggregation-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.aggregation = AggregationKind::composite"^^<http://www.omg.org/spec/OCL> .

property:ExtensionEnd-lower rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ExtensionEnd-lower" ;
	rdfs:label "ExtensionEnd-lower" ;
	uml-model:name "lower" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Integer ;
	rdfs:comment "'This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ExtensionEnd-type rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExtensionEnd-type" ;
	rdfs:label "ExtensionEnd-type" ;
	uml-model:name "type" ;
	uml-model:association uml-element:A_type_extensionEnd ;
	rdfs:range element:Stereotype ;
	rdfs:comment "'References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ExtensionEnd-lowerBound uml-model:redefines element:MultiplicityElement-lowerBound ;
	rdfs:comment "'The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty."@en ;
	uml-model:rule element:ExtensionEnd-lowerBound-spec ;
	uml-model:returns element:ExtensionEnd-lowerBound-result .

element:ExtensionEnd-lowerBound-spec rdf:type uml:Constraint ;
	uml-model:specification element:ExtensionEnd-lowerBound-spec-_specification .

element:ExtensionEnd-lowerBound-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if lowerValue=null then 0 else lowerValue.integerValue() endif)"^^<http://www.omg.org/spec/OCL> .

element:ExtensionEnd-lowerBound-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:Image xmi:type uml:Class ;
	xmi:id "Image" ;
	uml-model:name "Image" ;
	rdfs:comment "'Physical definition of a graphical image."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:Image-content, property:Image-format, property:Image-location .

property:Image-content rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Image-content" ;
	rdfs:label "Image-content" ;
	uml-model:name "content" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing 'instructions' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Image-format rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Image-format" ;
	rdfs:label "Image-format" ;
	uml-model:name "format" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'This indicates the format of the content, which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP. In addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example &#34;SVG&#34; could instead be expressed as &#34;MIME: image/svg+xml&#34;."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Image-location rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Image-location" ;
	rdfs:label "Image-location" ;
	uml-model:name "location" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Model xmi:type uml:Class ;
	xmi:id "Model" ;
	uml-model:name "Model" ;
	rdfs:comment "'A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail."@en ;
	rdfs:subClassOf element:Package ;
	uml-model:ownedAttribute property:Model-viewpoint .

property:Model-viewpoint rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Model-viewpoint" ;
	rdfs:label "Model-viewpoint" ;
	uml-model:name "viewpoint" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The name of the viewpoint that is expressed by a model (this name may refer to a profile definition)."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Package xmi:type uml:Class ;
	xmi:id "Package" ;
	uml-model:name "Package" ;
	rdfs:comment "'A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.&#xA;Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.&#xA;A package is used to group elements, and provides a namespace for the grouped elements."@en ;
	uml-model:rule element:Package-elements_public_or_private ;
	rdfs:subClassOf element:PackageableElement, element:TemplateableElement, element:Namespace ;
	uml-model:ownedAttribute property:Package-URI, property:Package-nestedPackage, property:Package-nestingPackage, property:Package-ownedStereotype, property:Package-ownedType, property:Package-packageMerge, property:Package-packagedElement, property:Package-profileApplication ;
	uml-model:operation element:Package-allApplicableStereotypes, element:Package-containingProfile, element:Package-makesVisible, element:Package-mustBeOwned, element:Package-nestedPackage.1, element:Package-ownedStereotype.1, element:Package-ownedType.1, element:Package-visibleMembers .

element:Package-elements_public_or_private rdfs:comment "'If an element that is owned by a package has visibility, it is public or private."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Package-elements_public_or_private-_specification .

element:Package-elements_public_or_private-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "packagedElement->forAll(e | e.visibility<> null implies e.visibility = VisibilityKind::public or e.visibility = VisibilityKind::private)"^^<http://www.omg.org/spec/OCL> .

property:Package-URI rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-URI" ;
	rdfs:label "Package-URI" ;
	uml-model:name "URI" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Provides an identifier for the package that can be used for many purposes. A URI is the universally unique identification of the package following the IETF URI specification, RFC 2396 http://www.ietf.org/rfc/rfc2396.txt and it must comply with those syntax rules."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Package-nestedPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-nestedPackage" ;
	rdfs:label "Package-nestedPackage" ;
	uml-model:name "nestedPackage" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nestedPackage_nestingPackage ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:Package-packagedElement ;
	rdfs:comment "'References the packaged elements that are Packages."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Package-nestedPackage.1-spec .

property:Package-nestingPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-nestingPackage" ;
	rdfs:label "Package-nestingPackage" ;
	uml-model:name "nestingPackage" ;
	uml-model:association uml-element:A_nestedPackage_nestingPackage ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:A_packagedElement_owningPackage-owningPackage ;
	rdfs:comment "'References the Package that owns this Package."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Package-ownedStereotype rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-ownedStereotype" ;
	rdfs:label "Package-ownedStereotype" ;
	uml-model:name "ownedStereotype" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedStereotype_owningPackage ;
	rdfs:range element:Stereotype ;
	uml-model:subsettedProperty uml-element:Package-packagedElement ;
	rdfs:comment "'References the Stereotypes that are owned by the Package."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Package-ownedStereotype.1-spec .

property:Package-ownedType rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-ownedType" ;
	rdfs:label "Package-ownedType" ;
	uml-model:name "ownedType" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedType_package ;
	rdfs:range element:Type ;
	uml-model:subsettedProperty uml-element:Package-packagedElement ;
	rdfs:comment "'References the packaged elements that are Types."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Package-ownedType.1-spec .

property:Package-packageMerge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-packageMerge" ;
	rdfs:label "Package-packageMerge" ;
	uml-model:name "packageMerge" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_packageMerge_receivingPackage ;
	rdfs:range element:PackageMerge ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'References the PackageMerges that are owned by this Package."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Package-packagedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-packagedElement" ;
	rdfs:label "Package-packagedElement" ;
	uml-model:name "packagedElement" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_packagedElement_owningPackage ;
	rdfs:range element:PackageableElement ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Specifies the packageable elements that are owned by this Package."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Package-profileApplication rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Package-profileApplication" ;
	rdfs:label "Package-profileApplication" ;
	uml-model:name "profileApplication" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_profileApplication_applyingPackage ;
	rdfs:range element:ProfileApplication ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'References the ProfileApplications that indicate which profiles have been applied to the Package."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Package-allApplicableStereotypes rdfs:comment "'The query allApplicableStereotypes() returns all the directly or indirectly owned stereotypes, including stereotypes contained in sub-profiles."@en ;
	uml-model:rule element:Package-allApplicableStereotypes-spec ;
	uml-model:returns element:Package-allApplicableStereotypes-result .

element:Package-allApplicableStereotypes-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-allApplicableStereotypes-spec-_specification .

element:Package-allApplicableStereotypes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (let ownedPackages : Bag(Package) = ownedMember->select(oclIsKindOf(Package))->collect(oclAsType(Package)) in\n ownedStereotype->union(ownedPackages.allApplicableStereotypes())->flatten()->asSet()\n)"^^<http://www.omg.org/spec/OCL> .

element:Package-allApplicableStereotypes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Stereotype ;
	uml-model:upperValue element:Package-allApplicableStereotypes-result-_upperValue .

element:Package-allApplicableStereotypes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Package-containingProfile rdfs:comment "'The query containingProfile() returns the closest profile directly or indirectly containing this package (or this package itself, if it is a profile)."@en ;
	uml-model:rule element:Package-containingProfile-spec ;
	uml-model:returns element:Package-containingProfile-result .

element:Package-containingProfile-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-containingProfile-spec-_specification .

element:Package-containingProfile-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if self.oclIsKindOf(Profile) then \n   self.oclAsType(Profile)\nelse\n   self.namespace.oclAsType(Package).containingProfile()\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Package-containingProfile-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Profile .

element:Package-makesVisible rdfs:comment "'The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible."@en ;
	uml-model:rule element:Package-makesVisible-pre, element:Package-makesVisible-spec ;
	uml-model:returns element:Package-makesVisible-result .

element:Package-makesVisible-pre rdf:type uml:Constraint ;
	uml-model:specification element:Package-makesVisible-pre-_specification .

element:Package-makesVisible-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "member->includes(el)"^^<http://www.omg.org/spec/OCL> .

element:Package-makesVisible-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-makesVisible-spec-_specification .

element:Package-makesVisible-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedMember->includes(el) or\n(elementImport->select(ei|ei.importedElement = VisibilityKind::public)->collect(importedElement.oclAsType(NamedElement))->includes(el)) or\n(packageImport->select(visibility = VisibilityKind::public)->collect(importedPackage.member->includes(el))->notEmpty()))"^^<http://www.omg.org/spec/OCL> .

element:Package-makesVisible-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Package-makesVisible-el rdf:type uml:Parameter ;
	uml-model:name "el" ;
	uml-model:parameterType element:NamedElement .

element:Package-mustBeOwned uml-model:redefines element:Element-mustBeOwned ;
	rdfs:comment "'The query mustBeOwned() indicates whether elements of this type must have an owner."@en ;
	uml-model:rule element:Package-mustBeOwned-spec ;
	uml-model:returns element:Package-mustBeOwned-result .

element:Package-mustBeOwned-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-mustBeOwned-spec-_specification .

element:Package-mustBeOwned-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:Package-mustBeOwned-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Package-nestedPackage.1 rdfs:comment "'Derivation for Package::/nestedPackage "@en ;
	uml-model:returns element:Package-nestedPackage.1-result .

element:Package-nestedPackage.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-nestedPackage.1-spec-_specification .

element:Package-nestedPackage.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Package-nestedPackage.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Package ;
	uml-model:upperValue element:Package-nestedPackage.1-result-_upperValue .

element:Package-nestedPackage.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Package-ownedStereotype.1 rdfs:comment "'Derivation for Package::/ownedStereotype "@en ;
	uml-model:returns element:Package-ownedStereotype.1-result .

element:Package-ownedStereotype.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-ownedStereotype.1-spec-_specification .

element:Package-ownedStereotype.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Package-ownedStereotype.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Stereotype ;
	uml-model:upperValue element:Package-ownedStereotype.1-result-_upperValue .

element:Package-ownedStereotype.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Package-ownedType.1 rdfs:comment "'Derivation for Package::/ownedType"@en ;
	uml-model:returns element:Package-ownedType.1-result .

element:Package-ownedType.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-ownedType.1-spec-_specification .

element:Package-ownedType.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (packagedElement->select(oclIsKindOf(Type))->collect(oclAsType(Type))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Package-ownedType.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Type ;
	uml-model:upperValue element:Package-ownedType.1-result-_upperValue .

element:Package-ownedType.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Package-visibleMembers rdfs:comment "'The query visibleMembers() defines which members of a Package can be accessed outside it."@en ;
	uml-model:rule element:Package-visibleMembers-spec ;
	uml-model:returns element:Package-visibleMembers-result .

element:Package-visibleMembers-spec rdf:type uml:Constraint ;
	uml-model:specification element:Package-visibleMembers-spec-_specification .

element:Package-visibleMembers-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (member->select( m | m.oclIsKindOf(PackageableElement) and self.makesVisible(m))->collect(oclAsType(PackageableElement))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Package-visibleMembers-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Package-visibleMembers-result-_upperValue .

element:Package-visibleMembers-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:PackageMerge xmi:type uml:Class ;
	xmi:id "PackageMerge" ;
	uml-model:name "PackageMerge" ;
	rdfs:comment "'A package merge defines how the contents of one package are extended by the contents of another package."@en ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:PackageMerge-mergedPackage, property:PackageMerge-receivingPackage .

property:PackageMerge-mergedPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageMerge-mergedPackage" ;
	rdfs:label "PackageMerge-mergedPackage" ;
	uml-model:name "mergedPackage" ;
	uml-model:association uml-element:A_mergedPackage_packageMerge ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'References the Package that is to be merged with the receiving package of the PackageMerge."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:PackageMerge-receivingPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageMerge-receivingPackage" ;
	rdfs:label "PackageMerge-receivingPackage" ;
	uml-model:name "receivingPackage" ;
	uml-model:association uml-element:A_packageMerge_receivingPackage ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'References the Package that is being extended with the contents of the merged package of the PackageMerge."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Profile xmi:type uml:Class ;
	xmi:id "Profile" ;
	uml-model:name "Profile" ;
	rdfs:comment "'A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain."@en ;
	uml-model:rule element:Profile-metaclass_reference_not_specialized, element:Profile-references_same_metamodel ;
	rdfs:subClassOf element:Package ;
	uml-model:ownedAttribute property:Profile-metaclassReference, property:Profile-metamodelReference .

element:Profile-metaclass_reference_not_specialized rdfs:comment "'An element imported as a metaclassReference is not specialized or generalized in a Profile."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Profile-metaclass_reference_not_specialized-_specification .

element:Profile-metaclass_reference_not_specialized-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "metaclassReference.importedElement->\n   select(c | c.oclIsKindOf(Classifier) and\n      (c.oclAsType(Classifier).allParents()->collect(namespace)->includes(self)))->isEmpty()\nand \npackagedElement->\n    select(oclIsKindOf(Classifier))->collect(oclAsType(Classifier).allParents())->\n       intersection(metaclassReference.importedElement->select(oclIsKindOf(Classifier))->collect(oclAsType(Classifier)))->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Profile-references_same_metamodel rdfs:comment "'All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Profile-references_same_metamodel-_specification .

element:Profile-references_same_metamodel-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages()->\n  union(metaclassReference.importedElement.allOwningPackages() )->notEmpty()"^^<http://www.omg.org/spec/OCL> .

property:Profile-metaclassReference rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Profile-metaclassReference" ;
	rdfs:label "Profile-metaclassReference" ;
	uml-model:name "metaclassReference" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_metaclassReference_profile ;
	rdfs:range element:ElementImport ;
	uml-model:subsettedProperty uml-element:Namespace-elementImport ;
	rdfs:comment "'References a metaclass that may be extended."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Profile-metamodelReference rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Profile-metamodelReference" ;
	rdfs:label "Profile-metamodelReference" ;
	uml-model:name "metamodelReference" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_metamodelReference_profile ;
	rdfs:range element:PackageImport ;
	uml-model:subsettedProperty uml-element:Namespace-packageImport ;
	rdfs:comment "'References a package containing (directly or indirectly) metaclasses that may be extended."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ProfileApplication xmi:type uml:Class ;
	xmi:id "ProfileApplication" ;
	uml-model:name "ProfileApplication" ;
	rdfs:comment "'A profile application is used to show which profiles have been applied to a package."@en ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:ProfileApplication-appliedProfile, property:ProfileApplication-applyingPackage, property:ProfileApplication-isStrict .

property:ProfileApplication-appliedProfile rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProfileApplication-appliedProfile" ;
	rdfs:label "ProfileApplication-appliedProfile" ;
	uml-model:name "appliedProfile" ;
	uml-model:association uml-element:A_appliedProfile_profileApplication ;
	rdfs:range element:Profile ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'References the Profiles that are applied to a Package through this ProfileApplication."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ProfileApplication-applyingPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ProfileApplication-applyingPackage" ;
	rdfs:label "ProfileApplication-applyingPackage" ;
	uml-model:name "applyingPackage" ;
	uml-model:association uml-element:A_profileApplication_applyingPackage ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'The package that owns the profile application."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ProfileApplication-isStrict rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ProfileApplication-isStrict" ;
	rdfs:label "ProfileApplication-isStrict" ;
	uml-model:name "isStrict" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied."@en ;
	xmi:defaultValue element:ProfileApplication-isStrict-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ProfileApplication-isStrict-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ProfileApplication-isStrict-_defaultValue" .

element:Stereotype xmi:type uml:Class ;
	xmi:id "Stereotype" ;
	uml-model:name "Stereotype" ;
	rdfs:comment "'A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass."@en ;
	uml-model:rule element:Stereotype-binaryAssociationsOnly, element:Stereotype-generalize, element:Stereotype-name_not_clash, element:Stereotype-associationEndOwnership, element:Stereotype-base_property_upper_bound, element:Stereotype-base_property_multiplicity_single_extension, element:Stereotype-base_property_multiplicity_multiple_extension ;
	rdfs:subClassOf element:Class ;
	uml-model:ownedAttribute property:Stereotype-icon, property:Stereotype-profile ;
	uml-model:operation element:Stereotype-containingProfile, element:Stereotype-profile.1 .

element:Stereotype-binaryAssociationsOnly rdfs:comment "'Stereotypes may only participate in binary associations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-binaryAssociationsOnly-_specification .

element:Stereotype-binaryAssociationsOnly-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedAttribute.association->forAll(memberEnd->size()=2)"^^<http://www.omg.org/spec/OCL> .

element:Stereotype-generalize rdfs:comment "'A Stereotype may only generalize or specialize another Stereotype."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-generalize-_specification .

element:Stereotype-generalize-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "allParents()->forAll(oclIsKindOf(Stereotype)) \nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereotype)) implies c.oclIsKindOf(Stereotype))"^^<http://www.omg.org/spec/OCL> .

element:Stereotype-name_not_clash rdfs:comment "'Stereotype names should not clash with keyword names for the extended model element."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-name_not_clash-_specification .

element:Stereotype-name_not_clash-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Stereotype-associationEndOwnership rdfs:comment "'Where a stereotype’s property is an association end for an association other than a kind of extension, and the other end is not a stereotype, the other end must be owned by the association itself."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-associationEndOwnership-_specification .

element:Stereotype-associationEndOwnership-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedAttribute\n->select(association->notEmpty() and not association.oclIsKindOf(Extension) and not type.oclIsKindOf(Stereotype))\n->forAll(opposite.owner = association)"^^<http://www.omg.org/spec/OCL> .

element:Stereotype-base_property_upper_bound rdfs:comment "'The upper bound of base-properties is exactly 1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-base_property_upper_bound-_specification .

element:Stereotype-base_property_upper_bound-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Stereotype-base_property_multiplicity_single_extension rdfs:comment "'If a Stereotype extends only one metaclass, the multiplicity of the corresponding base-property shall be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-base_property_multiplicity_single_extension-_specification .

element:Stereotype-base_property_multiplicity_single_extension-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Stereotype-base_property_multiplicity_multiple_extension rdfs:comment "'If a Stereotype extends more than one metaclass, the multiplicity of the corresponding base-properties shall be [0..1]. At any point in time, only one of these base-properties can contain a metaclass instance during runtime."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-base_property_multiplicity_multiple_extension-_specification .

element:Stereotype-base_property_multiplicity_multiple_extension-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

property:Stereotype-icon rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Stereotype-icon" ;
	rdfs:label "Stereotype-icon" ;
	uml-model:name "icon" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_icon_stereotype ;
	rdfs:range element:Image ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Stereotype-profile rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Stereotype-profile" ;
	rdfs:label "Stereotype-profile" ;
	uml-model:name "profile" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_profile_stereotype ;
	rdfs:range element:Profile ;
	rdfs:comment "'The profile that directly or indirectly contains this stereotype."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Stereotype-profile.1-spec .

element:Stereotype-containingProfile rdfs:comment "'The query containingProfile returns the closest profile directly or indirectly containing this stereotype."@en ;
	uml-model:rule element:Stereotype-containingProfile-spec ;
	uml-model:returns element:Stereotype-containingProfile-result .

element:Stereotype-containingProfile-spec rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-containingProfile-spec-_specification .

element:Stereotype-containingProfile-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.namespace.oclAsType(Package).containingProfile())"^^<http://www.omg.org/spec/OCL> .

element:Stereotype-containingProfile-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Profile .

element:Stereotype-profile.1 rdfs:comment "'A stereotype must be contained, directly or indirectly, in a profile."@en ;
	uml-model:returns element:Stereotype-profile.1-result .

element:Stereotype-profile.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Stereotype-profile.1-spec-_specification .

element:Stereotype-profile.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.containingProfile())"^^<http://www.omg.org/spec/OCL> .

element:Stereotype-profile.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Profile .

element:A_profile_stereotype xmi:type uml:Association ;
	xmi:id "A_profile_stereotype" ;
	uml-model:name "A_profile_stereotype" .

element:A_profile_stereotype-stereotype xmi:type uml:Property ;
	xmi:id "A_profile_stereotype-stereotype" ;
	uml-model:name "stereotype" ;
	uml-model:type "Stereotype" ;
	uml-model:association uml-element:A_profile_stereotype .

element:A_icon_stereotype xmi:type uml:Association ;
	xmi:id "A_icon_stereotype" ;
	uml-model:name "A_icon_stereotype" .

element:A_icon_stereotype-stereotype xmi:type uml:Property ;
	xmi:id "A_icon_stereotype-stereotype" ;
	uml-model:name "stereotype" ;
	uml-model:type "Stereotype" ;
	uml-model:association uml-element:A_icon_stereotype ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_appliedProfile_profileApplication xmi:type uml:Association ;
	xmi:id "A_appliedProfile_profileApplication" ;
	uml-model:name "A_appliedProfile_profileApplication" .

element:A_appliedProfile_profileApplication-profileApplication xmi:type uml:Property ;
	xmi:id "A_appliedProfile_profileApplication-profileApplication" ;
	uml-model:name "profileApplication" ;
	uml-model:type "ProfileApplication" ;
	uml-model:association uml-element:A_appliedProfile_profileApplication ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_metaclassReference_profile xmi:type uml:Association ;
	xmi:id "A_metaclassReference_profile" ;
	uml-model:name "A_metaclassReference_profile" .

element:A_metaclassReference_profile-profile xmi:type uml:Property ;
	xmi:id "A_metaclassReference_profile-profile" ;
	uml-model:name "profile" ;
	uml-model:type "Profile" ;
	uml-model:association uml-element:A_metaclassReference_profile ;
	uml-model:subsettedProperty uml-element:ElementImport-importingNamespace .

element:A_metamodelReference_profile xmi:type uml:Association ;
	xmi:id "A_metamodelReference_profile" ;
	uml-model:name "A_metamodelReference_profile" .

element:A_metamodelReference_profile-profile xmi:type uml:Property ;
	xmi:id "A_metamodelReference_profile-profile" ;
	uml-model:name "profile" ;
	uml-model:type "Profile" ;
	uml-model:association uml-element:A_metamodelReference_profile ;
	uml-model:subsettedProperty uml-element:PackageImport-importingNamespace .

element:A_mergedPackage_packageMerge xmi:type uml:Association ;
	xmi:id "A_mergedPackage_packageMerge" ;
	uml-model:name "A_mergedPackage_packageMerge" .

element:A_mergedPackage_packageMerge-packageMerge xmi:type uml:Property ;
	xmi:id "A_mergedPackage_packageMerge-packageMerge" ;
	uml-model:name "packageMerge" ;
	uml-model:type "PackageMerge" ;
	uml-model:association uml-element:A_mergedPackage_packageMerge ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_packagedElement_owningPackage xmi:type uml:Association ;
	xmi:id "A_packagedElement_owningPackage" ;
	uml-model:name "A_packagedElement_owningPackage" .

element:A_packagedElement_owningPackage-owningPackage xmi:type uml:Property ;
	xmi:id "A_packagedElement_owningPackage-owningPackage" ;
	uml-model:name "owningPackage" ;
	uml-model:type "Package" ;
	uml-model:association uml-element:A_packagedElement_owningPackage ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_packageMerge_receivingPackage xmi:type uml:Association ;
	xmi:id "A_packageMerge_receivingPackage" ;
	uml-model:name "A_packageMerge_receivingPackage" .

element:A_nestedPackage_nestingPackage xmi:type uml:Association ;
	xmi:id "A_nestedPackage_nestingPackage" ;
	uml-model:name "A_nestedPackage_nestingPackage" .

element:A_profileApplication_applyingPackage xmi:type uml:Association ;
	xmi:id "A_profileApplication_applyingPackage" ;
	uml-model:name "A_profileApplication_applyingPackage" .

element:A_ownedType_package xmi:type uml:Association ;
	xmi:id "A_ownedType_package" ;
	uml-model:name "A_ownedType_package" .

element:A_ownedStereotype_owningPackage xmi:type uml:Association ;
	xmi:id "A_ownedStereotype_owningPackage" ;
	uml-model:name "A_ownedStereotype_owningPackage" ;
	rdfs:subClassOf element:A_packagedElement_owningPackage .

element:A_ownedStereotype_owningPackage-owningPackage xmi:type uml:Property ;
	xmi:id "A_ownedStereotype_owningPackage-owningPackage" ;
	uml-model:name "owningPackage" ;
	uml-model:type "Package" ;
	uml-model:association uml-element:A_ownedStereotype_owningPackage .

element:A_type_extensionEnd xmi:type uml:Association ;
	xmi:id "A_type_extensionEnd" ;
	uml-model:name "A_type_extensionEnd" .

element:A_type_extensionEnd-extensionEnd xmi:type uml:Property ;
	xmi:id "A_type_extensionEnd-extensionEnd" ;
	uml-model:name "extensionEnd" ;
	uml-model:type "ExtensionEnd" ;
	uml-model:association uml-element:A_type_extensionEnd ;
	uml-model:subsettedProperty uml-element:A_type_typedElement-typedElement .

element:A_ownedEnd_extension xmi:type uml:Association ;
	xmi:id "A_ownedEnd_extension" ;
	uml-model:name "A_ownedEnd_extension" .

element:A_ownedEnd_extension-extension xmi:type uml:Property ;
	xmi:id "A_ownedEnd_extension-extension" ;
	uml-model:name "extension" ;
	uml-model:type "Extension" ;
	uml-model:association uml-element:A_ownedEnd_extension ;
	uml-model:subsettedProperty uml-element:Property-owningAssociation .

element:Interactions xmi:type uml:Package ;
	xmi:id "Interactions" ;
	uml-model:name "Interactions" .

uml-import:Interactions-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Interactions-_packageImport.0" ;
	uml-model:packagedElement element:Interactions ;
	uml-model:importedPackage element:CommonStructure .

uml-import:Interactions-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Interactions-_packageImport.1" ;
	uml-model:packagedElement element:Interactions ;
	uml-model:importedPackage element:Classification .

uml-import:Interactions-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "Interactions-_packageImport.2" ;
	uml-model:packagedElement element:Interactions ;
	uml-model:importedPackage element:SimpleClassifiers .

uml-import:Interactions-_packageImport.3 xmi:type uml:PackageImport ;
	xmi:id "Interactions-_packageImport.3" ;
	uml-model:packagedElement element:Interactions ;
	uml-model:importedPackage element:Values .

element:ActionExecutionSpecification xmi:type uml:Class ;
	xmi:id "ActionExecutionSpecification" ;
	uml-model:name "ActionExecutionSpecification" ;
	rdfs:comment "'An ActionExecutionSpecification is a kind of ExecutionSpecification representing the execution of an Action."@en ;
	uml-model:rule element:ActionExecutionSpecification-action_referenced ;
	rdfs:subClassOf element:ExecutionSpecification ;
	uml-model:ownedAttribute property:ActionExecutionSpecification-action .

element:ActionExecutionSpecification-action_referenced rdfs:comment "'The Action referenced by the ActionExecutionSpecification must be owned by the Interaction owning that ActionExecutionSpecification."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActionExecutionSpecification-action_referenced-_specification .

element:ActionExecutionSpecification-action_referenced-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(enclosingInteraction->notEmpty() or enclosingOperand.combinedFragment->notEmpty()) and\nlet parentInteraction : Set(Interaction) = enclosingInteraction.oclAsType(Interaction)->asSet()->union(\nenclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()) in\n(parentInteraction->size() = 1) and self.action.interaction->asSet() = parentInteraction"^^<http://www.omg.org/spec/OCL> .

property:ActionExecutionSpecification-action rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActionExecutionSpecification-action" ;
	rdfs:label "ActionExecutionSpecification-action" ;
	uml-model:name "action" ;
	uml-model:association uml-element:A_action_actionExecutionSpecification ;
	rdfs:range element:Action ;
	rdfs:comment "'Action whose execution is occurring."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:BehaviorExecutionSpecification xmi:type uml:Class ;
	xmi:id "BehaviorExecutionSpecification" ;
	uml-model:name "BehaviorExecutionSpecification" ;
	rdfs:comment "'A BehaviorExecutionSpecification is a kind of ExecutionSpecification representing the execution of a Behavior."@en ;
	rdfs:subClassOf element:ExecutionSpecification ;
	uml-model:ownedAttribute property:BehaviorExecutionSpecification-behavior .

property:BehaviorExecutionSpecification-behavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehaviorExecutionSpecification-behavior" ;
	rdfs:label "BehaviorExecutionSpecification-behavior" ;
	uml-model:name "behavior" ;
	uml-model:association uml-element:A_behavior_behaviorExecutionSpecification ;
	rdfs:range element:Behavior ;
	rdfs:comment "'Behavior whose execution is occurring."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:CombinedFragment xmi:type uml:Class ;
	xmi:id "CombinedFragment" ;
	uml-model:name "CombinedFragment" ;
	rdfs:comment "'A CombinedFragment defines an expression of InteractionFragments. A CombinedFragment is defined by an interaction operator and corresponding InteractionOperands. Through the use of CombinedFragments the user will be able to describe a number of traces in a compact and concise manner."@en ;
	uml-model:rule element:CombinedFragment-break, element:CombinedFragment-consider_and_ignore, element:CombinedFragment-opt_loop_break_neg ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:CombinedFragment-cfragmentGate, property:CombinedFragment-interactionOperator, property:CombinedFragment-operand .

element:CombinedFragment-break rdfs:comment "'If the interactionOperator is break, the corresponding InteractionOperand must cover all Lifelines covered by the enclosing InteractionFragment."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CombinedFragment-break-_specification .

element:CombinedFragment-break-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "interactionOperator=InteractionOperatorKind::break  implies   \nenclosingInteraction.oclAsType(InteractionFragment)->asSet()->union(\n   enclosingOperand.oclAsType(InteractionFragment)->asSet()).covered->asSet() = self.covered->asSet()"^^<http://www.omg.org/spec/OCL> .

element:CombinedFragment-consider_and_ignore rdfs:comment "'The interaction operators 'consider' and 'ignore' can only be used for the ConsiderIgnoreFragment subtype of CombinedFragment"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CombinedFragment-consider_and_ignore-_specification .

element:CombinedFragment-consider_and_ignore-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "((interactionOperator = InteractionOperatorKind::consider) or (interactionOperator =  InteractionOperatorKind::ignore)) implies oclIsKindOf(ConsiderIgnoreFragment)"^^<http://www.omg.org/spec/OCL> .

element:CombinedFragment-opt_loop_break_neg rdfs:comment "'If the interactionOperator is opt, loop, break, assert or neg, there must be exactly one operand."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CombinedFragment-opt_loop_break_neg-_specification .

element:CombinedFragment-opt_loop_break_neg-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(interactionOperator =  InteractionOperatorKind::opt or interactionOperator = InteractionOperatorKind::loop or\ninteractionOperator = InteractionOperatorKind::break or interactionOperator = InteractionOperatorKind::assert or\ninteractionOperator = InteractionOperatorKind::neg)\nimplies operand->size()=1"^^<http://www.omg.org/spec/OCL> .

property:CombinedFragment-cfragmentGate rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CombinedFragment-cfragmentGate" ;
	rdfs:label "CombinedFragment-cfragmentGate" ;
	uml-model:name "cfragmentGate" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_cfragmentGate_combinedFragment ;
	rdfs:range element:Gate ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies the gates that form the interface between this CombinedFragment and its surroundings"@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:CombinedFragment-interactionOperator rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CombinedFragment-interactionOperator" ;
	rdfs:label "CombinedFragment-interactionOperator" ;
	uml-model:name "interactionOperator" ;
	rdfs:range element:InteractionOperatorKind ;
	rdfs:comment "'Specifies the operation which defines the semantics of this combination of InteractionFragments."@en ;
	xmi:defaultValue element:CombinedFragment-interactionOperator-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CombinedFragment-interactionOperator-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "CombinedFragment-interactionOperator-_defaultValue" .

property:CombinedFragment-operand rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CombinedFragment-operand" ;
	rdfs:label "CombinedFragment-operand" ;
	uml-model:name "operand" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_operand_combinedFragment ;
	rdfs:range element:InteractionOperand ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The set of operands of the combined fragment."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:ConsiderIgnoreFragment xmi:type uml:Class ;
	xmi:id "ConsiderIgnoreFragment" ;
	uml-model:name "ConsiderIgnoreFragment" ;
	rdfs:comment "'A ConsiderIgnoreFragment is a kind of CombinedFragment that is used for the consider and ignore cases, which require lists of pertinent Messages to be specified."@en ;
	uml-model:rule element:ConsiderIgnoreFragment-consider_or_ignore, element:ConsiderIgnoreFragment-type ;
	rdfs:subClassOf element:CombinedFragment ;
	uml-model:ownedAttribute property:ConsiderIgnoreFragment-message .

element:ConsiderIgnoreFragment-consider_or_ignore rdfs:comment "'The interaction operator of a ConsiderIgnoreFragment must be either 'consider' or 'ignore'."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConsiderIgnoreFragment-consider_or_ignore-_specification .

element:ConsiderIgnoreFragment-consider_or_ignore-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(interactionOperator =  InteractionOperatorKind::consider) or (interactionOperator =  InteractionOperatorKind::ignore)"^^<http://www.omg.org/spec/OCL> .

element:ConsiderIgnoreFragment-type rdfs:comment "'The NamedElements must be of a type of element that can be a signature for a message (i.e.., an Operation, or a Signal)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConsiderIgnoreFragment-type-_specification .

element:ConsiderIgnoreFragment-type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "message->forAll(m | m.oclIsKindOf(Operation) or m.oclIsKindOf(Signal))"^^<http://www.omg.org/spec/OCL> .

property:ConsiderIgnoreFragment-message rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConsiderIgnoreFragment-message" ;
	rdfs:label "ConsiderIgnoreFragment-message" ;
	uml-model:name "message" ;
	uml-model:association uml-element:A_message_considerIgnoreFragment ;
	rdfs:range element:NamedElement ;
	rdfs:comment "'The set of messages that apply to this fragment."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Continuation xmi:type uml:Class ;
	xmi:id "Continuation" ;
	uml-model:name "Continuation" ;
	rdfs:comment "'A Continuation is a syntactic way to define continuations of different branches of an alternative CombinedFragment. Continuations are intuitively similar to labels representing intermediate points in a flow of control."@en ;
	uml-model:rule element:Continuation-first_or_last_interaction_fragment, element:Continuation-same_name, element:Continuation-global ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:Continuation-setting .

element:Continuation-first_or_last_interaction_fragment rdfs:comment "'Continuations always occur as the very first InteractionFragment or the very last InteractionFragment of the enclosing InteractionOperand."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Continuation-first_or_last_interaction_fragment-_specification .

element:Continuation-first_or_last_interaction_fragment-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "enclosingOperand->notEmpty() and \n let peerFragments : OrderedSet(InteractionFragment) =  enclosingOperand.fragment in \n   ( peerFragments->notEmpty() and \n   ((peerFragments->first() = self) or  (peerFragments->last() = self)))"^^<http://www.omg.org/spec/OCL> .

element:Continuation-same_name rdfs:comment "'Across all Interaction instances having the same context value, every Lifeline instance covered by a Continuation (self) must be common with one covered Lifeline instance of all other Continuation instances with the same name as self, and every Lifeline instance covered by a Continuation instance with the same name as self must be common with one covered Lifeline instance of self. Lifeline instances are common if they have the same selector and represents associationEnd values."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Continuation-same_name-_specification .

element:Continuation-same_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "enclosingOperand.combinedFragment->notEmpty() and\nlet parentInteraction : Set(Interaction) = \nenclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()\nin \n(parentInteraction->size() = 1) \nand let peerInteractions : Set(Interaction) =\n (parentInteraction->union(parentInteraction->collect(_'context')->collect(behavior)->\n select(oclIsKindOf(Interaction)).oclAsType(Interaction)->asSet())->asSet()) in\n (peerInteractions->notEmpty()) and \n  let combinedFragments1 : Set(CombinedFragment) = peerInteractions.fragment->\n select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet() in\n   combinedFragments1->notEmpty() and  combinedFragments1->closure(operand.fragment->\n   select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment))->asSet().operand.fragment->\n   select(oclIsKindOf(Continuation)).oclAsType(Continuation)->asSet()->\n   forAll(c : Continuation |  (c.name = self.name) implies \n  (c.covered->asSet()->forAll(cl : Lifeline | --  cl must be common to one lifeline covered by self\n  self.covered->asSet()->\n  select(represents = cl.represents and selector = cl.selector)->asSet()->size()=1))\n   and\n (self.covered->asSet()->forAll(cl : Lifeline | --  cl must be common to one lifeline covered by c\n c.covered->asSet()->\n  select(represents = cl.represents and selector = cl.selector)->asSet()->size()=1))\n  )"^^<http://www.omg.org/spec/OCL> .

element:Continuation-global rdfs:comment "'Continuations are always global in the enclosing InteractionFragment e.g., it always covers all Lifelines covered by the enclosing InteractionOperator."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Continuation-global-_specification .

element:Continuation-global-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "enclosingOperand->notEmpty() and\n  let operandLifelines : Set(Lifeline) =  enclosingOperand.covered in \n    (operandLifelines->notEmpty() and \n    operandLifelines->forAll(ol :Lifeline |self.covered->includes(ol)))"^^<http://www.omg.org/spec/OCL> .

property:Continuation-setting rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Continuation-setting" ;
	rdfs:label "Continuation-setting" ;
	uml-model:name "setting" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning."@en ;
	xmi:defaultValue element:Continuation-setting-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Continuation-setting-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Continuation-setting-_defaultValue" ;
	uml-model:value "true" .

element:DestructionOccurrenceSpecification xmi:type uml:Class ;
	xmi:id "DestructionOccurrenceSpecification" ;
	uml-model:name "DestructionOccurrenceSpecification" ;
	rdfs:comment "'A DestructionOccurenceSpecification models the destruction of an object."@en ;
	uml-model:rule element:DestructionOccurrenceSpecification-no_occurrence_specifications_below ;
	rdfs:subClassOf element:MessageOccurrenceSpecification .

element:DestructionOccurrenceSpecification-no_occurrence_specifications_below rdfs:comment "'No other OccurrenceSpecifications on a given Lifeline in an InteractionOperand may appear below a DestructionOccurrenceSpecification."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DestructionOccurrenceSpecification-no_occurrence_specifications_below-_specification .

element:DestructionOccurrenceSpecification-no_occurrence_specifications_below-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let o : InteractionOperand = enclosingOperand in o->notEmpty() and \nlet peerEvents : OrderedSet(OccurrenceSpecification) = covered.events->select(enclosingOperand = o)\nin peerEvents->last() = self"^^<http://www.omg.org/spec/OCL> .

element:ExecutionOccurrenceSpecification xmi:type uml:Class ;
	xmi:id "ExecutionOccurrenceSpecification" ;
	uml-model:name "ExecutionOccurrenceSpecification" ;
	rdfs:comment "'An ExecutionOccurrenceSpecification represents moments in time at which Actions or Behaviors start or finish."@en ;
	rdfs:subClassOf element:OccurrenceSpecification ;
	uml-model:ownedAttribute property:ExecutionOccurrenceSpecification-execution .

property:ExecutionOccurrenceSpecification-execution rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExecutionOccurrenceSpecification-execution" ;
	rdfs:label "ExecutionOccurrenceSpecification-execution" ;
	uml-model:name "execution" ;
	uml-model:association uml-element:A_execution_executionOccurrenceSpecification ;
	rdfs:range element:ExecutionSpecification ;
	rdfs:comment "'References the execution specification describing the execution that is started or finished at this execution event."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ExecutionSpecification xmi:type uml:Class ;
	xmi:id "ExecutionSpecification" ;
	uml-model:name "ExecutionSpecification" ;
	rdfs:comment "'An ExecutionSpecification is a specification of the execution of a unit of Behavior or Action within the Lifeline. The duration of an ExecutionSpecification is represented by two OccurrenceSpecifications, the start OccurrenceSpecification and the finish OccurrenceSpecification."@en ;
	uml-model:rule element:ExecutionSpecification-same_lifeline ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:ExecutionSpecification-finish, property:ExecutionSpecification-start .

element:ExecutionSpecification-same_lifeline rdfs:comment "'The startEvent and the finishEvent must be on the same Lifeline."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExecutionSpecification-same_lifeline-_specification .

element:ExecutionSpecification-same_lifeline-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "start.covered = finish.covered"^^<http://www.omg.org/spec/OCL> .

property:ExecutionSpecification-finish rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExecutionSpecification-finish" ;
	rdfs:label "ExecutionSpecification-finish" ;
	uml-model:name "finish" ;
	uml-model:association uml-element:A_finish_executionSpecification ;
	rdfs:range element:OccurrenceSpecification ;
	rdfs:comment "'References the OccurrenceSpecification that designates the finish of the Action or Behavior."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ExecutionSpecification-start rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExecutionSpecification-start" ;
	rdfs:label "ExecutionSpecification-start" ;
	uml-model:name "start" ;
	uml-model:association uml-element:A_start_executionSpecification ;
	rdfs:range element:OccurrenceSpecification ;
	rdfs:comment "'References the OccurrenceSpecification that designates the start of the Action or Behavior."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Gate xmi:type uml:Class ;
	xmi:id "Gate" ;
	uml-model:name "Gate" ;
	rdfs:comment "'A Gate is a MessageEnd which serves as a connection point for relating a Message which has a MessageEnd (sendEvent / receiveEvent) outside an InteractionFragment with another Message which has a MessageEnd (receiveEvent / sendEvent)  inside that InteractionFragment."@en ;
	uml-model:rule element:Gate-actual_gate_matched, element:Gate-inside_cf_matched, element:Gate-outside_cf_matched, element:Gate-formal_gate_distinguishable, element:Gate-actual_gate_distinguishable, element:Gate-outside_cf_gate_distinguishable, element:Gate-inside_cf_gate_distinguishable ;
	rdfs:subClassOf element:MessageEnd ;
	uml-model:operation element:Gate-isOutsideCF, element:Gate-isInsideCF, element:Gate-isActual, element:Gate-isFormal, element:Gate-getName, element:Gate-matches, element:Gate-isDistinguishableFrom, element:Gate-getOperand .

element:Gate-actual_gate_matched rdfs:comment "'If this Gate is an actualGate, it must have exactly one matching formalGate within the referred Interaction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-actual_gate_matched-_specification .

element:Gate-actual_gate_matched-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "interactionUse->notEmpty() implies interactionUse.refersTo.formalGate->select(matches(self))->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-inside_cf_matched rdfs:comment "'If this Gate is inside a CombinedFragment, it must have exactly one matching Gate which is outside of that CombinedFragment."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-inside_cf_matched-_specification .

element:Gate-inside_cf_matched-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isInsideCF() implies combinedFragment.cfragmentGate->select(isOutsideCF() and matches(self))->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-outside_cf_matched rdfs:comment "'If this Gate is outside an 'alt' CombinedFragment,  for every InteractionOperator inside that CombinedFragment there must be exactly one matching Gate inside the CombindedFragment with its opposing end enclosed by that InteractionOperator. If this Gate is outside CombinedFragment with operator other than 'alt',   there must be exactly one matching Gate inside that CombinedFragment."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-outside_cf_matched-_specification .

element:Gate-outside_cf_matched-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isOutsideCF() implies\n if self.combinedFragment.interactionOperator->asOrderedSet()->first() = InteractionOperatorKind::alt\n then self.combinedFragment.operand->forAll(op : InteractionOperand |\n self.combinedFragment.cfragmentGate->select(isInsideCF() and \n oppositeEnd().enclosingFragment()->includes(self.combinedFragment) and matches(self))->size()=1)\n else  self.combinedFragment.cfragmentGate->select(isInsideCF() and matches(self))->size()=1\n endif"^^<http://www.omg.org/spec/OCL> .

element:Gate-formal_gate_distinguishable rdfs:comment "'isFormal() implies that no other formalGate of the parent Interaction returns the same getName() as returned for self"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-formal_gate_distinguishable-_specification .

element:Gate-formal_gate_distinguishable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isFormal() implies interaction.formalGate->select(getName() = self.getName())->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-actual_gate_distinguishable rdfs:comment "'isActual() implies that no other actualGate of the parent InteractionUse returns the same getName() as returned for self"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-actual_gate_distinguishable-_specification .

element:Gate-actual_gate_distinguishable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isActual() implies interactionUse.actualGate->select(getName() = self.getName())->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-outside_cf_gate_distinguishable rdfs:comment "'isOutsideCF() implies that no other outside cfragmentGate of the parent CombinedFragment returns the same getName() as returned for self"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-outside_cf_gate_distinguishable-_specification .

element:Gate-outside_cf_gate_distinguishable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isOutsideCF() implies combinedFragment.cfragmentGate->select(getName() = self.getName())->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-inside_cf_gate_distinguishable rdfs:comment "'isInsideCF() implies that no other inside cfragmentGate attached to a message with its other end in the same InteractionOperator as self, returns the same getName() as returned for self"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-inside_cf_gate_distinguishable-_specification .

element:Gate-inside_cf_gate_distinguishable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isInsideCF() implies\nlet selfOperand : InteractionOperand = self.getOperand() in\n  combinedFragment.cfragmentGate->select(isInsideCF() and getName() = self.getName())->select(getOperand() = selfOperand)->size()=1"^^<http://www.omg.org/spec/OCL> .

element:Gate-isOutsideCF rdfs:comment "'This query returns true if this Gate is attached to the boundary of a CombinedFragment, and its other end (if present)  is outside of the same CombinedFragment."@en ;
	uml-model:rule element:Gate-isOutsideCF-spec ;
	uml-model:returns element:Gate-isOutsideCF-result .

element:Gate-isOutsideCF-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-isOutsideCF-spec-_specification .

element:Gate-isOutsideCF-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oppositeEnd()-> notEmpty() and combinedFragment->notEmpty() implies\nlet oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\nif oppEnd.oclIsKindOf(MessageOccurrenceSpecification) \nthen let oppMOS : MessageOccurrenceSpecification = oppEnd.oclAsType(MessageOccurrenceSpecification)\nin  self.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(self.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet()) =\n     oppMOS.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(oppMOS.enclosingOperand.oclAsType(InteractionFragment)->asSet())\nelse let oppGate : Gate = oppEnd.oclAsType(Gate) \nin self.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(self.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet()) =\n     oppGate.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(oppGate.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet())\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Gate-isOutsideCF-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-isInsideCF rdfs:comment "'This query returns true if this Gate is attached to the boundary of a CombinedFragment, and its other end (if present) is inside of an InteractionOperator of the same CombinedFragment."@en ;
	uml-model:rule element:Gate-isInsideCF-spec ;
	uml-model:returns element:Gate-isInsideCF-result .

element:Gate-isInsideCF-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-isInsideCF-spec-_specification .

element:Gate-isInsideCF-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oppositeEnd()-> notEmpty() and combinedFragment->notEmpty() implies\nlet oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\nif oppEnd.oclIsKindOf(MessageOccurrenceSpecification)\nthen let oppMOS : MessageOccurrenceSpecification\n= oppEnd.oclAsType(MessageOccurrenceSpecification)\nin combinedFragment = oppMOS.enclosingOperand.combinedFragment\nelse let oppGate : Gate = oppEnd.oclAsType(Gate)\nin combinedFragment = oppGate.combinedFragment.enclosingOperand.combinedFragment\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Gate-isInsideCF-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-isActual rdfs:comment "'This query returns true value if this Gate is an actualGate of an InteractionUse."@en ;
	uml-model:rule element:Gate-isActual-spec ;
	uml-model:returns element:Gate-isActual-result .

element:Gate-isActual-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-isActual-spec-_specification .

element:Gate-isActual-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (interactionUse->notEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Gate-isActual-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-isFormal rdfs:comment "'This query returns true if this Gate is a formalGate of an Interaction."@en ;
	uml-model:rule element:Gate-isFormal-spec ;
	uml-model:returns element:Gate-isFormal-result .

element:Gate-isFormal-spec rdfs:comment "'&lt;p&gt;interaction-&amp;gt;notEmpty()&lt;/p&gt;"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Gate-isFormal-spec-_specification .

element:Gate-isFormal-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (interaction->notEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Gate-isFormal-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-getName rdfs:comment "'This query returns the name of the gate, either the explicit name (.name) or the constructed name ('out_&#34; or 'in_' concatenated in front of .message.name) if the explicit name is not present."@en ;
	uml-model:rule element:Gate-getName-spec ;
	uml-model:returns element:Gate-getName-result .

element:Gate-getName-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-getName-spec-_specification .

element:Gate-getName-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if name->notEmpty() then name->asOrderedSet()->first()\nelse  if isActual() or isOutsideCF() \n  then if isSend() \n    then 'out_'.concat(self.message.name->asOrderedSet()->first())\n    else 'in_'.concat(self.message.name->asOrderedSet()->first())\n    endif\n  else if isSend()\n    then 'in_'.concat(self.message.name->asOrderedSet()->first())\n    else 'out_'.concat(self.message.name->asOrderedSet()->first())\n    endif\n  endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Gate-getName-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:Gate-matches rdfs:comment "'This query returns true if the name of this Gate matches the name of the in parameter Gate, and the messages for the two Gates correspond. The Message for one Gate (say A) corresponds to the Message for another Gate (say B) if (A and B have the same name value) and (if A is a sendEvent then B is a receiveEvent) and (if A is a receiveEvent then B is a sendEvent) and (A and B have the same messageSort value) and (A and B have the same signature value)."@en ;
	uml-model:rule element:Gate-matches-spec ;
	uml-model:returns element:Gate-matches-result .

element:Gate-matches-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-matches-spec-_specification .

element:Gate-matches-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.getName() = gateToMatch.getName() and \nself.message.messageSort = gateToMatch.message.messageSort and\nself.message.name = gateToMatch.message.name and\nself.message.sendEvent->includes(self) implies gateToMatch.message.receiveEvent->includes(gateToMatch)  and\nself.message.receiveEvent->includes(self) implies gateToMatch.message.sendEvent->includes(gateToMatch) and\nself.message.signature = gateToMatch.message.signature)"^^<http://www.omg.org/spec/OCL> .

element:Gate-matches-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-matches-gateToMatch rdf:type uml:Parameter ;
	uml-model:name "gateToMatch" ;
	uml-model:parameterType element:Gate .

element:Gate-isDistinguishableFrom uml-model:redefines element:NamedElement-isDistinguishableFrom ;
	rdfs:comment "'The query isDistinguishableFrom() specifies that two Gates may coexist in the same Namespace, without an explicit name property. The association end formalGate subsets ownedElement, and since the Gate name attribute&#xD;&#xA;is optional, it is allowed to have two formal gates without an explicit name, but having derived names which are distinct."@en ;
	uml-model:rule element:Gate-isDistinguishableFrom-spec ;
	uml-model:returns element:Gate-isDistinguishableFrom-result .

element:Gate-isDistinguishableFrom-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-isDistinguishableFrom-spec-_specification .

element:Gate-isDistinguishableFrom-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:Gate-isDistinguishableFrom-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Gate-isDistinguishableFrom-n rdf:type uml:Parameter ;
	uml-model:name "n" ;
	uml-model:parameterType element:NamedElement .

element:Gate-isDistinguishableFrom-ns rdf:type uml:Parameter ;
	uml-model:name "ns" ;
	uml-model:parameterType element:Namespace .

element:Gate-getOperand rdfs:comment "'If the Gate is an inside Combined Fragment Gate, this operation returns the InteractionOperand that the opposite end of this Gate is included within."@en ;
	uml-model:rule element:Gate-getOperand-spec ;
	uml-model:returns element:Gate-getOperand-result .

element:Gate-getOperand-spec rdf:type uml:Constraint ;
	uml-model:specification element:Gate-getOperand-spec-_specification .

element:Gate-getOperand-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if isInsideCF() then\n  let oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\n    if oppEnd.oclIsKindOf(MessageOccurrenceSpecification)\n    then let oppMOS : MessageOccurrenceSpecification = oppEnd.oclAsType(MessageOccurrenceSpecification)\n        in oppMOS.enclosingOperand->asOrderedSet()->first()\n    else let oppGate : Gate = oppEnd.oclAsType(Gate)\n        in oppGate.combinedFragment.enclosingOperand->asOrderedSet()->first()\n    endif\n  else null\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Gate-getOperand-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:InteractionOperand .

element:GeneralOrdering xmi:type uml:Class ;
	xmi:id "GeneralOrdering" ;
	uml-model:name "GeneralOrdering" ;
	rdfs:comment "'A GeneralOrdering represents a binary relation between two OccurrenceSpecifications, to describe that one OccurrenceSpecification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of OccurrenceSpecifications that may otherwise not have a specified order."@en ;
	uml-model:rule element:GeneralOrdering-irreflexive_transitive_closure ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:GeneralOrdering-after, property:GeneralOrdering-before .

element:GeneralOrdering-irreflexive_transitive_closure rdfs:comment "'An occurrence specification must not be ordered relative to itself through a series of general orderings. (In other words, the transitive closure of the general orderings is irreflexive.)"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:GeneralOrdering-irreflexive_transitive_closure-_specification .

element:GeneralOrdering-irreflexive_transitive_closure-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "after->closure(toAfter.after)->excludes(before)"^^<http://www.omg.org/spec/OCL> .

property:GeneralOrdering-after rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralOrdering-after" ;
	rdfs:label "GeneralOrdering-after" ;
	uml-model:name "after" ;
	uml-model:association uml-element:A_toBefore_after ;
	rdfs:range element:OccurrenceSpecification ;
	rdfs:comment "'The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:GeneralOrdering-before rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralOrdering-before" ;
	rdfs:label "GeneralOrdering-before" ;
	uml-model:name "before" ;
	uml-model:association uml-element:A_before_toAfter ;
	rdfs:range element:OccurrenceSpecification ;
	rdfs:comment "'The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Interaction xmi:type uml:Class ;
	xmi:id "Interaction" ;
	uml-model:name "Interaction" ;
	rdfs:comment "'An Interaction is a unit of Behavior that focuses on the observable exchange of information between connectable elements."@en ;
	uml-model:rule element:Interaction-not_contained ;
	rdfs:subClassOf element:InteractionFragment, element:Behavior ;
	uml-model:ownedAttribute property:Interaction-action, property:Interaction-formalGate, property:Interaction-fragment, property:Interaction-lifeline, property:Interaction-message .

element:Interaction-not_contained rdfs:comment "'An Interaction instance must not be contained within another Interaction instance."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Interaction-not_contained-_specification .

element:Interaction-not_contained-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "enclosingInteraction->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:Interaction-action rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interaction-action" ;
	rdfs:label "Interaction-action" ;
	uml-model:name "action" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_action_interaction ;
	rdfs:range element:Action ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Actions owned by the Interaction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interaction-formalGate rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interaction-formalGate" ;
	rdfs:label "Interaction-formalGate" ;
	uml-model:name "formalGate" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_formalGate_interaction ;
	rdfs:range element:Gate ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interaction-fragment rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interaction-fragment" ;
	rdfs:label "Interaction-fragment" ;
	uml-model:name "fragment" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_fragment_enclosingInteraction ;
	rdfs:range element:InteractionFragment ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ordered set of fragments in the Interaction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interaction-lifeline rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interaction-lifeline" ;
	rdfs:label "Interaction-lifeline" ;
	uml-model:name "lifeline" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_lifeline_interaction ;
	rdfs:range element:Lifeline ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Specifies the participants in this Interaction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Interaction-message rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Interaction-message" ;
	rdfs:label "Interaction-message" ;
	uml-model:name "message" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_message_interaction ;
	rdfs:range element:Message ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Messages contained in this Interaction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:InteractionConstraint xmi:type uml:Class ;
	xmi:id "InteractionConstraint" ;
	uml-model:name "InteractionConstraint" ;
	rdfs:comment "'An InteractionConstraint is a Boolean expression that guards an operand in a CombinedFragment."@en ;
	uml-model:rule element:InteractionConstraint-minint_maxint, element:InteractionConstraint-minint_non_negative, element:InteractionConstraint-maxint_positive, element:InteractionConstraint-dynamic_variables, element:InteractionConstraint-global_data, element:InteractionConstraint-maxint_greater_equal_minint ;
	rdfs:subClassOf element:Constraint ;
	uml-model:ownedAttribute property:InteractionConstraint-maxint, property:InteractionConstraint-minint .

element:InteractionConstraint-minint_maxint rdfs:comment "'Minint/maxint can only be present if the InteractionConstraint is associated with the operand of a loop CombinedFragment."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-minint_maxint-_specification .

element:InteractionConstraint-minint_maxint-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "maxint->notEmpty() or minint->notEmpty() implies\ninteractionOperand.combinedFragment.interactionOperator =\nInteractionOperatorKind::loop"^^<http://www.omg.org/spec/OCL> .

element:InteractionConstraint-minint_non_negative rdfs:comment "'If minint is specified, then the expression must evaluate to a non-negative integer."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-minint_non_negative-_specification .

element:InteractionConstraint-minint_non_negative-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "minint->notEmpty() implies \nminint->asSequence()->first().integerValue() >= 0"^^<http://www.omg.org/spec/OCL> .

element:InteractionConstraint-maxint_positive rdfs:comment "'If maxint is specified, then the expression must evaluate to a positive integer."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-maxint_positive-_specification .

element:InteractionConstraint-maxint_positive-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "maxint->notEmpty() implies \nmaxint->asSequence()->first().integerValue() > 0"^^<http://www.omg.org/spec/OCL> .

element:InteractionConstraint-dynamic_variables rdfs:comment "'The dynamic variables that take part in the constraint must be owned by the ConnectableElement corresponding to the covered Lifeline."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-dynamic_variables-_specification .

element:InteractionConstraint-dynamic_variables-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InteractionConstraint-global_data rdfs:comment "'The constraint may contain references to global data or write-once data."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-global_data-_specification .

element:InteractionConstraint-global_data-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InteractionConstraint-maxint_greater_equal_minint rdfs:comment "'If maxint is specified, then minint must be specified and the evaluation of maxint must be &gt;= the evaluation of minint."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionConstraint-maxint_greater_equal_minint-_specification .

element:InteractionConstraint-maxint_greater_equal_minint-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "maxint->notEmpty() implies (minint->notEmpty() and \nmaxint->asSequence()->first().integerValue() >=\nminint->asSequence()->first().integerValue() )"^^<http://www.omg.org/spec/OCL> .

property:InteractionConstraint-maxint rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionConstraint-maxint" ;
	rdfs:label "InteractionConstraint-maxint" ;
	uml-model:name "maxint" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_maxint_interactionConstraint ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The maximum number of iterations of a loop"@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:InteractionConstraint-minint rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionConstraint-minint" ;
	rdfs:label "InteractionConstraint-minint" ;
	uml-model:name "minint" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_minint_interactionConstraint ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The minimum number of iterations of a loop"@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:InteractionFragment xmi:type uml:Class ;
	xmi:id "InteractionFragment" ;
	uml-model:name "InteractionFragment" ;
	rdfs:comment "'InteractionFragment is an abstract notion of the most general interaction unit. An InteractionFragment is a piece of an Interaction. Each InteractionFragment is conceptually like an Interaction by itself."@en ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:InteractionFragment-covered, property:InteractionFragment-enclosingInteraction, property:InteractionFragment-enclosingOperand, property:InteractionFragment-generalOrdering .

property:InteractionFragment-covered rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionFragment-covered" ;
	rdfs:label "InteractionFragment-covered" ;
	uml-model:name "covered" ;
	uml-model:association uml-element:A_covered_coveredBy ;
	rdfs:range element:Lifeline ;
	rdfs:comment "'References the Lifelines that the InteractionFragment involves."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InteractionFragment-enclosingInteraction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionFragment-enclosingInteraction" ;
	rdfs:label "InteractionFragment-enclosingInteraction" ;
	uml-model:name "enclosingInteraction" ;
	uml-model:association uml-element:A_fragment_enclosingInteraction ;
	rdfs:range element:Interaction ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The Interaction enclosing this InteractionFragment."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:InteractionFragment-enclosingOperand rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionFragment-enclosingOperand" ;
	rdfs:label "InteractionFragment-enclosingOperand" ;
	uml-model:name "enclosingOperand" ;
	uml-model:association uml-element:A_fragment_enclosingOperand ;
	rdfs:range element:InteractionOperand ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The operand enclosing this InteractionFragment (they may nest recursively)."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:InteractionFragment-generalOrdering rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionFragment-generalOrdering" ;
	rdfs:label "InteractionFragment-generalOrdering" ;
	uml-model:name "generalOrdering" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_generalOrdering_interactionFragment ;
	rdfs:range element:GeneralOrdering ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The general ordering relationships contained in this fragment."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:InteractionOperand xmi:type uml:Class ;
	xmi:id "InteractionOperand" ;
	uml-model:name "InteractionOperand" ;
	rdfs:comment "'An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment."@en ;
	uml-model:rule element:InteractionOperand-guard_contain_references, element:InteractionOperand-guard_directly_prior ;
	rdfs:subClassOf element:InteractionFragment, element:Namespace ;
	uml-model:ownedAttribute property:InteractionOperand-fragment, property:InteractionOperand-guard .

element:InteractionOperand-guard_contain_references rdfs:comment "'The guard must contain only references to values local to the Lifeline on which it resides, or values global to the whole Interaction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionOperand-guard_contain_references-_specification .

element:InteractionOperand-guard_contain_references-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InteractionOperand-guard_directly_prior rdfs:comment "'The guard must be placed directly prior to (above) the OccurrenceSpecification that will become the first OccurrenceSpecification within this InteractionOperand."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionOperand-guard_directly_prior-_specification .

element:InteractionOperand-guard_directly_prior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

property:InteractionOperand-fragment rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionOperand-fragment" ;
	rdfs:label "InteractionOperand-fragment" ;
	uml-model:name "fragment" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_fragment_enclosingOperand ;
	rdfs:range element:InteractionFragment ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The fragments of the operand."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InteractionOperand-guard rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionOperand-guard" ;
	rdfs:label "InteractionOperand-guard" ;
	uml-model:name "guard" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_guard_interactionOperand ;
	rdfs:range element:InteractionConstraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Constraint of the operand."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:InteractionUse xmi:type uml:Class ;
	xmi:id "InteractionUse" ;
	uml-model:name "InteractionUse" ;
	rdfs:comment "'An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referenced Interaction where the InteractionUse is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal Gates with the actual ones."@en ;
	uml-model:rule element:InteractionUse-gates_match, element:InteractionUse-arguments_are_constants, element:InteractionUse-returnValueRecipient_coverage, element:InteractionUse-arguments_correspond_to_parameters, element:InteractionUse-returnValue_type_recipient_correspondence, element:InteractionUse-all_lifelines ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:InteractionUse-actualGate, property:InteractionUse-argument, property:InteractionUse-refersTo, property:InteractionUse-returnValue, property:InteractionUse-returnValueRecipient .

element:InteractionUse-gates_match rdfs:comment "'Actual Gates of the InteractionUse must match Formal Gates of the referred Interaction. Gates match when their names are equal and their messages correspond."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-gates_match-_specification .

element:InteractionUse-gates_match-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "actualGate->notEmpty() implies \nrefersTo.formalGate->forAll( fg : Gate | self.actualGate->select(matches(fg))->size()=1) and\nself.actualGate->forAll(ag : Gate | refersTo.formalGate->select(matches(ag))->size()=1)"^^<http://www.omg.org/spec/OCL> .

element:InteractionUse-arguments_are_constants rdfs:comment "'The arguments must only be constants, parameters of the enclosing Interaction or attributes of the classifier owning the enclosing Interaction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-arguments_are_constants-_specification .

element:InteractionUse-arguments_are_constants-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InteractionUse-returnValueRecipient_coverage rdfs:comment "'The returnValueRecipient must be a Property of a ConnectableElement that is represented by a Lifeline covered by this InteractionUse."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-returnValueRecipient_coverage-_specification .

element:InteractionUse-returnValueRecipient_coverage-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "returnValueRecipient->asSet()->notEmpty() implies\nlet covCE : Set(ConnectableElement) = covered.represents->asSet() in \ncovCE->notEmpty() and let classes:Set(Classifier) = covCE.type.oclIsKindOf(Classifier).oclAsType(Classifier)->asSet() in \nlet allProps : Set(Property) = classes.attribute->union(classes.allParents().attribute)->asSet() in \nallProps->includes(returnValueRecipient)"^^<http://www.omg.org/spec/OCL> .

element:InteractionUse-arguments_correspond_to_parameters rdfs:comment "'The arguments of the InteractionUse must correspond to parameters of the referred Interaction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-arguments_correspond_to_parameters-_specification .

element:InteractionUse-arguments_correspond_to_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InteractionUse-returnValue_type_recipient_correspondence rdfs:comment "'The type of the returnValue must correspond to the type of the returnValueRecipient."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-returnValue_type_recipient_correspondence-_specification .

element:InteractionUse-returnValue_type_recipient_correspondence-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "returnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.type->asSequence()->first()"^^<http://www.omg.org/spec/OCL> .

element:InteractionUse-all_lifelines rdfs:comment "'The InteractionUse must cover all Lifelines of the enclosing Interaction that are common with the lifelines covered by the referred Interaction. Lifelines are common if they have the same selector and represents associationEnd values."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InteractionUse-all_lifelines-_specification .

element:InteractionUse-all_lifelines-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let parentInteraction : Set(Interaction) = enclosingInteraction->asSet()->\nunion(enclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()) in\nparentInteraction->size()=1 and let refInteraction : Interaction = refersTo in\nparentInteraction.covered-> forAll(intLifeline : Lifeline | refInteraction.covered->\nforAll( refLifeline : Lifeline | refLifeline.represents = intLifeline.represents and \n(\n( refLifeline.selector.oclIsKindOf(LiteralString) implies\n  intLifeline.selector.oclIsKindOf(LiteralString) and \n  refLifeline.selector.oclAsType(LiteralString).value = intLifeline.selector.oclAsType(LiteralString).value ) and\n( refLifeline.selector.oclIsKindOf(LiteralInteger) implies\n  intLifeline.selector.oclIsKindOf(LiteralInteger) and \n  refLifeline.selector.oclAsType(LiteralInteger).value = intLifeline.selector.oclAsType(LiteralInteger).value )\n)\n implies self.covered->asSet()->includes(intLifeline)))"^^<http://www.omg.org/spec/OCL> .

property:InteractionUse-actualGate rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionUse-actualGate" ;
	rdfs:label "InteractionUse-actualGate" ;
	uml-model:name "actualGate" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_actualGate_interactionUse ;
	rdfs:range element:Gate ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The actual gates of the InteractionUse."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InteractionUse-argument rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionUse-argument" ;
	rdfs:label "InteractionUse-argument" ;
	uml-model:name "argument" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_argument_interactionUse ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The actual arguments of the Interaction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InteractionUse-refersTo rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionUse-refersTo" ;
	rdfs:label "InteractionUse-refersTo" ;
	uml-model:name "refersTo" ;
	uml-model:association uml-element:A_refersTo_interactionUse ;
	rdfs:range element:Interaction ;
	rdfs:comment "'Refers to the Interaction that defines its meaning."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:InteractionUse-returnValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionUse-returnValue" ;
	rdfs:label "InteractionUse-returnValue" ;
	uml-model:name "returnValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_returnValue_interactionUse ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The value of the executed Interaction."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:InteractionUse-returnValueRecipient rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InteractionUse-returnValueRecipient" ;
	rdfs:label "InteractionUse-returnValueRecipient" ;
	uml-model:name "returnValueRecipient" ;
	uml-model:association uml-element:A_returnValueRecipient_interactionUse ;
	rdfs:range element:Property ;
	rdfs:comment "'The recipient of the return value."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Lifeline xmi:type uml:Class ;
	xmi:id "Lifeline" ;
	uml-model:name "Lifeline" ;
	rdfs:comment "'A Lifeline represents an individual participant in the Interaction. While parts and structural features may have multiplicity greater than 1, Lifelines represent only one interacting entity."@en ;
	uml-model:rule element:Lifeline-selector_specified, element:Lifeline-interaction_uses_share_lifeline, element:Lifeline-same_classifier, element:Lifeline-selector_int_or_string ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:Lifeline-coveredBy, property:Lifeline-decomposedAs, property:Lifeline-interaction, property:Lifeline-represents, property:Lifeline-selector .

element:Lifeline-selector_specified rdfs:comment "'The selector for a Lifeline must only be specified if the referenced Part is multivalued."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Lifeline-selector_specified-_specification .

element:Lifeline-selector_specified-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.selector->notEmpty() = (self.represents.oclIsKindOf(MultiplicityElement) and self.represents.oclAsType(MultiplicityElement).isMultivalued())"^^<http://www.omg.org/spec/OCL> .

element:Lifeline-interaction_uses_share_lifeline rdfs:comment "'If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonUse within that same enclosing Interaction, it must be common to a lifeline within that enclosing Interaction. By common Lifelines we mean Lifelines with the same selector and represents associations.&#xD;&#xA;"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Lifeline-interaction_uses_share_lifeline-_specification .

element:Lifeline-interaction_uses_share_lifeline-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let intUses : Set(InteractionUse) = interaction.interactionUse  in \nintUses->forAll\n( iuse : InteractionUse | \nlet usingInteraction : Set(Interaction)  = iuse.enclosingInteraction->asSet()\n->union(\niuse.enclosingOperand.combinedFragment->asSet()->closure(enclosingOperand.combinedFragment).enclosingInteraction->asSet()\n               ) \nin\nlet peerUses : Set(InteractionUse) = usingInteraction.fragment->select(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\n->union(\nusingInteraction.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet()\n->closure(operand.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)).operand.fragment->\nselect(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\n               )->excluding(iuse)\n in\npeerUses->forAll( peerUse : InteractionUse |\n peerUse.refersTo.lifeline->forAll( l : Lifeline | (l.represents = self.represents and \n ( self.selector.oclIsKindOf(LiteralString) implies\n  l.selector.oclIsKindOf(LiteralString) and \n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\n  and \n( self.selector.oclIsKindOf(LiteralInteger) implies\n  l.selector.oclIsKindOf(LiteralInteger) and \n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\n)  \nimplies\n usingInteraction.lifeline->select(represents = self.represents and\n ( self.selector.oclIsKindOf(LiteralString) implies\n  l.selector.oclIsKindOf(LiteralString) and \n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\nand \n( self.selector.oclIsKindOf(LiteralInteger) implies\n  l.selector.oclIsKindOf(LiteralInteger) and \n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\n)\n                                                )\n                    )\n)"^^<http://www.omg.org/spec/OCL> .

element:Lifeline-same_classifier rdfs:comment "'The classifier containing the referenced ConnectableElement must be the same classifier, or an ancestor, of the classifier that contains the interaction enclosing this lifeline."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Lifeline-same_classifier-_specification .

element:Lifeline-same_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "represents.namespace->closure(namespace)->includes(interaction._'context')"^^<http://www.omg.org/spec/OCL> .

element:Lifeline-selector_int_or_string rdfs:comment "'The selector value, if present, must be a LiteralString or a LiteralInteger "@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Lifeline-selector_int_or_string-_specification .

element:Lifeline-selector_int_or_string-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.selector->notEmpty() implies \nself.selector.oclIsKindOf(LiteralInteger) or \nself.selector.oclIsKindOf(LiteralString)"^^<http://www.omg.org/spec/OCL> .

property:Lifeline-coveredBy rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Lifeline-coveredBy" ;
	rdfs:label "Lifeline-coveredBy" ;
	uml-model:name "coveredBy" ;
	uml-model:association uml-element:A_covered_coveredBy ;
	rdfs:range element:InteractionFragment ;
	rdfs:comment "'References the InteractionFragments in which this Lifeline takes part."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Lifeline-decomposedAs rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Lifeline-decomposedAs" ;
	rdfs:label "Lifeline-decomposedAs" ;
	uml-model:name "decomposedAs" ;
	uml-model:association uml-element:A_decomposedAs_lifeline ;
	rdfs:range element:PartDecomposition ;
	rdfs:comment "'References the Interaction that represents the decomposition."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Lifeline-interaction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Lifeline-interaction" ;
	rdfs:label "Lifeline-interaction" ;
	uml-model:name "interaction" ;
	uml-model:association uml-element:A_lifeline_interaction ;
	rdfs:range element:Interaction ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'References the Interaction enclosing this Lifeline."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Lifeline-represents rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Lifeline-represents" ;
	rdfs:label "Lifeline-represents" ;
	uml-model:name "represents" ;
	uml-model:association uml-element:A_represents_lifeline ;
	rdfs:range element:ConnectableElement ;
	rdfs:comment "'References the ConnectableElement within the classifier that contains the enclosing interaction."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Lifeline-selector rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Lifeline-selector" ;
	rdfs:label "Lifeline-selector" ;
	uml-model:name "selector" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_selector_lifeline ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Message xmi:type uml:Class ;
	xmi:id "Message" ;
	uml-model:name "Message" ;
	rdfs:comment "'A Message defines a particular communication between Lifelines of an Interaction."@en ;
	uml-model:rule element:Message-sending_receiving_message_event, element:Message-arguments, element:Message-cannot_cross_boundaries, element:Message-signature_is_signal, element:Message-occurrence_specifications, element:Message-signature_refer_to, element:Message-signature_is_operation_request, element:Message-signature_is_operation_reply ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:Message-argument, property:Message-connector, property:Message-interaction, property:Message-messageKind, property:Message-messageSort, property:Message-receiveEvent, property:Message-sendEvent, property:Message-signature ;
	uml-model:operation element:Message-messageKind.1, element:Message-isDistinguishableFrom .

element:Message-sending_receiving_message_event rdfs:comment "'If the sendEvent and the receiveEvent of the same Message are on the same Lifeline, the sendEvent must be ordered before the receiveEvent."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-sending_receiving_message_event-_specification .

element:Message-sending_receiving_message_event-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "receiveEvent.oclIsKindOf(MessageOccurrenceSpecification)\nimplies\nlet f :  Lifeline = sendEvent->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first().covered in\nf = receiveEvent->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first().covered  implies\nf.events->indexOf(sendEvent.oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() ) < \nf.events->indexOf(receiveEvent.oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() )"^^<http://www.omg.org/spec/OCL> .

element:Message-arguments rdfs:comment "'Arguments of a Message must only be: i) attributes of the sending lifeline, ii) constants, iii) symbolic values (which are wildcard values representing any legal value), iv) explicit parameters of the enclosing Interaction, v) attributes of the class owning the Interaction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-arguments-_specification .

element:Message-arguments-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Message-cannot_cross_boundaries rdfs:comment "'Messages cannot cross boundaries of CombinedFragments or their operands.  This is true if and only if both MessageEnds are enclosed within the same InteractionFragment (i.e., an InteractionOperand or an Interaction)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-cannot_cross_boundaries-_specification .

element:Message-cannot_cross_boundaries-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "sendEvent->notEmpty() and receiveEvent->notEmpty() implies\nlet sendEnclosingFrag : Set(InteractionFragment) = \nsendEvent->asOrderedSet()->first().enclosingFragment()\nin \nlet receiveEnclosingFrag : Set(InteractionFragment) = \nreceiveEvent->asOrderedSet()->first().enclosingFragment()\nin  sendEnclosingFrag = receiveEnclosingFrag"^^<http://www.omg.org/spec/OCL> .

element:Message-signature_is_signal rdfs:comment "'In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument is of the same Class or a specialization of that of the Attribute."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-signature_is_signal-_specification .

element:Message-signature_is_signal-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(messageSort = MessageSort::asynchSignal ) and signature.oclIsKindOf(Signal) implies\n   let signalAttributes : OrderedSet(Property) = signature.oclAsType(Signal).inheritedMember()->\n             select(n:NamedElement | n.oclIsTypeOf(Property))->collect(oclAsType(Property))->asOrderedSet()\n   in signalAttributes->size() = self.argument->size()\n   and self.argument->forAll( o: ValueSpecification |\n          not (o.oclIsKindOf(Expression)\n          and o.oclAsType(Expression).symbol->size()=0\n          and o.oclAsType(Expression).operand->isEmpty() ) implies\n              let p : Property = signalAttributes->at(self.argument->indexOf(o))\n              in o.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier)))"^^<http://www.omg.org/spec/OCL> .

element:Message-occurrence_specifications rdfs:comment "'If the MessageEnds are both OccurrenceSpecifications, then the connector must go between the Parts represented by the Lifelines of the two MessageEnds."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-occurrence_specifications-_specification .

element:Message-occurrence_specifications-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Message-signature_refer_to rdfs:comment "'The signature must either refer an Operation (in which case messageSort is either synchCall or asynchCall or reply) or a Signal (in which case messageSort is asynchSignal). The name of the NamedElement referenced by signature must be the same as that of the Message."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-signature_refer_to-_specification .

element:Message-signature_refer_to-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "signature->notEmpty() implies \n((signature.oclIsKindOf(Operation) and \n(messageSort = MessageSort::asynchCall or messageSort = MessageSort::synchCall or messageSort = MessageSort::reply) \n) or (signature.oclIsKindOf(Signal)  and messageSort = MessageSort::asynchSignal )\n ) and name = signature.name"^^<http://www.omg.org/spec/OCL> .

element:Message-signature_is_operation_request rdfs:comment "'In the case when a Message with messageSort synchCall or asynchCall has a non empty Operation signature, the arguments of the Message must correspond to the in and inout parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-signature_is_operation_request-_specification .

element:Message-signature_is_operation_request-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(messageSort = MessageSort::asynchCall or messageSort = MessageSort::synchCall) and signature.oclIsKindOf(Operation)  implies \n let requestParms : OrderedSet(Parameter) = signature.oclAsType(Operation).ownedParameter->\n select(direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::_'in'  )\nin requestParms->size() = self.argument->size() and\nself.argument->forAll( o: ValueSpecification | \nnot (o.oclIsKindOf(Expression) and o.oclAsType(Expression).symbol->size()=0 and o.oclAsType(Expression).operand->isEmpty() ) implies \nlet p : Parameter = requestParms->at(self.argument->indexOf(o)) in\no.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier))\n)"^^<http://www.omg.org/spec/OCL> .

element:Message-signature_is_operation_reply rdfs:comment "'In the case when a Message with messageSort reply has a non empty Operation signature, the arguments of the Message must correspond to the out, inout, and return parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Message-signature_is_operation_reply-_specification .

element:Message-signature_is_operation_reply-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(messageSort = MessageSort::reply) and signature.oclIsKindOf(Operation) implies \n let replyParms : OrderedSet(Parameter) = signature.oclAsType(Operation).ownedParameter->\nselect(direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::out or direction = ParameterDirectionKind::return)\nin replyParms->size() = self.argument->size() and\nself.argument->forAll( o: ValueSpecification | o.oclIsKindOf(Expression) and let e : Expression = o.oclAsType(Expression) in\ne.operand->notEmpty()  implies \nlet p : Parameter = replyParms->at(self.argument->indexOf(o)) in\ne.operand->asSequence()->first().type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier))\n)"^^<http://www.omg.org/spec/OCL> .

property:Message-argument rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-argument" ;
	rdfs:label "Message-argument" ;
	uml-model:name "argument" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_argument_message ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The arguments of the Message."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Message-connector rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-connector" ;
	rdfs:label "Message-connector" ;
	uml-model:name "connector" ;
	uml-model:association uml-element:A_connector_message ;
	rdfs:range element:Connector ;
	rdfs:comment "'The Connector on which this Message is sent."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Message-interaction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-interaction" ;
	rdfs:label "Message-interaction" ;
	uml-model:name "interaction" ;
	uml-model:association uml-element:A_message_interaction ;
	rdfs:range element:Interaction ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'The enclosing Interaction owning the Message."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Message-messageKind rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-messageKind" ;
	rdfs:label "Message-messageKind" ;
	uml-model:name "messageKind" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range element:MessageKind ;
	rdfs:comment "'The derived kind of the Message (complete, lost, found, or unknown)."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Message-messageKind.1-spec .

property:Message-messageSort rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-messageSort" ;
	rdfs:label "Message-messageSort" ;
	uml-model:name "messageSort" ;
	rdfs:range element:MessageSort ;
	rdfs:comment "'The sort of communication reflected by the Message."@en ;
	xmi:defaultValue element:Message-messageSort-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Message-messageSort-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "Message-messageSort-_defaultValue" .

property:Message-receiveEvent rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-receiveEvent" ;
	rdfs:label "Message-receiveEvent" ;
	uml-model:name "receiveEvent" ;
	uml-model:association uml-element:A_receiveEvent_endMessage ;
	rdfs:range element:MessageEnd ;
	uml-model:subsettedProperty uml-element:A_message_messageEnd-messageEnd ;
	rdfs:comment "'References the Receiving of the Message."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Message-sendEvent rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-sendEvent" ;
	rdfs:label "Message-sendEvent" ;
	uml-model:name "sendEvent" ;
	uml-model:association uml-element:A_sendEvent_endMessage ;
	rdfs:range element:MessageEnd ;
	uml-model:subsettedProperty uml-element:A_message_messageEnd-messageEnd ;
	rdfs:comment "'References the Sending of the Message."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Message-signature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Message-signature" ;
	rdfs:label "Message-signature" ;
	uml-model:name "signature" ;
	uml-model:association uml-element:A_signature_message ;
	rdfs:range element:NamedElement ;
	rdfs:comment "'The signature of the Message is the specification of its content. It refers either an Operation or a Signal."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Message-messageKind.1 rdfs:comment "'This query returns the MessageKind value for this Message."@en ;
	uml-model:returns element:Message-messageKind.1-result .

element:Message-messageKind.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Message-messageKind.1-spec-_specification .

element:Message-messageKind.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (messageKind)"^^<http://www.omg.org/spec/OCL> .

element:Message-messageKind.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:MessageKind .

element:Message-isDistinguishableFrom uml-model:redefines element:NamedElement-isDistinguishableFrom ;
	rdfs:comment "'The query isDistinguishableFrom() specifies that any two Messages may coexist in the same Namespace, regardless of their names."@en ;
	uml-model:rule element:Message-isDistinguishableFrom-spec ;
	uml-model:returns element:Message-isDistinguishableFrom-result .

element:Message-isDistinguishableFrom-spec rdf:type uml:Constraint ;
	uml-model:specification element:Message-isDistinguishableFrom-spec-_specification .

element:Message-isDistinguishableFrom-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:Message-isDistinguishableFrom-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Message-isDistinguishableFrom-n rdf:type uml:Parameter ;
	uml-model:name "n" ;
	uml-model:parameterType element:NamedElement .

element:Message-isDistinguishableFrom-ns rdf:type uml:Parameter ;
	uml-model:name "ns" ;
	uml-model:parameterType element:Namespace .

element:MessageEnd xmi:type uml:Class ;
	xmi:id "MessageEnd" ;
	uml-model:name "MessageEnd" ;
	rdfs:comment "'MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a Message."@en ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:MessageEnd-message ;
	uml-model:operation element:MessageEnd-oppositeEnd, element:MessageEnd-isSend, element:MessageEnd-isReceive, element:MessageEnd-enclosingFragment .

property:MessageEnd-message rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "MessageEnd-message" ;
	rdfs:label "MessageEnd-message" ;
	uml-model:name "message" ;
	uml-model:association uml-element:A_message_messageEnd ;
	rdfs:range element:Message ;
	rdfs:comment "'References a Message."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:MessageEnd-oppositeEnd rdfs:comment "'This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd."@en ;
	uml-model:rule element:MessageEnd-oppositeEnd-spec, element:MessageEnd-oppositeEnd-pre ;
	uml-model:returns element:MessageEnd-oppositeEnd-result .

element:MessageEnd-oppositeEnd-spec rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-oppositeEnd-spec-_specification .

element:MessageEnd-oppositeEnd-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (message->asSet().messageEnd->asSet()->excluding(self))"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-oppositeEnd-pre rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-oppositeEnd-pre-_specification .

element:MessageEnd-oppositeEnd-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "message->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-oppositeEnd-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:MessageEnd ;
	uml-model:upperValue element:MessageEnd-oppositeEnd-result-_upperValue .

element:MessageEnd-oppositeEnd-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:MessageEnd-isSend rdfs:comment "'This query returns value true if this MessageEnd is a sendEvent."@en ;
	uml-model:rule element:MessageEnd-isSend-pre, element:MessageEnd-isSend-spec ;
	uml-model:returns element:MessageEnd-isSend-result .

element:MessageEnd-isSend-pre rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-isSend-pre-_specification .

element:MessageEnd-isSend-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "message->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-isSend-spec rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-isSend-spec-_specification .

element:MessageEnd-isSend-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (message.sendEvent->asSet()->includes(self))"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-isSend-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MessageEnd-isReceive rdfs:comment "'This query returns value true if this MessageEnd is a receiveEvent."@en ;
	uml-model:rule element:MessageEnd-isReceive-pre, element:MessageEnd-isReceive-spec ;
	uml-model:returns element:MessageEnd-isReceive-result .

element:MessageEnd-isReceive-pre rdfs:comment "'&lt;p&gt;message-&amp;gt;notEmpty()&lt;/p&gt;"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-isReceive-pre-_specification .

element:MessageEnd-isReceive-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "message->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-isReceive-spec rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-isReceive-spec-_specification .

element:MessageEnd-isReceive-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (message.receiveEvent->asSet()->includes(self))"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-isReceive-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MessageEnd-enclosingFragment rdfs:comment "'This query returns a set including the enclosing InteractionFragment this MessageEnd is enclosed within."@en ;
	uml-model:rule element:MessageEnd-enclosingFragment-spec ;
	uml-model:returns element:MessageEnd-enclosingFragment-result .

element:MessageEnd-enclosingFragment-spec rdf:type uml:Constraint ;
	uml-model:specification element:MessageEnd-enclosingFragment-spec-_specification .

element:MessageEnd-enclosingFragment-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if self->select(oclIsKindOf(Gate))->notEmpty() \nthen -- it is a Gate\nlet endGate : Gate = \n  self->select(oclIsKindOf(Gate)).oclAsType(Gate)->asOrderedSet()->first()\n  in\n  if endGate.isOutsideCF() \n  then endGate.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(endGate.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet())\n  else if endGate.isInsideCF() \n    then endGate.combinedFragment.oclAsType(InteractionFragment)->asSet()\n    else if endGate.isFormal() \n      then endGate.interaction.oclAsType(InteractionFragment)->asSet()\n      else if endGate.isActual() \n        then endGate.interactionUse.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(endGate.interactionUse.enclosingOperand.oclAsType(InteractionFragment)->asSet())\n        else null\n        endif\n      endif\n    endif\n  endif\nelse -- it is a MessageOccurrenceSpecification\nlet endMOS : MessageOccurrenceSpecification  = \n  self->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() \n  in\n  if endMOS.enclosingInteraction->notEmpty() \n  then endMOS.enclosingInteraction.oclAsType(InteractionFragment)->asSet()\n  else endMOS.enclosingOperand.oclAsType(InteractionFragment)->asSet()\n  endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:MessageEnd-enclosingFragment-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:InteractionFragment ;
	uml-model:upperValue element:MessageEnd-enclosingFragment-result-_upperValue .

element:MessageEnd-enclosingFragment-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:MessageOccurrenceSpecification xmi:type uml:Class ;
	xmi:id "MessageOccurrenceSpecification" ;
	uml-model:name "MessageOccurrenceSpecification" ;
	rdfs:comment "'A MessageOccurrenceSpecification specifies the occurrence of Message events, such as sending and receiving of Signals or invoking or receiving of Operation calls. A MessageOccurrenceSpecification is a kind of MessageEnd. Messages are generated either by synchronous Operation calls or asynchronous Signal sends. They are received by the execution of corresponding AcceptEventActions."@en ;
	rdfs:subClassOf element:MessageEnd, element:OccurrenceSpecification .

element:OccurrenceSpecification xmi:type uml:Class ;
	xmi:id "OccurrenceSpecification" ;
	uml-model:name "OccurrenceSpecification" ;
	rdfs:comment "'An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions."@en ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:OccurrenceSpecification-covered, property:OccurrenceSpecification-toAfter, property:OccurrenceSpecification-toBefore .

property:OccurrenceSpecification-covered rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OccurrenceSpecification-covered" ;
	rdfs:label "OccurrenceSpecification-covered" ;
	uml-model:name "covered" ;
	uml-model:association uml-element:A_covered_events ;
	rdfs:range element:Lifeline ;
	rdfs:comment "'References the Lifeline on which the OccurrenceSpecification appears."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:OccurrenceSpecification-toAfter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OccurrenceSpecification-toAfter" ;
	rdfs:label "OccurrenceSpecification-toAfter" ;
	uml-model:name "toAfter" ;
	uml-model:association uml-element:A_before_toAfter ;
	rdfs:range element:GeneralOrdering ;
	rdfs:comment "'References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OccurrenceSpecification-toBefore rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OccurrenceSpecification-toBefore" ;
	rdfs:label "OccurrenceSpecification-toBefore" ;
	uml-model:name "toBefore" ;
	uml-model:association uml-element:A_toBefore_after ;
	rdfs:range element:GeneralOrdering ;
	rdfs:comment "'References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:PartDecomposition xmi:type uml:Class ;
	xmi:id "PartDecomposition" ;
	uml-model:name "PartDecomposition" ;
	rdfs:comment "'A PartDecomposition is a description of the internal Interactions of one Lifeline relative to an Interaction."@en ;
	uml-model:rule element:PartDecomposition-commutativity_of_decomposition, element:PartDecomposition-assume, element:PartDecomposition-parts_of_internal_structures ;
	rdfs:subClassOf element:InteractionUse .

element:PartDecomposition-commutativity_of_decomposition rdfs:comment "'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an InteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition.)"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:PartDecomposition-commutativity_of_decomposition-_specification .

element:PartDecomposition-commutativity_of_decomposition-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:PartDecomposition-assume rdfs:comment "'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order. i) CombinedFragment covering L are matched with an extra-global CombinedFragment in D. ii) An InteractionUse covering L is matched with a global (i.e., covering all Lifelines) InteractionUse in D. iii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:PartDecomposition-assume-_specification .

element:PartDecomposition-assume-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:PartDecomposition-parts_of_internal_structures rdfs:comment "'PartDecompositions apply only to Parts that are Parts of Internal Structures not to Parts of Collaborations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:PartDecomposition-parts_of_internal_structures-_specification .

element:PartDecomposition-parts_of_internal_structures-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:StateInvariant xmi:type uml:Class ;
	xmi:id "StateInvariant" ;
	uml-model:name "StateInvariant" ;
	rdfs:comment "'A StateInvariant is a runtime constraint on the participants of the Interaction. It may be used to specify a variety of different kinds of Constraints, such as values of Attributes or Variables, internal or external States, and so on. A StateInvariant is an InteractionFragment and it is placed on a Lifeline."@en ;
	rdfs:subClassOf element:InteractionFragment ;
	uml-model:ownedAttribute property:StateInvariant-covered, property:StateInvariant-invariant .

property:StateInvariant-covered rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateInvariant-covered" ;
	rdfs:label "StateInvariant-covered" ;
	uml-model:name "covered" ;
	uml-model:association uml-element:A_covered_stateInvariant ;
	rdfs:range element:Lifeline ;
	rdfs:comment "'References the Lifeline on which the StateInvariant appears."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:StateInvariant-invariant rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StateInvariant-invariant" ;
	rdfs:label "StateInvariant-invariant" ;
	uml-model:name "invariant" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_invariant_stateInvariant ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Constraint that should hold at runtime for this StateInvariant."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:InteractionOperatorKind xmi:type uml:Enumeration ;
	xmi:id "InteractionOperatorKind" ;
	uml-model:name "InteractionOperatorKind" ;
	rdfs:comment "'InteractionOperatorKind is an enumeration designating the different kinds of operators of CombinedFragments. The InteractionOperand defines the type of operator of a CombinedFragment."@en .

element:MessageKind xmi:type uml:Enumeration ;
	xmi:id "MessageKind" ;
	uml-model:name "MessageKind" ;
	rdfs:comment "'This is an enumerated type that identifies the type of Message."@en .

element:MessageSort xmi:type uml:Enumeration ;
	xmi:id "MessageSort" ;
	uml-model:name "MessageSort" ;
	rdfs:comment "'This is an enumerated type that identifies the type of communication action that was used to generate the Message."@en .

element:A_invariant_stateInvariant xmi:type uml:Association ;
	xmi:id "A_invariant_stateInvariant" ;
	uml-model:name "A_invariant_stateInvariant" .

element:A_invariant_stateInvariant-stateInvariant xmi:type uml:Property ;
	xmi:id "A_invariant_stateInvariant-stateInvariant" ;
	uml-model:name "stateInvariant" ;
	uml-model:type "StateInvariant" ;
	uml-model:association uml-element:A_invariant_stateInvariant ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_covered_stateInvariant xmi:type uml:Association ;
	xmi:id "A_covered_stateInvariant" ;
	uml-model:name "A_covered_stateInvariant" .

element:A_covered_stateInvariant-stateInvariant xmi:type uml:Property ;
	xmi:id "A_covered_stateInvariant-stateInvariant" ;
	uml-model:name "stateInvariant" ;
	uml-model:type "StateInvariant" ;
	uml-model:association uml-element:A_covered_stateInvariant ;
	uml-model:subsettedProperty uml-element:Lifeline-coveredBy .

element:A_covered_events xmi:type uml:Association ;
	xmi:id "A_covered_events" ;
	uml-model:name "A_covered_events" .

element:A_covered_events-events xmi:type uml:Property ;
	xmi:id "A_covered_events-events" ;
	uml-model:name "events" ;
	uml-model:type "OccurrenceSpecification" ;
	uml-model:association uml-element:A_covered_events ;
	uml-model:subsettedProperty uml-element:Lifeline-coveredBy .

element:A_toBefore_after xmi:type uml:Association ;
	xmi:id "A_toBefore_after" ;
	uml-model:name "A_toBefore_after" .

element:A_message_messageEnd xmi:type uml:Association ;
	xmi:id "A_message_messageEnd" ;
	uml-model:name "A_message_messageEnd" .

element:A_message_messageEnd-messageEnd xmi:type uml:Property ;
	xmi:id "A_message_messageEnd-messageEnd" ;
	uml-model:name "messageEnd" ;
	uml-model:type "MessageEnd" ;
	uml-model:association uml-element:A_message_messageEnd .

element:A_signature_message xmi:type uml:Association ;
	xmi:id "A_signature_message" ;
	uml-model:name "A_signature_message" .

element:A_signature_message-message xmi:type uml:Property ;
	xmi:id "A_signature_message-message" ;
	uml-model:name "message" ;
	uml-model:type "Message" ;
	uml-model:association uml-element:A_signature_message .

element:A_connector_message xmi:type uml:Association ;
	xmi:id "A_connector_message" ;
	uml-model:name "A_connector_message" .

element:A_connector_message-message xmi:type uml:Property ;
	xmi:id "A_connector_message-message" ;
	uml-model:name "message" ;
	uml-model:type "Message" ;
	uml-model:association uml-element:A_connector_message .

element:A_receiveEvent_endMessage xmi:type uml:Association ;
	xmi:id "A_receiveEvent_endMessage" ;
	uml-model:name "A_receiveEvent_endMessage" .

element:A_receiveEvent_endMessage-endMessage xmi:type uml:Property ;
	xmi:id "A_receiveEvent_endMessage-endMessage" ;
	uml-model:name "endMessage" ;
	uml-model:type "Message" ;
	uml-model:association uml-element:A_receiveEvent_endMessage ;
	uml-model:subsettedProperty uml-element:MessageEnd-message .

element:A_sendEvent_endMessage xmi:type uml:Association ;
	xmi:id "A_sendEvent_endMessage" ;
	uml-model:name "A_sendEvent_endMessage" .

element:A_sendEvent_endMessage-endMessage xmi:type uml:Property ;
	xmi:id "A_sendEvent_endMessage-endMessage" ;
	uml-model:name "endMessage" ;
	uml-model:type "Message" ;
	uml-model:association uml-element:A_sendEvent_endMessage ;
	uml-model:subsettedProperty uml-element:MessageEnd-message .

element:A_argument_message xmi:type uml:Association ;
	xmi:id "A_argument_message" ;
	uml-model:name "A_argument_message" .

element:A_argument_message-message xmi:type uml:Property ;
	xmi:id "A_argument_message-message" ;
	uml-model:name "message" ;
	uml-model:type "Message" ;
	uml-model:association uml-element:A_argument_message ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_selector_lifeline xmi:type uml:Association ;
	xmi:id "A_selector_lifeline" ;
	uml-model:name "A_selector_lifeline" .

element:A_selector_lifeline-lifeline xmi:type uml:Property ;
	xmi:id "A_selector_lifeline-lifeline" ;
	uml-model:name "lifeline" ;
	uml-model:type "Lifeline" ;
	uml-model:association uml-element:A_selector_lifeline ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_decomposedAs_lifeline xmi:type uml:Association ;
	xmi:id "A_decomposedAs_lifeline" ;
	uml-model:name "A_decomposedAs_lifeline" .

element:A_decomposedAs_lifeline-lifeline xmi:type uml:Property ;
	xmi:id "A_decomposedAs_lifeline-lifeline" ;
	uml-model:name "lifeline" ;
	uml-model:type "Lifeline" ;
	uml-model:association uml-element:A_decomposedAs_lifeline .

element:A_represents_lifeline xmi:type uml:Association ;
	xmi:id "A_represents_lifeline" ;
	uml-model:name "A_represents_lifeline" ;
	rdfs:comment "'If a Part has multiplicity, multiple lifelines might be used to show it."@en .

element:A_represents_lifeline-lifeline xmi:type uml:Property ;
	xmi:id "A_represents_lifeline-lifeline" ;
	uml-model:name "lifeline" ;
	uml-model:type "Lifeline" ;
	uml-model:association uml-element:A_represents_lifeline .

element:A_returnValueRecipient_interactionUse xmi:type uml:Association ;
	xmi:id "A_returnValueRecipient_interactionUse" ;
	uml-model:name "A_returnValueRecipient_interactionUse" .

element:A_returnValueRecipient_interactionUse-interactionUse xmi:type uml:Property ;
	xmi:id "A_returnValueRecipient_interactionUse-interactionUse" ;
	uml-model:name "interactionUse" ;
	uml-model:type "InteractionUse" ;
	uml-model:association uml-element:A_returnValueRecipient_interactionUse .

element:A_refersTo_interactionUse xmi:type uml:Association ;
	xmi:id "A_refersTo_interactionUse" ;
	uml-model:name "A_refersTo_interactionUse" .

element:A_refersTo_interactionUse-interactionUse xmi:type uml:Property ;
	xmi:id "A_refersTo_interactionUse-interactionUse" ;
	uml-model:name "interactionUse" ;
	uml-model:type "InteractionUse" ;
	uml-model:association uml-element:A_refersTo_interactionUse .

element:A_returnValue_interactionUse xmi:type uml:Association ;
	xmi:id "A_returnValue_interactionUse" ;
	uml-model:name "A_returnValue_interactionUse" .

element:A_returnValue_interactionUse-interactionUse xmi:type uml:Property ;
	xmi:id "A_returnValue_interactionUse-interactionUse" ;
	uml-model:name "interactionUse" ;
	uml-model:type "InteractionUse" ;
	uml-model:association uml-element:A_returnValue_interactionUse ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_argument_interactionUse xmi:type uml:Association ;
	xmi:id "A_argument_interactionUse" ;
	uml-model:name "A_argument_interactionUse" .

element:A_argument_interactionUse-interactionUse xmi:type uml:Property ;
	xmi:id "A_argument_interactionUse-interactionUse" ;
	uml-model:name "interactionUse" ;
	uml-model:type "InteractionUse" ;
	uml-model:association uml-element:A_argument_interactionUse ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_actualGate_interactionUse xmi:type uml:Association ;
	xmi:id "A_actualGate_interactionUse" ;
	uml-model:name "A_actualGate_interactionUse" .

element:A_actualGate_interactionUse-interactionUse xmi:type uml:Property ;
	xmi:id "A_actualGate_interactionUse-interactionUse" ;
	uml-model:name "interactionUse" ;
	uml-model:type "InteractionUse" ;
	uml-model:association uml-element:A_actualGate_interactionUse ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_fragment_enclosingOperand xmi:type uml:Association ;
	xmi:id "A_fragment_enclosingOperand" ;
	uml-model:name "A_fragment_enclosingOperand" .

element:A_guard_interactionOperand xmi:type uml:Association ;
	xmi:id "A_guard_interactionOperand" ;
	uml-model:name "A_guard_interactionOperand" .

element:A_guard_interactionOperand-interactionOperand xmi:type uml:Property ;
	xmi:id "A_guard_interactionOperand-interactionOperand" ;
	uml-model:name "interactionOperand" ;
	uml-model:type "InteractionOperand" ;
	uml-model:association uml-element:A_guard_interactionOperand ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_generalOrdering_interactionFragment xmi:type uml:Association ;
	xmi:id "A_generalOrdering_interactionFragment" ;
	uml-model:name "A_generalOrdering_interactionFragment" .

element:A_generalOrdering_interactionFragment-interactionFragment xmi:type uml:Property ;
	xmi:id "A_generalOrdering_interactionFragment-interactionFragment" ;
	uml-model:name "interactionFragment" ;
	uml-model:type "InteractionFragment" ;
	uml-model:association uml-element:A_generalOrdering_interactionFragment ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_covered_coveredBy xmi:type uml:Association ;
	xmi:id "A_covered_coveredBy" ;
	uml-model:name "A_covered_coveredBy" ;
	rdfs:comment "'This association shows the lifelines that make up an interaction. A lifeline may be part of more than one interaction use."@en .

element:A_minint_interactionConstraint xmi:type uml:Association ;
	xmi:id "A_minint_interactionConstraint" ;
	uml-model:name "A_minint_interactionConstraint" .

element:A_minint_interactionConstraint-interactionConstraint xmi:type uml:Property ;
	xmi:id "A_minint_interactionConstraint-interactionConstraint" ;
	uml-model:name "interactionConstraint" ;
	uml-model:type "InteractionConstraint" ;
	uml-model:association uml-element:A_minint_interactionConstraint ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_maxint_interactionConstraint xmi:type uml:Association ;
	xmi:id "A_maxint_interactionConstraint" ;
	uml-model:name "A_maxint_interactionConstraint" .

element:A_maxint_interactionConstraint-interactionConstraint xmi:type uml:Property ;
	xmi:id "A_maxint_interactionConstraint-interactionConstraint" ;
	uml-model:name "interactionConstraint" ;
	uml-model:type "InteractionConstraint" ;
	uml-model:association uml-element:A_maxint_interactionConstraint ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_action_interaction xmi:type uml:Association ;
	xmi:id "A_action_interaction" ;
	uml-model:name "A_action_interaction" .

element:A_action_interaction-interaction xmi:type uml:Property ;
	xmi:id "A_action_interaction-interaction" ;
	uml-model:name "interaction" ;
	uml-model:type "Interaction" ;
	uml-model:association uml-element:A_action_interaction ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_formalGate_interaction xmi:type uml:Association ;
	xmi:id "A_formalGate_interaction" ;
	uml-model:name "A_formalGate_interaction" .

element:A_formalGate_interaction-interaction xmi:type uml:Property ;
	xmi:id "A_formalGate_interaction-interaction" ;
	uml-model:name "interaction" ;
	uml-model:type "Interaction" ;
	uml-model:association uml-element:A_formalGate_interaction ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_lifeline_interaction xmi:type uml:Association ;
	xmi:id "A_lifeline_interaction" ;
	uml-model:name "A_lifeline_interaction" .

element:A_fragment_enclosingInteraction xmi:type uml:Association ;
	xmi:id "A_fragment_enclosingInteraction" ;
	uml-model:name "A_fragment_enclosingInteraction" .

element:A_message_interaction xmi:type uml:Association ;
	xmi:id "A_message_interaction" ;
	uml-model:name "A_message_interaction" .

element:A_before_toAfter xmi:type uml:Association ;
	xmi:id "A_before_toAfter" ;
	uml-model:name "A_before_toAfter" .

element:A_finish_executionSpecification xmi:type uml:Association ;
	xmi:id "A_finish_executionSpecification" ;
	uml-model:name "A_finish_executionSpecification" ;
	rdfs:comment "'The event shows the time point at which the action completes execution."@en .

element:A_finish_executionSpecification-executionSpecification xmi:type uml:Property ;
	xmi:id "A_finish_executionSpecification-executionSpecification" ;
	uml-model:name "executionSpecification" ;
	uml-model:type "ExecutionSpecification" ;
	uml-model:association uml-element:A_finish_executionSpecification .

element:A_start_executionSpecification xmi:type uml:Association ;
	xmi:id "A_start_executionSpecification" ;
	uml-model:name "A_start_executionSpecification" ;
	rdfs:comment "'The event shows the time point at which the action begins execution."@en .

element:A_start_executionSpecification-executionSpecification xmi:type uml:Property ;
	xmi:id "A_start_executionSpecification-executionSpecification" ;
	uml-model:name "executionSpecification" ;
	uml-model:type "ExecutionSpecification" ;
	uml-model:association uml-element:A_start_executionSpecification .

element:A_execution_executionOccurrenceSpecification xmi:type uml:Association ;
	xmi:id "A_execution_executionOccurrenceSpecification" ;
	uml-model:name "A_execution_executionOccurrenceSpecification" .

element:A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification xmi:type uml:Property ;
	xmi:id "A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification" ;
	uml-model:name "executionOccurrenceSpecification" ;
	uml-model:type "ExecutionOccurrenceSpecification" ;
	uml-model:association uml-element:A_execution_executionOccurrenceSpecification .

element:A_message_considerIgnoreFragment xmi:type uml:Association ;
	xmi:id "A_message_considerIgnoreFragment" ;
	uml-model:name "A_message_considerIgnoreFragment" .

element:A_message_considerIgnoreFragment-considerIgnoreFragment xmi:type uml:Property ;
	xmi:id "A_message_considerIgnoreFragment-considerIgnoreFragment" ;
	uml-model:name "considerIgnoreFragment" ;
	uml-model:type "ConsiderIgnoreFragment" ;
	uml-model:association uml-element:A_message_considerIgnoreFragment .

element:A_cfragmentGate_combinedFragment xmi:type uml:Association ;
	xmi:id "A_cfragmentGate_combinedFragment" ;
	uml-model:name "A_cfragmentGate_combinedFragment" .

element:A_cfragmentGate_combinedFragment-combinedFragment xmi:type uml:Property ;
	xmi:id "A_cfragmentGate_combinedFragment-combinedFragment" ;
	uml-model:name "combinedFragment" ;
	uml-model:type "CombinedFragment" ;
	uml-model:association uml-element:A_cfragmentGate_combinedFragment ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_operand_combinedFragment xmi:type uml:Association ;
	xmi:id "A_operand_combinedFragment" ;
	uml-model:name "A_operand_combinedFragment" .

element:A_operand_combinedFragment-combinedFragment xmi:type uml:Property ;
	xmi:id "A_operand_combinedFragment-combinedFragment" ;
	uml-model:name "combinedFragment" ;
	uml-model:type "CombinedFragment" ;
	uml-model:association uml-element:A_operand_combinedFragment ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_behavior_behaviorExecutionSpecification xmi:type uml:Association ;
	xmi:id "A_behavior_behaviorExecutionSpecification" ;
	uml-model:name "A_behavior_behaviorExecutionSpecification" .

element:A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification xmi:type uml:Property ;
	xmi:id "A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification" ;
	uml-model:name "behaviorExecutionSpecification" ;
	uml-model:type "BehaviorExecutionSpecification" ;
	uml-model:association uml-element:A_behavior_behaviorExecutionSpecification .

element:A_action_actionExecutionSpecification xmi:type uml:Association ;
	xmi:id "A_action_actionExecutionSpecification" ;
	uml-model:name "A_action_actionExecutionSpecification" .

element:A_action_actionExecutionSpecification-actionExecutionSpecification xmi:type uml:Property ;
	xmi:id "A_action_actionExecutionSpecification-actionExecutionSpecification" ;
	uml-model:name "actionExecutionSpecification" ;
	uml-model:type "ActionExecutionSpecification" ;
	uml-model:association uml-element:A_action_actionExecutionSpecification .

element:InformationFlows xmi:type uml:Package ;
	xmi:id "InformationFlows" ;
	uml-model:name "InformationFlows" .

uml-import:InformationFlows-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.0" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:UseCases .

uml-import:InformationFlows-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.1" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:Deployments .

uml-import:InformationFlows-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.2" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:InformationFlows-_packageImport.3 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.3" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:Classification .

uml-import:InformationFlows-_packageImport.4 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.4" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:SimpleClassifiers .

uml-import:InformationFlows-_packageImport.5 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.5" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:Packages .

uml-import:InformationFlows-_packageImport.6 xmi:type uml:PackageImport ;
	xmi:id "InformationFlows-_packageImport.6" ;
	uml-model:packagedElement element:InformationFlows ;
	uml-model:importedPackage element:Activities .

element:InformationFlow xmi:type uml:Class ;
	xmi:id "InformationFlow" ;
	uml-model:name "InformationFlow" ;
	rdfs:comment "'InformationFlows describe circulation of information through a system in a general manner. They do not specify the nature of the information, mechanisms by which it is conveyed, sequences of exchange or any control conditions. During more detailed modeling, representation and realization links may be added to specify which model elements implement an InformationFlow and to show how information is conveyed.  InformationFlows require some kind of “information channel” for unidirectional transmission of information items from sources to targets.  They specify the information channel’s realizations, if any, and identify the information that flows along them.  Information moving along the information channel may be represented by abstract InformationItems and by concrete Classifiers."@en ;
	uml-model:rule element:InformationFlow-must_conform, element:InformationFlow-sources_and_targets_kind, element:InformationFlow-convey_classifiers ;
	rdfs:subClassOf element:DirectedRelationship, element:PackageableElement ;
	uml-model:ownedAttribute property:InformationFlow-conveyed, property:InformationFlow-informationSource, property:InformationFlow-informationTarget, property:InformationFlow-realization, property:InformationFlow-realizingActivityEdge, property:InformationFlow-realizingConnector, property:InformationFlow-realizingMessage .

element:InformationFlow-must_conform rdfs:comment "'The sources and targets of the information flow must conform to the sources and targets or conversely the targets and sources of the realization relationships."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationFlow-must_conform-_specification .

element:InformationFlow-must_conform-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:InformationFlow-sources_and_targets_kind rdfs:comment "'The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition,&#xD;&#xA;Behavior and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationFlow-sources_and_targets_kind-_specification .

element:InformationFlow-sources_and_targets_kind-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(self.informationSource->forAll( sis |\n  oclIsKindOf(Actor) or oclIsKindOf(Node) or oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or \n  oclIsKindOf(Class) or oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or \n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or oclIsKindOf(ActivityPartition) or \n  (oclIsKindOf(InstanceSpecification) and not sis.oclAsType(InstanceSpecification).classifier->exists(oclIsKindOf(Relationship))))) \n\nand\n\n(self.informationTarget->forAll( sit | \n  oclIsKindOf(Actor) or oclIsKindOf(Node) or oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or \n  oclIsKindOf(Class) or oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or \n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or oclIsKindOf(ActivityPartition) or \n(oclIsKindOf(InstanceSpecification) and not sit.oclAsType(InstanceSpecification).classifier->exists(oclIsKindOf(Relationship)))))"^^<http://www.omg.org/spec/OCL> .

element:InformationFlow-convey_classifiers rdfs:comment "'An information flow can only convey classifiers that are allowed to represent an information item."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationFlow-convey_classifiers-_specification .

element:InformationFlow-convey_classifiers-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.conveyed->forAll(oclIsKindOf(Class) or oclIsKindOf(Interface)\n  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))"^^<http://www.omg.org/spec/OCL> .

property:InformationFlow-conveyed rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-conveyed" ;
	rdfs:label "InformationFlow-conveyed" ;
	uml-model:name "conveyed" ;
	uml-model:association uml-element:A_conveyed_conveyingFlow ;
	rdfs:range element:Classifier ;
	rdfs:comment "'Specifies the information items that may circulate on this information flow."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-informationSource rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-informationSource" ;
	rdfs:label "InformationFlow-informationSource" ;
	uml-model:name "informationSource" ;
	uml-model:association uml-element:A_informationSource_informationFlow ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source ;
	rdfs:comment "'Defines from which source the conveyed InformationItems are initiated."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-informationTarget rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-informationTarget" ;
	rdfs:label "InformationFlow-informationTarget" ;
	uml-model:name "informationTarget" ;
	uml-model:association uml-element:A_informationTarget_informationFlow ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'Defines to which target the conveyed InformationItems are directed."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-realization rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-realization" ;
	rdfs:label "InformationFlow-realization" ;
	uml-model:name "realization" ;
	uml-model:association uml-element:A_realization_abstraction_flow ;
	rdfs:range element:Relationship ;
	rdfs:comment "'Determines which Relationship will realize the specified flow."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-realizingActivityEdge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-realizingActivityEdge" ;
	rdfs:label "InformationFlow-realizingActivityEdge" ;
	uml-model:name "realizingActivityEdge" ;
	uml-model:association uml-element:A_realizingActivityEdge_informationFlow ;
	rdfs:range element:ActivityEdge ;
	rdfs:comment "'Determines which ActivityEdges will realize the specified flow."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-realizingConnector rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-realizingConnector" ;
	rdfs:label "InformationFlow-realizingConnector" ;
	uml-model:name "realizingConnector" ;
	uml-model:association uml-element:A_realizingConnector_informationFlow ;
	rdfs:range element:Connector ;
	rdfs:comment "'Determines which Connectors will realize the specified flow."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InformationFlow-realizingMessage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationFlow-realizingMessage" ;
	rdfs:label "InformationFlow-realizingMessage" ;
	uml-model:name "realizingMessage" ;
	uml-model:association uml-element:A_realizingMessage_informationFlow ;
	rdfs:range element:Message ;
	rdfs:comment "'Determines which Messages will realize the specified flow."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:InformationItem xmi:type uml:Class ;
	xmi:id "InformationItem" ;
	uml-model:name "InformationItem" ;
	rdfs:comment "'InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not elaborate details of the transferred information.  Details of transferred information are the province of other Classifiers that may ultimately define InformationItems.  Consequently, InformationItems cannot be instantiated and do not themselves have features, generalizations, or associations. An important use of InformationItems is to represent information during early design stages, possibly before the detailed modeling decisions that will ultimately define them have been made. Another purpose of InformationItems is to abstract portions of complex models in less precise, but perhaps more general and communicable, ways. "@en ;
	uml-model:rule element:InformationItem-sources_and_targets, element:InformationItem-has_no, element:InformationItem-not_instantiable ;
	rdfs:subClassOf element:Classifier ;
	uml-model:ownedAttribute property:InformationItem-represented .

element:InformationItem-sources_and_targets rdfs:comment "'The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any. The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationItem-sources_and_targets-_specification .

element:InformationItem-sources_and_targets-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(self.represented->select(oclIsKindOf(InformationItem))->forAll(p |\n  p.conveyingFlow.source->forAll(q | self.conveyingFlow.source->includes(q)) and\n    p.conveyingFlow.target->forAll(q | self.conveyingFlow.target->includes(q)))) and\n      (self.represented->forAll(oclIsKindOf(Class) or oclIsKindOf(Interface) or\n        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))"^^<http://www.omg.org/spec/OCL> .

element:InformationItem-has_no rdfs:comment "'An informationItem has no feature, no generalization, and no associations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationItem-has_no-_specification .

element:InformationItem-has_no-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.generalization->isEmpty() and self.feature->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:InformationItem-not_instantiable rdfs:comment "'It is not instantiable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InformationItem-not_instantiable-_specification .

element:InformationItem-not_instantiable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isAbstract"^^<http://www.omg.org/spec/OCL> .

property:InformationItem-represented rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InformationItem-represented" ;
	rdfs:label "InformationItem-represented" ;
	uml-model:name "represented" ;
	uml-model:association uml-element:A_represented_representation ;
	rdfs:range element:Classifier ;
	rdfs:comment "'Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:A_represented_representation xmi:type uml:Association ;
	xmi:id "A_represented_representation" ;
	uml-model:name "A_represented_representation" .

element:A_represented_representation-representation xmi:type uml:Property ;
	xmi:id "A_represented_representation-representation" ;
	uml-model:name "representation" ;
	uml-model:type "InformationItem" ;
	uml-model:association uml-element:A_represented_representation .

element:A_conveyed_conveyingFlow xmi:type uml:Association ;
	xmi:id "A_conveyed_conveyingFlow" ;
	uml-model:name "A_conveyed_conveyingFlow" .

element:A_conveyed_conveyingFlow-conveyingFlow xmi:type uml:Property ;
	xmi:id "A_conveyed_conveyingFlow-conveyingFlow" ;
	uml-model:name "conveyingFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_conveyed_conveyingFlow .

element:A_realizingActivityEdge_informationFlow xmi:type uml:Association ;
	xmi:id "A_realizingActivityEdge_informationFlow" ;
	uml-model:name "A_realizingActivityEdge_informationFlow" .

element:A_realizingActivityEdge_informationFlow-informationFlow xmi:type uml:Property ;
	xmi:id "A_realizingActivityEdge_informationFlow-informationFlow" ;
	uml-model:name "informationFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_realizingActivityEdge_informationFlow .

element:A_realizingMessage_informationFlow xmi:type uml:Association ;
	xmi:id "A_realizingMessage_informationFlow" ;
	uml-model:name "A_realizingMessage_informationFlow" .

element:A_realizingMessage_informationFlow-informationFlow xmi:type uml:Property ;
	xmi:id "A_realizingMessage_informationFlow-informationFlow" ;
	uml-model:name "informationFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_realizingMessage_informationFlow .

element:A_informationSource_informationFlow xmi:type uml:Association ;
	xmi:id "A_informationSource_informationFlow" ;
	uml-model:name "A_informationSource_informationFlow" .

element:A_informationSource_informationFlow-informationFlow xmi:type uml:Property ;
	xmi:id "A_informationSource_informationFlow-informationFlow" ;
	uml-model:name "informationFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_informationSource_informationFlow ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship .

element:A_realization_abstraction_flow xmi:type uml:Association ;
	xmi:id "A_realization_abstraction_flow" ;
	uml-model:name "A_realization_abstraction_flow" .

element:A_realization_abstraction_flow-abstraction xmi:type uml:Property ;
	xmi:id "A_realization_abstraction_flow-abstraction" ;
	uml-model:name "abstraction" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_realization_abstraction_flow .

element:A_realizingConnector_informationFlow xmi:type uml:Association ;
	xmi:id "A_realizingConnector_informationFlow" ;
	uml-model:name "A_realizingConnector_informationFlow" .

element:A_realizingConnector_informationFlow-informationFlow xmi:type uml:Property ;
	xmi:id "A_realizingConnector_informationFlow-informationFlow" ;
	uml-model:name "informationFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_realizingConnector_informationFlow .

element:A_informationTarget_informationFlow xmi:type uml:Association ;
	xmi:id "A_informationTarget_informationFlow" ;
	uml-model:name "A_informationTarget_informationFlow" .

element:A_informationTarget_informationFlow-informationFlow xmi:type uml:Property ;
	xmi:id "A_informationTarget_informationFlow-informationFlow" ;
	uml-model:name "informationFlow" ;
	uml-model:type "InformationFlow" ;
	uml-model:association uml-element:A_informationTarget_informationFlow ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:Deployments xmi:type uml:Package ;
	xmi:id "Deployments" ;
	uml-model:name "Deployments" .

uml-import:Deployments-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Deployments-_packageImport.0" ;
	uml-model:packagedElement element:Deployments ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:Deployments-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Deployments-_packageImport.1" ;
	uml-model:packagedElement element:Deployments ;
	uml-model:importedPackage element:CommonStructure .

element:Artifact xmi:type uml:Class ;
	xmi:id "Artifact" ;
	uml-model:name "Artifact" ;
	rdfs:comment "'An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.&#xA;An artifact is the source of a deployment to a node."@en ;
	rdfs:subClassOf element:Classifier, element:DeployedArtifact ;
	uml-model:ownedAttribute property:Artifact-fileName, property:Artifact-manifestation, property:Artifact-nestedArtifact, property:Artifact-ownedAttribute, property:Artifact-ownedOperation .

property:Artifact-fileName rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Artifact-fileName" ;
	rdfs:label "Artifact-fileName" ;
	uml-model:name "fileName" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Artifact-manifestation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Artifact-manifestation" ;
	rdfs:label "Artifact-manifestation" ;
	uml-model:name "manifestation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_manifestation_artifact ;
	rdfs:range element:Manifestation ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:NamedElement-clientDependency ;
	rdfs:comment "'The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Artifact-nestedArtifact rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Artifact-nestedArtifact" ;
	rdfs:label "Artifact-nestedArtifact" ;
	uml-model:name "nestedArtifact" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nestedArtifact_artifact ;
	rdfs:range element:Artifact ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Artifacts that are defined (nested) within the Artifact. The association is a specialization of the ownedMember association from Namespace to NamedElement."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Artifact-ownedAttribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Artifact-ownedAttribute" ;
	rdfs:label "Artifact-ownedAttribute" ;
	uml-model:name "ownedAttribute" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedAttribute_artifact ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Classifier-attribute, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The attributes or association ends defined for the Artifact. The association is a specialization of the ownedMember association."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Artifact-ownedOperation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Artifact-ownedOperation" ;
	rdfs:label "Artifact-ownedOperation" ;
	uml-model:name "ownedOperation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedOperation_artifact ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature, uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Operations defined for the Artifact. The association is a specialization of the ownedMember association."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:CommunicationPath xmi:type uml:Class ;
	xmi:id "CommunicationPath" ;
	uml-model:name "CommunicationPath" ;
	rdfs:comment "'A communication path is an association between two deployment targets, through which they are able to exchange signals and messages."@en ;
	uml-model:rule element:CommunicationPath-association_ends ;
	rdfs:subClassOf element:Association .

element:CommunicationPath-association_ends rdfs:comment "'The association ends of a CommunicationPath are typed by DeploymentTargets."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CommunicationPath-association_ends-_specification .

element:CommunicationPath-association_ends-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "endType->forAll (oclIsKindOf(DeploymentTarget))"^^<http://www.omg.org/spec/OCL> .

element:DeployedArtifact xmi:type uml:Class ;
	xmi:id "DeployedArtifact" ;
	uml-model:name "DeployedArtifact" ;
	rdfs:comment "'A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target."@en ;
	rdfs:subClassOf element:NamedElement .

element:Deployment xmi:type uml:Class ;
	xmi:id "Deployment" ;
	uml-model:name "Deployment" ;
	rdfs:comment "'A deployment is the allocation of an artifact or artifact instance to a deployment target.&#xA;A component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files."@en ;
	rdfs:subClassOf element:Dependency ;
	uml-model:ownedAttribute property:Deployment-configuration, property:Deployment-deployedArtifact, property:Deployment-location .

property:Deployment-configuration rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Deployment-configuration" ;
	rdfs:label "Deployment-configuration" ;
	uml-model:name "configuration" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_configuration_deployment ;
	rdfs:range element:DeploymentSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The specification of properties that parameterize the deployment and execution of one or more Artifacts."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Deployment-deployedArtifact rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Deployment-deployedArtifact" ;
	rdfs:label "Deployment-deployedArtifact" ;
	uml-model:name "deployedArtifact" ;
	uml-model:association uml-element:A_deployedArtifact_deploymentForArtifact ;
	rdfs:range element:DeployedArtifact ;
	uml-model:subsettedProperty uml-element:Dependency-supplier ;
	rdfs:comment "'The Artifacts that are deployed onto a Node. This association specializes the supplier association."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Deployment-location rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Deployment-location" ;
	rdfs:label "Deployment-location" ;
	uml-model:name "location" ;
	uml-model:association uml-element:A_deployment_location ;
	rdfs:range element:DeploymentTarget ;
	uml-model:subsettedProperty uml-element:Dependency-client, uml-element:Element-owner ;
	rdfs:comment "'The DeployedTarget which is the target of a Deployment."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DeploymentSpecification xmi:type uml:Class ;
	xmi:id "DeploymentSpecification" ;
	uml-model:name "DeploymentSpecification" ;
	rdfs:comment "'A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor."@en ;
	uml-model:rule element:DeploymentSpecification-deployment_target, element:DeploymentSpecification-deployed_elements ;
	rdfs:subClassOf element:Artifact ;
	uml-model:ownedAttribute property:DeploymentSpecification-deployment, property:DeploymentSpecification-deploymentLocation, property:DeploymentSpecification-executionLocation .

element:DeploymentSpecification-deployment_target rdfs:comment "'The DeploymentTarget of a DeploymentSpecification is a kind of ExecutionEnvironment."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DeploymentSpecification-deployment_target-_specification .

element:DeploymentSpecification-deployment_target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "deployment->forAll (location.oclIsKindOf(ExecutionEnvironment))"^^<http://www.omg.org/spec/OCL> .

element:DeploymentSpecification-deployed_elements rdfs:comment "'The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e., the configured components)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DeploymentSpecification-deployed_elements-_specification .

element:DeploymentSpecification-deployed_elements-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "deployment->forAll (location.deployedElement->forAll (oclIsKindOf(Component)))"^^<http://www.omg.org/spec/OCL> .

property:DeploymentSpecification-deployment rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DeploymentSpecification-deployment" ;
	rdfs:label "DeploymentSpecification-deployment" ;
	uml-model:name "deployment" ;
	uml-model:association uml-element:A_configuration_deployment ;
	rdfs:range element:Deployment ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The deployment with which the DeploymentSpecification is associated."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:DeploymentSpecification-deploymentLocation rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DeploymentSpecification-deploymentLocation" ;
	rdfs:label "DeploymentSpecification-deploymentLocation" ;
	uml-model:name "deploymentLocation" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The location where an Artifact is deployed onto a Node. This is typically a 'directory' or 'memory address.'"@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:DeploymentSpecification-executionLocation rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DeploymentSpecification-executionLocation" ;
	rdfs:label "DeploymentSpecification-executionLocation" ;
	uml-model:name "executionLocation" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The location where a component Artifact executes. This may be a local or remote location."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:DeploymentTarget xmi:type uml:Class ;
	xmi:id "DeploymentTarget" ;
	uml-model:name "DeploymentTarget" ;
	rdfs:comment "'A deployment target is the location for a deployed artifact."@en ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:DeploymentTarget-deployedElement, property:DeploymentTarget-deployment ;
	uml-model:operation element:DeploymentTarget-deployedElement.1 .

property:DeploymentTarget-deployedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DeploymentTarget-deployedElement" ;
	rdfs:label "DeploymentTarget-deployedElement" ;
	uml-model:name "deployedElement" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_deployedElement_deploymentTarget ;
	rdfs:range element:PackageableElement ;
	rdfs:comment "'The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:DeploymentTarget-deployedElement.1-spec .

property:DeploymentTarget-deployment rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DeploymentTarget-deployment" ;
	rdfs:label "DeploymentTarget-deployment" ;
	uml-model:name "deployment" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_deployment_location ;
	rdfs:range element:Deployment ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:NamedElement-clientDependency ;
	rdfs:comment "'The set of Deployments for a DeploymentTarget."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:DeploymentTarget-deployedElement.1 rdfs:comment "'Derivation for DeploymentTarget::/deployedElement"@en ;
	uml-model:returns element:DeploymentTarget-deployedElement.1-result .

element:DeploymentTarget-deployedElement.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:DeploymentTarget-deployedElement.1-spec-_specification .

element:DeploymentTarget-deployedElement.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (deployment.deployedArtifact->select(oclIsKindOf(Artifact))->collect(oclAsType(Artifact).manifestation)->collect(utilizedElement)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:DeploymentTarget-deployedElement.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:DeploymentTarget-deployedElement.1-result-_upperValue .

element:DeploymentTarget-deployedElement.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Device xmi:type uml:Class ;
	xmi:id "Device" ;
	uml-model:name "Device" ;
	rdfs:comment "'A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices)."@en ;
	rdfs:subClassOf element:Node .

element:ExecutionEnvironment xmi:type uml:Class ;
	xmi:id "ExecutionEnvironment" ;
	uml-model:name "ExecutionEnvironment" ;
	rdfs:comment "'An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts."@en ;
	rdfs:subClassOf element:Node .

element:Manifestation xmi:type uml:Class ;
	xmi:id "Manifestation" ;
	uml-model:name "Manifestation" ;
	rdfs:comment "'A manifestation is the concrete physical rendering of one or more model elements by an artifact."@en ;
	rdfs:subClassOf element:Abstraction ;
	uml-model:ownedAttribute property:Manifestation-utilizedElement .

property:Manifestation-utilizedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Manifestation-utilizedElement" ;
	rdfs:label "Manifestation-utilizedElement" ;
	uml-model:name "utilizedElement" ;
	uml-model:association uml-element:A_utilizedElement_manifestation ;
	rdfs:range element:PackageableElement ;
	uml-model:subsettedProperty uml-element:Dependency-supplier ;
	rdfs:comment "'The model element that is utilized in the manifestation in an Artifact."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Node xmi:type uml:Class ;
	xmi:id "Node" ;
	uml-model:name "Node" ;
	rdfs:comment "'A Node is computational resource upon which artifacts may be deployed for execution. Nodes can be interconnected through communication paths to define network structures."@en ;
	uml-model:rule element:Node-internal_structure ;
	rdfs:subClassOf element:Class, element:DeploymentTarget ;
	uml-model:ownedAttribute property:Node-nestedNode .

element:Node-internal_structure rdfs:comment "'The internal structure of a Node (if defined) consists solely of parts of type Node."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Node-internal_structure-_specification .

element:Node-internal_structure-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "part->forAll(oclIsKindOf(Node))"^^<http://www.omg.org/spec/OCL> .

property:Node-nestedNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Node-nestedNode" ;
	rdfs:label "Node-nestedNode" ;
	uml-model:name "nestedNode" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nestedNode_node ;
	rdfs:range element:Node ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Nodes that are defined (nested) within the Node."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:A_nestedNode_node xmi:type uml:Association ;
	xmi:id "A_nestedNode_node" ;
	uml-model:name "A_nestedNode_node" .

element:A_nestedNode_node-node xmi:type uml:Property ;
	xmi:id "A_nestedNode_node-node" ;
	uml-model:name "node" ;
	uml-model:type "Node" ;
	uml-model:association uml-element:A_nestedNode_node ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_utilizedElement_manifestation xmi:type uml:Association ;
	xmi:id "A_utilizedElement_manifestation" ;
	uml-model:name "A_utilizedElement_manifestation" .

element:A_utilizedElement_manifestation-manifestation xmi:type uml:Property ;
	xmi:id "A_utilizedElement_manifestation-manifestation" ;
	uml-model:name "manifestation" ;
	uml-model:type "Manifestation" ;
	uml-model:association uml-element:A_utilizedElement_manifestation ;
	uml-model:subsettedProperty uml-element:A_supplier_supplierDependency-supplierDependency .

element:A_deployedElement_deploymentTarget xmi:type uml:Association ;
	xmi:id "A_deployedElement_deploymentTarget" ;
	uml-model:name "A_deployedElement_deploymentTarget" .

element:A_deployedElement_deploymentTarget-deploymentTarget xmi:type uml:Property ;
	xmi:id "A_deployedElement_deploymentTarget-deploymentTarget" ;
	uml-model:name "deploymentTarget" ;
	uml-model:type "DeploymentTarget" ;
	uml-model:association uml-element:A_deployedElement_deploymentTarget .

element:A_deployment_location xmi:type uml:Association ;
	xmi:id "A_deployment_location" ;
	uml-model:name "A_deployment_location" .

element:A_deployedArtifact_deploymentForArtifact xmi:type uml:Association ;
	xmi:id "A_deployedArtifact_deploymentForArtifact" ;
	uml-model:name "A_deployedArtifact_deploymentForArtifact" .

element:A_deployedArtifact_deploymentForArtifact-deploymentForArtifact xmi:type uml:Property ;
	xmi:id "A_deployedArtifact_deploymentForArtifact-deploymentForArtifact" ;
	uml-model:name "deploymentForArtifact" ;
	uml-model:type "Deployment" ;
	uml-model:association uml-element:A_deployedArtifact_deploymentForArtifact ;
	uml-model:subsettedProperty uml-element:A_supplier_supplierDependency-supplierDependency .

element:A_configuration_deployment xmi:type uml:Association ;
	xmi:id "A_configuration_deployment" ;
	uml-model:name "A_configuration_deployment" .

element:A_ownedAttribute_artifact xmi:type uml:Association ;
	xmi:id "A_ownedAttribute_artifact" ;
	uml-model:name "A_ownedAttribute_artifact" .

element:A_ownedAttribute_artifact-artifact xmi:type uml:Property ;
	xmi:id "A_ownedAttribute_artifact-artifact" ;
	uml-model:name "artifact" ;
	uml-model:type "Artifact" ;
	uml-model:association uml-element:A_ownedAttribute_artifact ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:NamedElement-namespace .

element:A_ownedOperation_artifact xmi:type uml:Association ;
	xmi:id "A_ownedOperation_artifact" ;
	uml-model:name "A_ownedOperation_artifact" .

element:A_ownedOperation_artifact-artifact xmi:type uml:Property ;
	xmi:id "A_ownedOperation_artifact-artifact" ;
	uml-model:name "artifact" ;
	uml-model:type "Artifact" ;
	uml-model:association uml-element:A_ownedOperation_artifact ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext .

element:A_nestedArtifact_artifact xmi:type uml:Association ;
	xmi:id "A_nestedArtifact_artifact" ;
	uml-model:name "A_nestedArtifact_artifact" .

element:A_nestedArtifact_artifact-artifact xmi:type uml:Property ;
	xmi:id "A_nestedArtifact_artifact-artifact" ;
	uml-model:name "artifact" ;
	uml-model:type "Artifact" ;
	uml-model:association uml-element:A_nestedArtifact_artifact ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_manifestation_artifact xmi:type uml:Association ;
	xmi:id "A_manifestation_artifact" ;
	uml-model:name "A_manifestation_artifact" .

element:A_manifestation_artifact-artifact xmi:type uml:Property ;
	xmi:id "A_manifestation_artifact-artifact" ;
	uml-model:name "artifact" ;
	uml-model:type "Artifact" ;
	uml-model:association uml-element:A_manifestation_artifact ;
	uml-model:subsettedProperty uml-element:Dependency-client, uml-element:Element-owner .

element:CommonStructure xmi:type uml:Package ;
	xmi:id "CommonStructure" ;
	uml-model:name "CommonStructure" .

uml-import:CommonStructure-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "CommonStructure-_packageImport.0" ;
	uml-model:packagedElement element:CommonStructure ;
	uml-model:importedPackage element:Packages .

element:Abstraction xmi:type uml:Class ;
	xmi:id "Abstraction" ;
	uml-model:name "Abstraction" ;
	rdfs:comment "'An Abstraction is a Relationship that relates two Elements or sets of Elements that represent the same concept at different levels of abstraction or from different viewpoints."@en ;
	rdfs:subClassOf element:Dependency ;
	uml-model:ownedAttribute property:Abstraction-mapping .

property:Abstraction-mapping rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Abstraction-mapping" ;
	rdfs:label "Abstraction-mapping" ;
	uml-model:name "mapping" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_mapping_abstraction ;
	rdfs:range element:OpaqueExpression ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'An OpaqueExpression that states the abstraction relationship between the supplier(s) and the client(s). In some cases, such as derivation, it is usually formal and unidirectional; in other cases, such as trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the Elements is not specified."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Comment xmi:type uml:Class ;
	xmi:id "Comment" ;
	uml-model:name "Comment" ;
	rdfs:comment "'A Comment is a textual annotation that can be attached to a set of Elements."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:Comment-annotatedElement, property:Comment-body .

property:Comment-annotatedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Comment-annotatedElement" ;
	rdfs:label "Comment-annotatedElement" ;
	uml-model:name "annotatedElement" ;
	uml-model:association uml-element:A_annotatedElement_comment ;
	rdfs:range element:Element ;
	rdfs:comment "'References the Element(s) being commented."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Comment-body rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Comment-body" ;
	rdfs:label "Comment-body" ;
	uml-model:name "body" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Specifies a string that is the comment."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Constraint xmi:type uml:Class ;
	xmi:id "Constraint" ;
	uml-model:name "Constraint" ;
	rdfs:comment "'A Constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an Element or set of Elements."@en ;
	uml-model:rule element:Constraint-boolean_value, element:Constraint-no_side_effects, element:Constraint-not_apply_to_self ;
	rdfs:subClassOf element:PackageableElement ;
	uml-model:ownedAttribute property:Constraint-constrainedElement, property:Constraint-context, property:Constraint-specification .

element:Constraint-boolean_value rdfs:comment "'The ValueSpecification for a Constraint must evaluate to a Boolean value."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Constraint-boolean_value-_specification .

element:Constraint-boolean_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Constraint-no_side_effects rdfs:comment "'Evaluating the ValueSpecification for a Constraint must not have side effects."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Constraint-no_side_effects-_specification .

element:Constraint-no_side_effects-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:Constraint-not_apply_to_self rdfs:comment "'A Constraint cannot be applied to itself."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Constraint-not_apply_to_self-_specification .

element:Constraint-not_apply_to_self-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not constrainedElement->includes(self)"^^<http://www.omg.org/spec/OCL> .

property:Constraint-constrainedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Constraint-constrainedElement" ;
	rdfs:label "Constraint-constrainedElement" ;
	uml-model:name "constrainedElement" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_constrainedElement_constraint ;
	rdfs:range element:Element ;
	rdfs:comment "'The ordered set of Elements referenced by this Constraint."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Constraint-context rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Constraint-context" ;
	rdfs:label "Constraint-context" ;
	uml-model:name "context" ;
	uml-model:association uml-element:A_ownedRule_context ;
	rdfs:range element:Namespace ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace ;
	rdfs:comment "'Specifies the Namespace that owns the Constraint."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Constraint-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Constraint-specification" ;
	rdfs:label "Constraint-specification" ;
	uml-model:name "specification" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_specification_owningConstraint ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A condition that must be true when evaluated in order for the Constraint to be satisfied."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Dependency xmi:type uml:Class ;
	xmi:id "Dependency" ;
	uml-model:name "Dependency" ;
	rdfs:comment "'A Dependency is a Relationship that signifies that a single model Element or a set of model Elements requires other model Elements for their specification or implementation. This means that the complete semantics of the client Element(s) are either semantically or structurally dependent on the definition of the supplier Element(s)."@en ;
	rdfs:subClassOf element:DirectedRelationship, element:PackageableElement ;
	uml-model:ownedAttribute property:Dependency-client, property:Dependency-supplier .

property:Dependency-client rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Dependency-client" ;
	rdfs:label "Dependency-client" ;
	uml-model:name "client" ;
	uml-model:association uml-element:A_clientDependency_client ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source ;
	rdfs:comment "'The Element(s) dependent on the supplier Element(s). In some cases (such as a trace Abstraction) the assignment of direction (that is, the designation of the client Element) is at the discretion of the modeler and is a stipulation."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:Dependency-supplier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Dependency-supplier" ;
	rdfs:label "Dependency-supplier" ;
	uml-model:name "supplier" ;
	uml-model:association uml-element:A_supplier_supplierDependency ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'The Element(s) on which the client Element(s) depend in some respect. The modeler may stipulate a sense of Dependency direction suitable for their domain."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:DirectedRelationship xmi:type uml:Class ;
	xmi:id "DirectedRelationship" ;
	uml-model:name "DirectedRelationship" ;
	rdfs:comment "'A DirectedRelationship represents a relationship between a collection of source model Elements and a collection of target model Elements."@en ;
	rdfs:subClassOf element:Relationship ;
	uml-model:ownedAttribute property:DirectedRelationship-source, property:DirectedRelationship-target .

property:DirectedRelationship-source rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DirectedRelationship-source" ;
	rdfs:label "DirectedRelationship-source" ;
	uml-model:name "source" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_source_directedRelationship ;
	rdfs:range element:Element ;
	uml-model:subsettedProperty uml-element:Relationship-relatedElement ;
	rdfs:comment "'Specifies the source Element(s) of the DirectedRelationship."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:DirectedRelationship-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DirectedRelationship-target" ;
	rdfs:label "DirectedRelationship-target" ;
	uml-model:name "target" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_target_directedRelationship ;
	rdfs:range element:Element ;
	uml-model:subsettedProperty uml-element:Relationship-relatedElement ;
	rdfs:comment "'Specifies the target Element(s) of the DirectedRelationship."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:Element xmi:type uml:Class ;
	xmi:id "Element" ;
	uml-model:name "Element" ;
	rdfs:comment "'An Element is a constituent of a model. As such, it has the capability of owning other Elements."@en ;
	uml-model:rule element:Element-has_owner, element:Element-not_own_self ;
	uml-model:ownedAttribute property:Element-ownedComment, property:Element-ownedElement, property:Element-owner ;
	uml-model:operation element:Element-allOwnedElements, element:Element-mustBeOwned .

element:Element-has_owner rdfs:comment "'Elements that must be owned must have an owner."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Element-has_owner-_specification .

element:Element-has_owner-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "mustBeOwned() implies owner->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Element-not_own_self rdfs:comment "'An element may not directly or indirectly own itself."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Element-not_own_self-_specification .

element:Element-not_own_self-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not allOwnedElements()->includes(self)"^^<http://www.omg.org/spec/OCL> .

property:Element-ownedComment rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Element-ownedComment" ;
	rdfs:label "Element-ownedComment" ;
	uml-model:name "ownedComment" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedComment_owningElement ;
	rdfs:range element:Comment ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The Comments owned by this Element."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Element-ownedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Element-ownedElement" ;
	rdfs:label "Element-ownedElement" ;
	uml-model:name "ownedElement" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedElement_owner ;
	rdfs:range element:Element ;
	rdfs:comment "'The Elements owned by this Element."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Element-owner rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Element-owner" ;
	rdfs:label "Element-owner" ;
	uml-model:name "owner" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedElement_owner ;
	rdfs:range element:Element ;
	rdfs:comment "'The Element that owns this Element."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Element-allOwnedElements rdfs:comment "'The query allOwnedElements() gives all of the direct and indirect ownedElements of an Element."@en ;
	uml-model:rule element:Element-allOwnedElements-spec ;
	uml-model:returns element:Element-allOwnedElements-result .

element:Element-allOwnedElements-spec rdf:type uml:Constraint ;
	uml-model:specification element:Element-allOwnedElements-spec-_specification .

element:Element-allOwnedElements-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Element-allOwnedElements-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Element ;
	uml-model:upperValue element:Element-allOwnedElements-result-_upperValue .

element:Element-allOwnedElements-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Element-mustBeOwned rdfs:comment "'The query mustBeOwned() indicates whether Elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation."@en ;
	uml-model:rule element:Element-mustBeOwned-spec ;
	uml-model:returns element:Element-mustBeOwned-result .

element:Element-mustBeOwned-spec rdf:type uml:Constraint ;
	uml-model:specification element:Element-mustBeOwned-spec-_specification .

element:Element-mustBeOwned-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (true)"^^<http://www.omg.org/spec/OCL> .

element:Element-mustBeOwned-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ElementImport xmi:type uml:Class ;
	xmi:id "ElementImport" ;
	uml-model:name "ElementImport" ;
	rdfs:comment "'An ElementImport identifies a NamedElement in a Namespace other than the one that owns that NamedElement and allows the NamedElement to be referenced using an unqualified name in the Namespace owning the ElementImport."@en ;
	uml-model:rule element:ElementImport-imported_element_is_public, element:ElementImport-visibility_public_or_private ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:ElementImport-alias, property:ElementImport-importedElement, property:ElementImport-importingNamespace, property:ElementImport-visibility ;
	uml-model:operation element:ElementImport-getName .

element:ElementImport-imported_element_is_public rdfs:comment "'An importedElement has either public visibility or no visibility at all."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ElementImport-imported_element_is_public-_specification .

element:ElementImport-imported_element_is_public-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public"^^<http://www.omg.org/spec/OCL> .

element:ElementImport-visibility_public_or_private rdfs:comment "'The visibility of an ElementImport is either public or private."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ElementImport-visibility_public_or_private-_specification .

element:ElementImport-visibility_public_or_private-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "visibility = VisibilityKind::public or visibility = VisibilityKind::private"^^<http://www.omg.org/spec/OCL> .

property:ElementImport-alias rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ElementImport-alias" ;
	rdfs:label "ElementImport-alias" ;
	uml-model:name "alias" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Specifies the name that should be added to the importing Namespace in lieu of the name of the imported PackagableElement. The alias must not clash with any other member in the importing Namespace. By default, no alias is used."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ElementImport-importedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ElementImport-importedElement" ;
	rdfs:label "ElementImport-importedElement" ;
	uml-model:name "importedElement" ;
	uml-model:association uml-element:A_importedElement_import ;
	rdfs:range element:PackageableElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'Specifies the PackageableElement whose name is to be added to a Namespace."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ElementImport-importingNamespace rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ElementImport-importingNamespace" ;
	rdfs:label "ElementImport-importingNamespace" ;
	uml-model:name "importingNamespace" ;
	uml-model:association uml-element:A_elementImport_importingNamespace ;
	rdfs:range element:Namespace ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'Specifies the Namespace that imports a PackageableElement from another Namespace."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ElementImport-visibility rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ElementImport-visibility" ;
	rdfs:label "ElementImport-visibility" ;
	uml-model:name "visibility" ;
	rdfs:range element:VisibilityKind ;
	rdfs:comment "'Specifies the visibility of the imported PackageableElement within the importingNamespace, i.e., whether the  importedElement will in turn be visible to other Namespaces. If the ElementImport is public, the importedElement will be visible outside the importingNamespace while, if the ElementImport is private, it will not."@en ;
	xmi:defaultValue element:ElementImport-visibility-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ElementImport-visibility-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "ElementImport-visibility-_defaultValue" .

element:ElementImport-getName rdfs:comment "'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace."@en ;
	uml-model:rule element:ElementImport-getName-spec ;
	uml-model:returns element:ElementImport-getName-result .

element:ElementImport-getName-spec rdf:type uml:Constraint ;
	uml-model:specification element:ElementImport-getName-spec-_specification .

element:ElementImport-getName-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if alias->notEmpty() then\n  alias\nelse\n  importedElement.name\nendif)"^^<http://www.omg.org/spec/OCL> .

element:ElementImport-getName-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:MultiplicityElement xmi:type uml:Class ;
	xmi:id "MultiplicityElement" ;
	uml-model:name "MultiplicityElement" ;
	rdfs:comment "'A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A MultiplicityElement embeds this information to specify the allowable cardinalities for an instantiation of the Element."@en ;
	uml-model:rule element:MultiplicityElement-upper_ge_lower, element:MultiplicityElement-lower_ge_0, element:MultiplicityElement-value_specification_no_side_effects, element:MultiplicityElement-value_specification_constant, element:MultiplicityElement-lower_is_integer, element:MultiplicityElement-upper_is_unlimitedNatural ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:MultiplicityElement-isOrdered, property:MultiplicityElement-isUnique, property:MultiplicityElement-lower, property:MultiplicityElement-lowerValue, property:MultiplicityElement-upper, property:MultiplicityElement-upperValue ;
	uml-model:operation element:MultiplicityElement-compatibleWith, element:MultiplicityElement-includesMultiplicity, element:MultiplicityElement-is, element:MultiplicityElement-isMultivalued, element:MultiplicityElement-lower.1, element:MultiplicityElement-lowerBound, element:MultiplicityElement-upper.1, element:MultiplicityElement-upperBound .

element:MultiplicityElement-upper_ge_lower rdfs:comment "'The upper bound must be greater than or equal to the lower bound."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-upper_ge_lower-_specification .

element:MultiplicityElement-upper_ge_lower-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "upperBound() >= lowerBound()"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-lower_ge_0 rdfs:comment "'The lower bound must be a non-negative integer literal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-lower_ge_0-_specification .

element:MultiplicityElement-lower_ge_0-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "lowerBound() >= 0"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-value_specification_no_side_effects rdfs:comment "'If a non-literal ValueSpecification is used for lowerValue or upperValue, then evaluating that specification must not have side effects."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-value_specification_no_side_effects-_specification .

element:MultiplicityElement-value_specification_no_side_effects-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:MultiplicityElement-value_specification_constant rdfs:comment "'If a non-literal ValueSpecification is used for lowerValue or upperValue, then that specification must be a constant expression."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-value_specification_constant-_specification .

element:MultiplicityElement-value_specification_constant-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:MultiplicityElement-lower_is_integer rdfs:comment "'If it is not empty, then lowerValue must have an Integer value."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-lower_is_integer-_specification .

element:MultiplicityElement-lower_is_integer-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "lowerValue <> null implies lowerValue.integerValue() <> null"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-upper_is_unlimitedNatural rdfs:comment "'If it is not empty, then upperValue must have an UnlimitedNatural value."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-upper_is_unlimitedNatural-_specification .

element:MultiplicityElement-upper_is_unlimitedNatural-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "upperValue <> null implies upperValue.unlimitedValue() <> null"^^<http://www.omg.org/spec/OCL> .

property:MultiplicityElement-isOrdered rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-isOrdered" ;
	rdfs:label "MultiplicityElement-isOrdered" ;
	uml-model:name "isOrdered" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this MultiplicityElement are sequentially ordered."@en ;
	xmi:defaultValue element:MultiplicityElement-isOrdered-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:MultiplicityElement-isOrdered-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "MultiplicityElement-isOrdered-_defaultValue" .

property:MultiplicityElement-isUnique rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-isUnique" ;
	rdfs:label "MultiplicityElement-isUnique" ;
	uml-model:name "isUnique" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this MultiplicityElement are unique."@en ;
	xmi:defaultValue element:MultiplicityElement-isUnique-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:MultiplicityElement-isUnique-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "MultiplicityElement-isUnique-_defaultValue" ;
	uml-model:value "true" .

property:MultiplicityElement-lower rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-lower" ;
	rdfs:label "MultiplicityElement-lower" ;
	uml-model:name "lower" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Integer ;
	rdfs:comment "'The lower bound of the multiplicity interval."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:MultiplicityElement-lower.1-spec .

property:MultiplicityElement-lowerValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-lowerValue" ;
	rdfs:label "MultiplicityElement-lowerValue" ;
	uml-model:name "lowerValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_lowerValue_owningLower ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The specification of the lower bound for this multiplicity."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:MultiplicityElement-upper rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-upper" ;
	rdfs:label "MultiplicityElement-upper" ;
	uml-model:name "upper" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:UnlimitedNatural ;
	rdfs:comment "'The upper bound of the multiplicity interval."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:MultiplicityElement-upper.1-spec .

property:MultiplicityElement-upperValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "MultiplicityElement-upperValue" ;
	rdfs:label "MultiplicityElement-upperValue" ;
	uml-model:name "upperValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_upperValue_owningUpper ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The specification of the upper bound for this multiplicity."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:MultiplicityElement-compatibleWith rdfs:comment "'The operation compatibleWith takes another multiplicity as input. It returns true if the other multiplicity is wider than, or the same as, self."@en ;
	uml-model:rule element:MultiplicityElement-compatibleWith-spec ;
	uml-model:returns element:MultiplicityElement-compatibleWith-result .

element:MultiplicityElement-compatibleWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-compatibleWith-spec-_specification .

element:MultiplicityElement-compatibleWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((other.lowerBound() <= self.lowerBound()) and ((other.upperBound() = *) or (self.upperBound() <= other.upperBound())))"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-compatibleWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MultiplicityElement-compatibleWith-other rdf:type uml:Parameter ;
	uml-model:name "other" ;
	uml-model:parameterType element:MultiplicityElement .

element:MultiplicityElement-includesMultiplicity rdfs:comment "'The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity."@en ;
	uml-model:rule element:MultiplicityElement-includesMultiplicity-pre, element:MultiplicityElement-includesMultiplicity-spec ;
	uml-model:returns element:MultiplicityElement-includesMultiplicity-result .

element:MultiplicityElement-includesMultiplicity-pre rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-includesMultiplicity-pre-_specification .

element:MultiplicityElement-includesMultiplicity-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-includesMultiplicity-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-includesMultiplicity-spec-_specification .

element:MultiplicityElement-includesMultiplicity-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((self.lowerBound() <= M.lowerBound()) and (self.upperBound() >= M.upperBound()))"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-includesMultiplicity-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MultiplicityElement-includesMultiplicity-M rdf:type uml:Parameter ;
	uml-model:name "M" ;
	uml-model:parameterType element:MultiplicityElement .

element:MultiplicityElement-is rdfs:comment "'The operation is determines if the upper and lower bound of the ranges are the ones given."@en ;
	uml-model:rule element:MultiplicityElement-is-spec ;
	uml-model:returns element:MultiplicityElement-is-result .

element:MultiplicityElement-is-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-is-spec-_specification .

element:MultiplicityElement-is-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (lowerbound = self.lowerBound() and upperbound = self.upperBound())"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-is-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MultiplicityElement-is-lowerbound rdf:type uml:Parameter ;
	uml-model:name "lowerbound" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:MultiplicityElement-is-upperbound rdf:type uml:Parameter ;
	uml-model:name "upperbound" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:MultiplicityElement-isMultivalued rdfs:comment "'The query isMultivalued() checks whether this multiplicity has an upper bound greater than one."@en ;
	uml-model:rule element:MultiplicityElement-isMultivalued-pre, element:MultiplicityElement-isMultivalued-spec ;
	uml-model:returns element:MultiplicityElement-isMultivalued-result .

element:MultiplicityElement-isMultivalued-pre rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-isMultivalued-pre-_specification .

element:MultiplicityElement-isMultivalued-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "upperBound()->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-isMultivalued-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-isMultivalued-spec-_specification .

element:MultiplicityElement-isMultivalued-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (upperBound() > 1)"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-isMultivalued-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:MultiplicityElement-lower.1 rdfs:comment "'The derived lower attribute must equal the lowerBound."@en ;
	uml-model:returns element:MultiplicityElement-lower.1-result .

element:MultiplicityElement-lower.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-lower.1-spec-_specification .

element:MultiplicityElement-lower.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (lowerBound())"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-lower.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:MultiplicityElement-lowerBound rdfs:comment "'The query lowerBound() returns the lower bound of the multiplicity as an integer, which is the integerValue of lowerValue, if this is given, and 1 otherwise."@en ;
	uml-model:rule element:MultiplicityElement-lowerBound-spec ;
	uml-model:returns element:MultiplicityElement-lowerBound-result .

element:MultiplicityElement-lowerBound-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-lowerBound-spec-_specification .

element:MultiplicityElement-lowerBound-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if (lowerValue=null or lowerValue.integerValue()=null) then 1 else lowerValue.integerValue() endif)"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-lowerBound-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:MultiplicityElement-upper.1 rdfs:comment "'The derived upper attribute must equal the upperBound."@en ;
	uml-model:returns element:MultiplicityElement-upper.1-result .

element:MultiplicityElement-upper.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-upper.1-spec-_specification .

element:MultiplicityElement-upper.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (upperBound())"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-upper.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:MultiplicityElement-upperBound rdfs:comment "'The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural, which is the unlimitedNaturalValue of upperValue, if given, and 1, otherwise."@en ;
	uml-model:rule element:MultiplicityElement-upperBound-spec ;
	uml-model:returns element:MultiplicityElement-upperBound-result .

element:MultiplicityElement-upperBound-spec rdf:type uml:Constraint ;
	uml-model:specification element:MultiplicityElement-upperBound-spec-_specification .

element:MultiplicityElement-upperBound-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if (upperValue=null or upperValue.unlimitedValue()=null) then 1 else upperValue.unlimitedValue() endif)"^^<http://www.omg.org/spec/OCL> .

element:MultiplicityElement-upperBound-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:NamedElement xmi:type uml:Class ;
	xmi:id "NamedElement" ;
	uml-model:name "NamedElement" ;
	rdfs:comment "'A NamedElement is an Element in a model that may have a name. The name may be given directly and/or via the use of a StringExpression."@en ;
	uml-model:rule element:NamedElement-visibility_needs_ownership, element:NamedElement-has_qualified_name, element:NamedElement-has_no_qualified_name ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:NamedElement-clientDependency, property:NamedElement-name, property:NamedElement-nameExpression, property:NamedElement-namespace, property:NamedElement-qualifiedName, property:NamedElement-visibility ;
	uml-model:operation element:NamedElement-allNamespaces, element:NamedElement-allOwningPackages, element:NamedElement-isDistinguishableFrom, element:NamedElement-qualifiedName.1, element:NamedElement-separator, element:NamedElement-clientDependency.1 .

element:NamedElement-visibility_needs_ownership rdfs:comment "'If a NamedElement is owned by something other than a Namespace, it does not have a visibility. One that is not owned by anything (and hence must be a Package, as this is the only kind of NamedElement that overrides mustBeOwned()) may have a visibility."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-visibility_needs_ownership-_specification .

element:NamedElement-visibility_needs_ownership-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(namespace = null and owner <> null) implies visibility = null"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-has_qualified_name rdfs:comment "'When there is a name, and all of the containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-has_qualified_name-_specification .

element:NamedElement-has_qualified_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(name <> null and allNamespaces()->select(ns | ns.name = null)->isEmpty()) implies\n  qualifiedName = allNamespaces()->iterate( ns : Namespace; agg: String = name | ns.name.concat(self.separator()).concat(agg))"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-has_no_qualified_name rdfs:comment "'If there is no name, or one of the containing Namespaces has no name, there is no qualifiedName."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-has_no_qualified_name-_specification .

element:NamedElement-has_no_qualified_name-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "name=null or allNamespaces()->select( ns | ns.name=null )->notEmpty() implies qualifiedName = null"^^<http://www.omg.org/spec/OCL> .

property:NamedElement-clientDependency rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-clientDependency" ;
	rdfs:label "NamedElement-clientDependency" ;
	uml-model:name "clientDependency" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_clientDependency_client ;
	rdfs:range element:Dependency ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship ;
	rdfs:comment "'Indicates the Dependencies that reference this NamedElement as a client."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:NamedElement-clientDependency.1-spec .

property:NamedElement-name rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-name" ;
	rdfs:label "NamedElement-name" ;
	uml-model:name "name" ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'The name of the NamedElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:NamedElement-nameExpression rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-nameExpression" ;
	rdfs:label "NamedElement-nameExpression" ;
	uml-model:name "nameExpression" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_nameExpression_namedElement ;
	rdfs:range element:StringExpression ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The StringExpression used to define the name of this NamedElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:NamedElement-namespace rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-namespace" ;
	rdfs:label "NamedElement-namespace" ;
	uml-model:name "namespace" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedMember_namespace ;
	rdfs:range element:Namespace ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace, uml-element:Element-owner ;
	rdfs:comment "'Specifies the Namespace that owns the NamedElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:NamedElement-qualifiedName rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-qualifiedName" ;
	rdfs:label "NamedElement-qualifiedName" ;
	uml-model:name "qualifiedName" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'A name that allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing Namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:NamedElement-qualifiedName.1-spec .

property:NamedElement-visibility rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "NamedElement-visibility" ;
	rdfs:label "NamedElement-visibility" ;
	uml-model:name "visibility" ;
	rdfs:range element:VisibilityKind ;
	rdfs:comment "'Determines whether and how the NamedElement is visible outside its owning Namespace."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:NamedElement-allNamespaces rdfs:comment "'The query allNamespaces() gives the sequence of Namespaces in which the NamedElement is nested, working outwards."@en ;
	uml-model:rule element:NamedElement-allNamespaces-spec ;
	uml-model:returns element:NamedElement-allNamespaces-result .

element:NamedElement-allNamespaces-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-allNamespaces-spec-_specification .

element:NamedElement-allNamespaces-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if owner.oclIsKindOf(TemplateParameter) and\n  owner.oclAsType(TemplateParameter).signature.template.oclIsKindOf(Namespace) then\n    let enclosingNamespace : Namespace =\n      owner.oclAsType(TemplateParameter).signature.template.oclAsType(Namespace) in\n        enclosingNamespace.allNamespaces()->prepend(enclosingNamespace)\nelse\n  if namespace->isEmpty()\n    then OrderedSet{}\n  else\n    namespace.allNamespaces()->prepend(namespace)\n  endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-allNamespaces-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Namespace ;
	uml-model:upperValue element:NamedElement-allNamespaces-result-_upperValue .

element:NamedElement-allNamespaces-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:NamedElement-allOwningPackages rdfs:comment "'The query allOwningPackages() returns the set of all the enclosing Namespaces of this NamedElement, working outwards, that are Packages, up to but not including the first such Namespace that is not a Package."@en ;
	uml-model:rule element:NamedElement-allOwningPackages-spec ;
	uml-model:returns element:NamedElement-allOwningPackages-result .

element:NamedElement-allOwningPackages-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-allOwningPackages-spec-_specification .

element:NamedElement-allOwningPackages-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if namespace.oclIsKindOf(Package)\nthen\n  let owningPackage : Package = namespace.oclAsType(Package) in\n    owningPackage->union(owningPackage.allOwningPackages())\nelse\n  null\nendif)"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-allOwningPackages-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Package ;
	uml-model:upperValue element:NamedElement-allOwningPackages-result-_upperValue .

element:NamedElement-allOwningPackages-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:NamedElement-isDistinguishableFrom rdfs:comment "'The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have types neither of which is a kind of the other or (b) they have different names."@en ;
	uml-model:rule element:NamedElement-isDistinguishableFrom-spec ;
	uml-model:returns element:NamedElement-isDistinguishableFrom-result .

element:NamedElement-isDistinguishableFrom-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-isDistinguishableFrom-spec-_specification .

element:NamedElement-isDistinguishableFrom-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((self.oclIsKindOf(n.oclType()) or n.oclIsKindOf(self.oclType())) implies\n    ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()\n)"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-isDistinguishableFrom-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:NamedElement-isDistinguishableFrom-n rdf:type uml:Parameter ;
	uml-model:name "n" ;
	uml-model:parameterType element:NamedElement .

element:NamedElement-isDistinguishableFrom-ns rdf:type uml:Parameter ;
	uml-model:name "ns" ;
	uml-model:parameterType element:Namespace .

element:NamedElement-qualifiedName.1 rdfs:comment "'When a NamedElement has a name, and all of its containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces."@en ;
	uml-model:returns element:NamedElement-qualifiedName.1-result .

element:NamedElement-qualifiedName.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-qualifiedName.1-spec-_specification .

element:NamedElement-qualifiedName.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if self.name <> null and self.allNamespaces()->select( ns | ns.name=null )->isEmpty()\nthen \n    self.allNamespaces()->iterate( ns : Namespace; agg: String = self.name | ns.name.concat(self.separator()).concat(agg))\nelse\n   null\nendif)"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-qualifiedName.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:NamedElement-separator rdfs:comment "'The query separator() gives the string that is used to separate names when constructing a qualifiedName."@en ;
	uml-model:rule element:NamedElement-separator-spec ;
	uml-model:returns element:NamedElement-separator-result .

element:NamedElement-separator-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-separator-spec-_specification .

element:NamedElement-separator-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ('::')"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-separator-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:NamedElement-clientDependency.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:NamedElement-clientDependency.1-spec-_specification .

element:NamedElement-clientDependency.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (Dependency.allInstances()->select(d | d.client->includes(self)))"^^<http://www.omg.org/spec/OCL> .

element:NamedElement-clientDependency.1 uml-model:returns element:NamedElement-clientDependency.1-result .

element:NamedElement-clientDependency.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Dependency ;
	uml-model:upperValue element:NamedElement-clientDependency.1-result-_upperValue .

element:NamedElement-clientDependency.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace xmi:type uml:Class ;
	xmi:id "Namespace" ;
	uml-model:name "Namespace" ;
	rdfs:comment "'A Namespace is an Element in a model that owns and/or imports a set of NamedElements that can be identified by name."@en ;
	uml-model:rule element:Namespace-members_distinguishable, element:Namespace-cannot_import_self, element:Namespace-cannot_import_ownedMembers ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:Namespace-elementImport, property:Namespace-importedMember, property:Namespace-member, property:Namespace-ownedMember, property:Namespace-ownedRule, property:Namespace-packageImport ;
	uml-model:operation element:Namespace-excludeCollisions, element:Namespace-getNamesOfMember, element:Namespace-importMembers, element:Namespace-importedMember.1, element:Namespace-membersAreDistinguishable .

element:Namespace-members_distinguishable rdfs:comment "'All the members of a Namespace are distinguishable within it."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-members_distinguishable-_specification .

element:Namespace-members_distinguishable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "membersAreDistinguishable()"^^<http://www.omg.org/spec/OCL> .

element:Namespace-cannot_import_self rdfs:comment "'A Namespace cannot have a PackageImport to itself."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-cannot_import_self-_specification .

element:Namespace-cannot_import_self-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "packageImport.importedPackage.oclAsType(Namespace)->excludes(self)"^^<http://www.omg.org/spec/OCL> .

element:Namespace-cannot_import_ownedMembers rdfs:comment "'A Namespace cannot have an ElementImport to one of its ownedMembers."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-cannot_import_ownedMembers-_specification .

element:Namespace-cannot_import_ownedMembers-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "elementImport.importedElement.oclAsType(Element)->excludesAll(ownedMember)"^^<http://www.omg.org/spec/OCL> .

property:Namespace-elementImport rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-elementImport" ;
	rdfs:label "Namespace-elementImport" ;
	uml-model:name "elementImport" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_elementImport_importingNamespace ;
	rdfs:range element:ElementImport ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'References the ElementImports owned by the Namespace."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Namespace-importedMember rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-importedMember" ;
	rdfs:label "Namespace-importedMember" ;
	uml-model:name "importedMember" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_importedMember_namespace ;
	rdfs:range element:PackageableElement ;
	uml-model:subsettedProperty uml-element:Namespace-member ;
	rdfs:comment "'References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Namespace-importedMember.1-spec .

property:Namespace-member rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-member" ;
	rdfs:label "Namespace-member" ;
	uml-model:name "member" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_member_memberNamespace ;
	rdfs:range element:NamedElement ;
	rdfs:comment "'A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Namespace-ownedMember rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-ownedMember" ;
	rdfs:label "Namespace-ownedMember" ;
	uml-model:name "ownedMember" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedMember_namespace ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:Namespace-member ;
	rdfs:comment "'A collection of NamedElements owned by the Namespace."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Namespace-ownedRule rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-ownedRule" ;
	rdfs:label "Namespace-ownedRule" ;
	uml-model:name "ownedRule" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedRule_context ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'Specifies a set of Constraints owned by this Namespace."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Namespace-packageImport rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Namespace-packageImport" ;
	rdfs:label "Namespace-packageImport" ;
	uml-model:name "packageImport" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_packageImport_importingNamespace ;
	rdfs:range element:PackageImport ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'References the PackageImports owned by the Namespace."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Namespace-excludeCollisions rdfs:comment "'The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this Namespace."@en ;
	uml-model:rule element:Namespace-excludeCollisions-spec ;
	uml-model:returns element:Namespace-excludeCollisions-result .

element:Namespace-excludeCollisions-spec rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-excludeCollisions-spec-_specification .

element:Namespace-excludeCollisions-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (imps->reject(imp1  | imps->exists(imp2 | not imp1.isDistinguishableFrom(imp2, self))))"^^<http://www.omg.org/spec/OCL> .

element:Namespace-excludeCollisions-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Namespace-excludeCollisions-result-_upperValue .

element:Namespace-excludeCollisions-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-excludeCollisions-imps rdf:type uml:Parameter ;
	uml-model:name "imps" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Namespace-excludeCollisions-imps-_upperValue .

element:Namespace-excludeCollisions-imps-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-getNamesOfMember rdfs:comment "'The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace, taking importing into account. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases."@en ;
	uml-model:rule element:Namespace-getNamesOfMember-spec ;
	uml-model:returns element:Namespace-getNamesOfMember-result .

element:Namespace-getNamesOfMember-spec rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-getNamesOfMember-spec-_specification .

element:Namespace-getNamesOfMember-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if self.ownedMember ->includes(element)\nthen Set{element.name}\nelse let elementImports : Set(ElementImport) = self.elementImport->select(ei | ei.importedElement = element) in\n  if elementImports->notEmpty()\n  then\n     elementImports->collect(el | el.getName())->asSet()\n  else \n     self.packageImport->select(pi | pi.importedPackage.visibleMembers().oclAsType(NamedElement)->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))->asSet()\n  endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Namespace-getNamesOfMember-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> ;
	uml-model:upperValue element:Namespace-getNamesOfMember-result-_upperValue .

element:Namespace-getNamesOfMember-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-getNamesOfMember-element rdf:type uml:Parameter ;
	uml-model:name "element" ;
	uml-model:parameterType element:NamedElement .

element:Namespace-importMembers rdfs:comment "'The query importMembers() defines which of a set of PackageableElements are actually imported into the Namespace. This excludes hidden ones, i.e., those which have names that conflict with names of ownedMembers, and it also excludes PackageableElements that would have the indistinguishable names when imported."@en ;
	uml-model:rule element:Namespace-importMembers-spec ;
	uml-model:returns element:Namespace-importMembers-result .

element:Namespace-importMembers-spec rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-importMembers-spec-_specification .

element:Namespace-importMembers-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | imp.isDistinguishableFrom(mem, self))))"^^<http://www.omg.org/spec/OCL> .

element:Namespace-importMembers-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Namespace-importMembers-result-_upperValue .

element:Namespace-importMembers-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-importMembers-imps rdf:type uml:Parameter ;
	uml-model:name "imps" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Namespace-importMembers-imps-_upperValue .

element:Namespace-importMembers-imps-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-importedMember.1 rdfs:comment "'The importedMember property is derived as the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."@en ;
	uml-model:returns element:Namespace-importedMember.1-result .

element:Namespace-importedMember.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-importedMember.1-spec-_specification .

element:Namespace-importedMember.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.importMembers(elementImport.importedElement->asSet()->union(packageImport.importedPackage->collect(p | p.visibleMembers()))->asSet()))"^^<http://www.omg.org/spec/OCL> .

element:Namespace-importedMember.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:PackageableElement ;
	uml-model:upperValue element:Namespace-importedMember.1-result-_upperValue .

element:Namespace-importedMember.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Namespace-membersAreDistinguishable rdfs:comment "'The Boolean query membersAreDistinguishable() determines whether all of the Namespace's members are distinguishable within it."@en ;
	uml-model:rule element:Namespace-membersAreDistinguishable-spec ;
	uml-model:returns element:Namespace-membersAreDistinguishable-result .

element:Namespace-membersAreDistinguishable-spec rdf:type uml:Constraint ;
	uml-model:specification element:Namespace-membersAreDistinguishable-spec-_specification .

element:Namespace-membersAreDistinguishable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (member->forAll( memb |\n   member->excluding(memb)->forAll(other |\n       memb.isDistinguishableFrom(other, self))))"^^<http://www.omg.org/spec/OCL> .

element:Namespace-membersAreDistinguishable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:PackageableElement xmi:type uml:Class ;
	xmi:id "PackageableElement" ;
	uml-model:name "PackageableElement" ;
	rdfs:comment "'A PackageableElement is a NamedElement that may be owned directly by a Package. A PackageableElement is also able to serve as the parameteredElement of a TemplateParameter."@en ;
	uml-model:rule element:PackageableElement-namespace_needs_visibility ;
	rdfs:subClassOf element:ParameterableElement, element:NamedElement ;
	uml-model:ownedAttribute property:PackageableElement-visibility .

element:PackageableElement-namespace_needs_visibility rdfs:comment "'A PackageableElement owned by a Namespace must have a visibility."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:PackageableElement-namespace_needs_visibility-_specification .

element:PackageableElement-namespace_needs_visibility-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "visibility = null implies namespace = null"^^<http://www.omg.org/spec/OCL> .

property:PackageableElement-visibility rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageableElement-visibility" ;
	rdfs:label "PackageableElement-visibility" ;
	uml-model:name "visibility" ;
	rdfs:range element:VisibilityKind ;
	rdfs:comment "'A PackageableElement must have a visibility specified if it is owned by a Namespace. The default visibility is public."@en ;
	xmi:defaultValue element:PackageableElement-visibility-_defaultValue ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:PackageableElement-visibility-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "PackageableElement-visibility-_defaultValue" .

element:PackageImport xmi:type uml:Class ;
	xmi:id "PackageImport" ;
	uml-model:name "PackageImport" ;
	rdfs:comment "'A PackageImport is a Relationship that imports all the non-private members of a Package into the Namespace owning the PackageImport, so that those Elements may be referred to by their unqualified names in the importingNamespace."@en ;
	uml-model:rule element:PackageImport-public_or_private ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:PackageImport-importedPackage, property:PackageImport-importingNamespace, property:PackageImport-visibility .

element:PackageImport-public_or_private rdfs:comment "'The visibility of a PackageImport is either public or private."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:PackageImport-public_or_private-_specification .

element:PackageImport-public_or_private-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "visibility = VisibilityKind::public or visibility = VisibilityKind::private"^^<http://www.omg.org/spec/OCL> .

property:PackageImport-importedPackage rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageImport-importedPackage" ;
	rdfs:label "PackageImport-importedPackage" ;
	uml-model:name "importedPackage" ;
	uml-model:association uml-element:A_importedPackage_packageImport ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'Specifies the Package whose members are imported into a Namespace."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:PackageImport-importingNamespace rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageImport-importingNamespace" ;
	rdfs:label "PackageImport-importingNamespace" ;
	uml-model:name "importingNamespace" ;
	uml-model:association uml-element:A_packageImport_importingNamespace ;
	rdfs:range element:Namespace ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'Specifies the Namespace that imports the members from a Package."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:PackageImport-visibility rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "PackageImport-visibility" ;
	rdfs:label "PackageImport-visibility" ;
	uml-model:name "visibility" ;
	rdfs:range element:VisibilityKind ;
	rdfs:comment "'Specifies the visibility of the imported PackageableElements within the importingNamespace, i.e., whether imported Elements will in turn be visible to other Namespaces. If the PackageImport is public, the imported Elements will be visible outside the importingNamespace, while, if the PackageImport is private, they will not."@en ;
	xmi:defaultValue element:PackageImport-visibility-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:PackageImport-visibility-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "PackageImport-visibility-_defaultValue" .

element:ParameterableElement xmi:type uml:Class ;
	xmi:id "ParameterableElement" ;
	uml-model:name "ParameterableElement" ;
	rdfs:comment "'A ParameterableElement is an Element that can be exposed as a formal TemplateParameter for a template, or specified as an actual parameter in a binding of a template."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:ParameterableElement-owningTemplateParameter, property:ParameterableElement-templateParameter ;
	uml-model:operation element:ParameterableElement-isCompatibleWith, element:ParameterableElement-isTemplateParameter .

property:ParameterableElement-owningTemplateParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ParameterableElement-owningTemplateParameter" ;
	rdfs:label "ParameterableElement-owningTemplateParameter" ;
	uml-model:name "owningTemplateParameter" ;
	uml-model:association uml-element:A_ownedParameteredElement_owningTemplateParameter ;
	rdfs:range element:TemplateParameter ;
	uml-model:subsettedProperty uml-element:Element-owner, uml-element:ParameterableElement-templateParameter ;
	rdfs:comment "'The formal TemplateParameter that owns this ParameterableElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ParameterableElement-templateParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ParameterableElement-templateParameter" ;
	rdfs:label "ParameterableElement-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:association uml-element:A_parameteredElement_templateParameter ;
	rdfs:range element:TemplateParameter ;
	rdfs:comment "'The TemplateParameter that exposes this ParameterableElement as a formal parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ParameterableElement-isCompatibleWith rdfs:comment "'The query isCompatibleWith() determines if this ParameterableElement is compatible with the specified ParameterableElement. By default, this ParameterableElement is compatible with another ParameterableElement p if the kind of this ParameterableElement is the same as or a subtype of the kind of p. Subclasses of ParameterableElement should override this operation to specify different compatibility constraints."@en ;
	uml-model:rule element:ParameterableElement-isCompatibleWith-spec ;
	uml-model:returns element:ParameterableElement-isCompatibleWith-result .

element:ParameterableElement-isCompatibleWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:ParameterableElement-isCompatibleWith-spec-_specification .

element:ParameterableElement-isCompatibleWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oclIsKindOf(p.oclType()))"^^<http://www.omg.org/spec/OCL> .

element:ParameterableElement-isCompatibleWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:ParameterableElement-isCompatibleWith-p rdf:type uml:Parameter ;
	uml-model:name "p" ;
	uml-model:parameterType element:ParameterableElement .

element:ParameterableElement-isTemplateParameter rdfs:comment "'The query isTemplateParameter() determines if this ParameterableElement is exposed as a formal TemplateParameter."@en ;
	uml-model:rule element:ParameterableElement-isTemplateParameter-spec ;
	uml-model:returns element:ParameterableElement-isTemplateParameter-result .

element:ParameterableElement-isTemplateParameter-spec rdf:type uml:Constraint ;
	uml-model:specification element:ParameterableElement-isTemplateParameter-spec-_specification .

element:ParameterableElement-isTemplateParameter-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (templateParameter->notEmpty())"^^<http://www.omg.org/spec/OCL> .

element:ParameterableElement-isTemplateParameter-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Realization xmi:type uml:Class ;
	xmi:id "Realization" ;
	uml-model:name "Realization" ;
	rdfs:comment "'Realization is a specialized Abstraction relationship between two sets of model Elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc."@en ;
	rdfs:subClassOf element:Abstraction .

element:Relationship xmi:type uml:Class ;
	xmi:id "Relationship" ;
	uml-model:name "Relationship" ;
	rdfs:comment "'Relationship is an abstract concept that specifies some kind of relationship between Elements."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:Relationship-relatedElement .

property:Relationship-relatedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Relationship-relatedElement" ;
	rdfs:label "Relationship-relatedElement" ;
	uml-model:name "relatedElement" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_relatedElement_relationship ;
	rdfs:range element:Element ;
	rdfs:comment "'Specifies the elements related by the Relationship."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:TemplateableElement xmi:type uml:Class ;
	xmi:id "TemplateableElement" ;
	uml-model:name "TemplateableElement" ;
	rdfs:comment "'A TemplateableElement is an Element that can optionally be defined as a template and bound to other templates."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:TemplateableElement-ownedTemplateSignature, property:TemplateableElement-templateBinding ;
	uml-model:operation element:TemplateableElement-isTemplate, element:TemplateableElement-parameterableElements .

property:TemplateableElement-ownedTemplateSignature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateableElement-ownedTemplateSignature" ;
	rdfs:label "TemplateableElement-ownedTemplateSignature" ;
	uml-model:name "ownedTemplateSignature" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedTemplateSignature_template ;
	rdfs:range element:TemplateSignature ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The optional TemplateSignature specifying the formal TemplateParameters for this TemplateableElement. If a TemplateableElement has a TemplateSignature, then it is a template."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TemplateableElement-templateBinding rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateableElement-templateBinding" ;
	rdfs:label "TemplateableElement-templateBinding" ;
	uml-model:name "templateBinding" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_templateBinding_boundElement ;
	rdfs:range element:TemplateBinding ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'The optional TemplateBindings from this TemplateableElement to one or more templates."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:TemplateableElement-isTemplate rdfs:comment "'The query isTemplate() returns whether this TemplateableElement is actually a template."@en ;
	uml-model:rule element:TemplateableElement-isTemplate-spec ;
	uml-model:returns element:TemplateableElement-isTemplate-result .

element:TemplateableElement-isTemplate-spec rdf:type uml:Constraint ;
	uml-model:specification element:TemplateableElement-isTemplate-spec-_specification .

element:TemplateableElement-isTemplate-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedTemplateSignature <> null)"^^<http://www.omg.org/spec/OCL> .

element:TemplateableElement-isTemplate-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:TemplateableElement-parameterableElements rdfs:comment "'The query parameterableElements() returns the set of ParameterableElements that may be used as the parameteredElements for a TemplateParameter of this TemplateableElement. By default, this set includes all the ownedElements. Subclasses may override this operation if they choose to restrict the set of ParameterableElements."@en ;
	uml-model:rule element:TemplateableElement-parameterableElements-spec ;
	uml-model:returns element:TemplateableElement-parameterableElements-result .

element:TemplateableElement-parameterableElements-spec rdf:type uml:Constraint ;
	uml-model:specification element:TemplateableElement-parameterableElements-spec-_specification .

element:TemplateableElement-parameterableElements-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.allOwnedElements()->select(oclIsKindOf(ParameterableElement)).oclAsType(ParameterableElement)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:TemplateableElement-parameterableElements-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ParameterableElement ;
	uml-model:upperValue element:TemplateableElement-parameterableElements-result-_upperValue .

element:TemplateableElement-parameterableElements-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:TemplateBinding xmi:type uml:Class ;
	xmi:id "TemplateBinding" ;
	uml-model:name "TemplateBinding" ;
	rdfs:comment "'A TemplateBinding is a DirectedRelationship between a TemplateableElement and a template. A TemplateBinding specifies the TemplateParameterSubstitutions of actual parameters for the formal parameters of the template."@en ;
	uml-model:rule element:TemplateBinding-parameter_substitution_formal, element:TemplateBinding-one_parameter_substitution ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:TemplateBinding-boundElement, property:TemplateBinding-parameterSubstitution, property:TemplateBinding-signature .

element:TemplateBinding-parameter_substitution_formal rdfs:comment "'Each parameterSubstitution must refer to a formal TemplateParameter of the target TemplateSignature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateBinding-parameter_substitution_formal-_specification .

element:TemplateBinding-parameter_substitution_formal-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parameterSubstitution->forAll(b | signature.parameter->includes(b.formal))"^^<http://www.omg.org/spec/OCL> .

element:TemplateBinding-one_parameter_substitution rdfs:comment "'A TemplateBiinding contains at most one TemplateParameterSubstitution for each formal TemplateParameter of the target TemplateSignature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateBinding-one_parameter_substitution-_specification .

element:TemplateBinding-one_parameter_substitution-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "signature.parameter->forAll(p | parameterSubstitution->select(b | b.formal = p)->size() <= 1)"^^<http://www.omg.org/spec/OCL> .

property:TemplateBinding-boundElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateBinding-boundElement" ;
	rdfs:label "TemplateBinding-boundElement" ;
	uml-model:name "boundElement" ;
	uml-model:association uml-element:A_templateBinding_boundElement ;
	rdfs:range element:TemplateableElement ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'The TemplateableElement that is bound by this TemplateBinding."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TemplateBinding-parameterSubstitution rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateBinding-parameterSubstitution" ;
	rdfs:label "TemplateBinding-parameterSubstitution" ;
	uml-model:name "parameterSubstitution" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_parameterSubstitution_templateBinding ;
	rdfs:range element:TemplateParameterSubstitution ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The TemplateParameterSubstitutions owned by this TemplateBinding."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:TemplateBinding-signature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateBinding-signature" ;
	rdfs:label "TemplateBinding-signature" ;
	uml-model:name "signature" ;
	uml-model:association uml-element:A_signature_templateBinding ;
	rdfs:range element:TemplateSignature ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'The TemplateSignature for the template that is the target of this TemplateBinding."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TemplateParameter xmi:type uml:Class ;
	xmi:id "TemplateParameter" ;
	uml-model:name "TemplateParameter" ;
	rdfs:comment "'A TemplateParameter exposes a ParameterableElement as a formal parameter of a template."@en ;
	uml-model:rule element:TemplateParameter-must_be_compatible ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:TemplateParameter-default, property:TemplateParameter-ownedDefault, property:TemplateParameter-ownedParameteredElement, property:TemplateParameter-parameteredElement, property:TemplateParameter-signature .

element:TemplateParameter-must_be_compatible rdfs:comment "'The default must be compatible with the formal TemplateParameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateParameter-must_be_compatible-_specification .

element:TemplateParameter-must_be_compatible-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "default <> null implies default.isCompatibleWith(parameteredElement)"^^<http://www.omg.org/spec/OCL> .

property:TemplateParameter-default rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameter-default" ;
	rdfs:label "TemplateParameter-default" ;
	uml-model:name "default" ;
	uml-model:association uml-element:A_default_templateParameter ;
	rdfs:range element:ParameterableElement ;
	rdfs:comment "'The ParameterableElement that is the default for this formal TemplateParameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameter-ownedDefault rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameter-ownedDefault" ;
	rdfs:label "TemplateParameter-ownedDefault" ;
	uml-model:name "ownedDefault" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedDefault_templateParameter ;
	rdfs:range element:ParameterableElement ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:TemplateParameter-default ;
	rdfs:comment "'The ParameterableElement that is owned by this TemplateParameter for the purpose of providing a default."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameter-ownedParameteredElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameter-ownedParameteredElement" ;
	rdfs:label "TemplateParameter-ownedParameteredElement" ;
	uml-model:name "ownedParameteredElement" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameteredElement_owningTemplateParameter ;
	rdfs:range element:ParameterableElement ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:TemplateParameter-parameteredElement ;
	rdfs:comment "'The ParameterableElement that is owned by this TemplateParameter for the purpose of exposing it as the parameteredElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameter-parameteredElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameter-parameteredElement" ;
	rdfs:label "TemplateParameter-parameteredElement" ;
	uml-model:name "parameteredElement" ;
	uml-model:association uml-element:A_parameteredElement_templateParameter ;
	rdfs:range element:ParameterableElement ;
	rdfs:comment "'The ParameterableElement exposed by this TemplateParameter."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameter-signature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameter-signature" ;
	rdfs:label "TemplateParameter-signature" ;
	uml-model:name "signature" ;
	uml-model:association uml-element:A_ownedParameter_signature ;
	rdfs:range element:TemplateSignature ;
	uml-model:subsettedProperty uml-element:A_parameter_templateSignature-templateSignature, uml-element:Element-owner ;
	rdfs:comment "'The TemplateSignature that owns this TemplateParameter."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TemplateParameterSubstitution xmi:type uml:Class ;
	xmi:id "TemplateParameterSubstitution" ;
	uml-model:name "TemplateParameterSubstitution" ;
	rdfs:comment "'A TemplateParameterSubstitution relates the actual parameter to a formal TemplateParameter as part of a template binding."@en ;
	uml-model:rule element:TemplateParameterSubstitution-must_be_compatible ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:TemplateParameterSubstitution-actual, property:TemplateParameterSubstitution-formal, property:TemplateParameterSubstitution-ownedActual, property:TemplateParameterSubstitution-templateBinding .

element:TemplateParameterSubstitution-must_be_compatible rdfs:comment "'The actual ParameterableElement must be compatible with the formal TemplateParameter, e.g., the actual ParameterableElement for a Class TemplateParameter must be a Class."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateParameterSubstitution-must_be_compatible-_specification .

element:TemplateParameterSubstitution-must_be_compatible-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "actual->forAll(a | a.isCompatibleWith(formal.parameteredElement))"^^<http://www.omg.org/spec/OCL> .

property:TemplateParameterSubstitution-actual rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameterSubstitution-actual" ;
	rdfs:label "TemplateParameterSubstitution-actual" ;
	uml-model:name "actual" ;
	uml-model:association uml-element:A_actual_templateParameterSubstitution ;
	rdfs:range element:ParameterableElement ;
	rdfs:comment "'The ParameterableElement that is the actual parameter for this TemplateParameterSubstitution."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameterSubstitution-formal rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameterSubstitution-formal" ;
	rdfs:label "TemplateParameterSubstitution-formal" ;
	uml-model:name "formal" ;
	uml-model:association uml-element:A_formal_templateParameterSubstitution ;
	rdfs:range element:TemplateParameter ;
	rdfs:comment "'The formal TemplateParameter that is associated with this TemplateParameterSubstitution."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameterSubstitution-ownedActual rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameterSubstitution-ownedActual" ;
	rdfs:label "TemplateParameterSubstitution-ownedActual" ;
	uml-model:name "ownedActual" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedActual_owningTemplateParameterSubstitution ;
	rdfs:range element:ParameterableElement ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:TemplateParameterSubstitution-actual ;
	rdfs:comment "'The ParameterableElement that is owned by this TemplateParameterSubstitution as its actual parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:TemplateParameterSubstitution-templateBinding rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateParameterSubstitution-templateBinding" ;
	rdfs:label "TemplateParameterSubstitution-templateBinding" ;
	uml-model:name "templateBinding" ;
	uml-model:association uml-element:A_parameterSubstitution_templateBinding ;
	rdfs:range element:TemplateBinding ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The TemplateBinding that owns this TemplateParameterSubstitution."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TemplateSignature xmi:type uml:Class ;
	xmi:id "TemplateSignature" ;
	uml-model:name "TemplateSignature" ;
	rdfs:comment "'A Template Signature bundles the set of formal TemplateParameters for a template."@en ;
	uml-model:rule element:TemplateSignature-own_elements, element:TemplateSignature-unique_parameters ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:TemplateSignature-ownedParameter, property:TemplateSignature-parameter, property:TemplateSignature-template .

element:TemplateSignature-own_elements rdfs:comment "'Parameters must own the ParameterableElements they parameter or those ParameterableElements must be owned by the TemplateableElement being templated."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateSignature-own_elements-_specification .

element:TemplateSignature-own_elements-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "template.ownedElement->includesAll(parameter.parameteredElement->asSet() - parameter.ownedParameteredElement->asSet())"^^<http://www.omg.org/spec/OCL> .

element:TemplateSignature-unique_parameters rdfs:comment "'The names of the parameters of a TemplateSignature are unique."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TemplateSignature-unique_parameters-_specification .

element:TemplateSignature-unique_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parameter->forAll( p1, p2 | (p1 <> p2 and p1.parameteredElement.oclIsKindOf(NamedElement) and p2.parameteredElement.oclIsKindOf(NamedElement) ) implies\n   p1.parameteredElement.oclAsType(NamedElement).name <> p2.parameteredElement.oclAsType(NamedElement).name)"^^<http://www.omg.org/spec/OCL> .

property:TemplateSignature-ownedParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateSignature-ownedParameter" ;
	rdfs:label "TemplateSignature-ownedParameter" ;
	uml-model:name "ownedParameter" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameter_signature ;
	rdfs:range element:TemplateParameter ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:TemplateSignature-parameter ;
	rdfs:comment "'The formal parameters that are owned by this TemplateSignature."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:TemplateSignature-parameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateSignature-parameter" ;
	rdfs:label "TemplateSignature-parameter" ;
	uml-model:name "parameter" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_parameter_templateSignature ;
	rdfs:range element:TemplateParameter ;
	rdfs:comment "'The ordered set of all formal TemplateParameters for this TemplateSignature."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:TemplateSignature-template rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TemplateSignature-template" ;
	rdfs:label "TemplateSignature-template" ;
	uml-model:name "template" ;
	uml-model:association uml-element:A_ownedTemplateSignature_template ;
	rdfs:range element:TemplateableElement ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The TemplateableElement that owns this TemplateSignature."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Type xmi:type uml:Class ;
	xmi:id "Type" ;
	uml-model:name "Type" ;
	rdfs:comment "'A Type constrains the values represented by a TypedElement."@en ;
	rdfs:subClassOf element:PackageableElement ;
	uml-model:ownedAttribute property:Type-package ;
	uml-model:operation element:Type-conformsTo .

property:Type-package rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Type-package" ;
	rdfs:label "Type-package" ;
	uml-model:name "package" ;
	uml-model:association uml-element:A_ownedType_package ;
	rdfs:range element:Package ;
	uml-model:subsettedProperty uml-element:A_packagedElement_owningPackage-owningPackage ;
	rdfs:comment "'Specifies the owning Package of this Type, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Type-conformsTo rdfs:comment "'The query conformsTo() gives true for a Type that conforms to another. By default, two Types do not conform to each other. This query is intended to be redefined for specific conformance situations."@en ;
	uml-model:rule element:Type-conformsTo-spec ;
	uml-model:returns element:Type-conformsTo-result .

element:Type-conformsTo-spec rdf:type uml:Constraint ;
	uml-model:specification element:Type-conformsTo-spec-_specification .

element:Type-conformsTo-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:Type-conformsTo-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Type-conformsTo-other rdf:type uml:Parameter ;
	uml-model:name "other" ;
	uml-model:parameterType element:Type .

element:TypedElement xmi:type uml:Class ;
	xmi:id "TypedElement" ;
	uml-model:name "TypedElement" ;
	rdfs:comment "'A TypedElement is a NamedElement that may have a Type specified for it."@en ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:TypedElement-type .

property:TypedElement-type rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TypedElement-type" ;
	rdfs:label "TypedElement-type" ;
	uml-model:name "type" ;
	uml-model:association uml-element:A_type_typedElement ;
	rdfs:range element:Type ;
	rdfs:comment "'The type of the TypedElement."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Usage xmi:type uml:Class ;
	xmi:id "Usage" ;
	uml-model:name "Usage" ;
	rdfs:comment "'A Usage is a Dependency in which the client Element requires the supplier Element (or set of Elements) for its full implementation or operation."@en ;
	rdfs:subClassOf element:Dependency .

element:VisibilityKind xmi:type uml:Enumeration ;
	xmi:id "VisibilityKind" ;
	uml-model:name "VisibilityKind" ;
	rdfs:comment "'VisibilityKind is an enumeration type that defines literals to determine the visibility of Elements in a model."@en .

element:A_type_typedElement xmi:type uml:Association ;
	xmi:id "A_type_typedElement" ;
	uml-model:name "A_type_typedElement" .

element:A_type_typedElement-typedElement xmi:type uml:Property ;
	xmi:id "A_type_typedElement-typedElement" ;
	uml-model:name "typedElement" ;
	uml-model:type "TypedElement" ;
	uml-model:association uml-element:A_type_typedElement .

element:A_ownedParameter_signature xmi:type uml:Association ;
	xmi:id "A_ownedParameter_signature" ;
	uml-model:name "A_ownedParameter_signature" .

element:A_parameter_templateSignature xmi:type uml:Association ;
	xmi:id "A_parameter_templateSignature" ;
	uml-model:name "A_parameter_templateSignature" .

element:A_parameter_templateSignature-templateSignature xmi:type uml:Property ;
	xmi:id "A_parameter_templateSignature-templateSignature" ;
	uml-model:name "templateSignature" ;
	uml-model:type "TemplateSignature" ;
	uml-model:association uml-element:A_parameter_templateSignature .

element:A_actual_templateParameterSubstitution xmi:type uml:Association ;
	xmi:id "A_actual_templateParameterSubstitution" ;
	uml-model:name "A_actual_templateParameterSubstitution" .

element:A_actual_templateParameterSubstitution-templateParameterSubstitution xmi:type uml:Property ;
	xmi:id "A_actual_templateParameterSubstitution-templateParameterSubstitution" ;
	uml-model:name "templateParameterSubstitution" ;
	uml-model:type "TemplateParameterSubstitution" ;
	uml-model:association uml-element:A_actual_templateParameterSubstitution .

element:A_ownedActual_owningTemplateParameterSubstitution xmi:type uml:Association ;
	xmi:id "A_ownedActual_owningTemplateParameterSubstitution" ;
	uml-model:name "A_ownedActual_owningTemplateParameterSubstitution" ;
	rdfs:subClassOf element:A_actual_templateParameterSubstitution .

element:A_ownedActual_owningTemplateParameterSubstitution-owningTemplateParameterSubstitution xmi:type uml:Property ;
	xmi:id "A_ownedActual_owningTemplateParameterSubstitution-owningTemplateParameterSubstitution" ;
	uml-model:name "owningTemplateParameterSubstitution" ;
	uml-model:type "TemplateParameterSubstitution" ;
	uml-model:association uml-element:A_ownedActual_owningTemplateParameterSubstitution ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_formal_templateParameterSubstitution xmi:type uml:Association ;
	xmi:id "A_formal_templateParameterSubstitution" ;
	uml-model:name "A_formal_templateParameterSubstitution" .

element:A_formal_templateParameterSubstitution-templateParameterSubstitution xmi:type uml:Property ;
	xmi:id "A_formal_templateParameterSubstitution-templateParameterSubstitution" ;
	uml-model:name "templateParameterSubstitution" ;
	uml-model:type "TemplateParameterSubstitution" ;
	uml-model:association uml-element:A_formal_templateParameterSubstitution .

element:A_ownedDefault_templateParameter xmi:type uml:Association ;
	xmi:id "A_ownedDefault_templateParameter" ;
	uml-model:name "A_ownedDefault_templateParameter" ;
	rdfs:subClassOf element:A_default_templateParameter .

element:A_ownedDefault_templateParameter-templateParameter xmi:type uml:Property ;
	xmi:id "A_ownedDefault_templateParameter-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:type "TemplateParameter" ;
	uml-model:association uml-element:A_ownedDefault_templateParameter ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_ownedParameteredElement_owningTemplateParameter xmi:type uml:Association ;
	xmi:id "A_ownedParameteredElement_owningTemplateParameter" ;
	uml-model:name "A_ownedParameteredElement_owningTemplateParameter" .

element:A_default_templateParameter xmi:type uml:Association ;
	xmi:id "A_default_templateParameter" ;
	uml-model:name "A_default_templateParameter" .

element:A_default_templateParameter-templateParameter xmi:type uml:Property ;
	xmi:id "A_default_templateParameter-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:type "TemplateParameter" ;
	uml-model:association uml-element:A_default_templateParameter .

element:A_parameteredElement_templateParameter xmi:type uml:Association ;
	xmi:id "A_parameteredElement_templateParameter" ;
	uml-model:name "A_parameteredElement_templateParameter" .

element:A_signature_templateBinding xmi:type uml:Association ;
	xmi:id "A_signature_templateBinding" ;
	uml-model:name "A_signature_templateBinding" .

element:A_signature_templateBinding-templateBinding xmi:type uml:Property ;
	xmi:id "A_signature_templateBinding-templateBinding" ;
	uml-model:name "templateBinding" ;
	uml-model:type "TemplateBinding" ;
	uml-model:association uml-element:A_signature_templateBinding ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_parameterSubstitution_templateBinding xmi:type uml:Association ;
	xmi:id "A_parameterSubstitution_templateBinding" ;
	uml-model:name "A_parameterSubstitution_templateBinding" .

element:A_templateBinding_boundElement xmi:type uml:Association ;
	xmi:id "A_templateBinding_boundElement" ;
	uml-model:name "A_templateBinding_boundElement" .

element:A_ownedTemplateSignature_template xmi:type uml:Association ;
	xmi:id "A_ownedTemplateSignature_template" ;
	uml-model:name "A_ownedTemplateSignature_template" .

element:A_relatedElement_relationship xmi:type uml:Association ;
	xmi:id "A_relatedElement_relationship" ;
	uml-model:name "A_relatedElement_relationship" .

element:A_relatedElement_relationship-relationship xmi:type uml:Property ;
	xmi:id "A_relatedElement_relationship-relationship" ;
	uml-model:name "relationship" ;
	uml-model:type "Relationship" ;
	uml-model:association uml-element:A_relatedElement_relationship .

element:A_importedPackage_packageImport xmi:type uml:Association ;
	xmi:id "A_importedPackage_packageImport" ;
	uml-model:name "A_importedPackage_packageImport" .

element:A_importedPackage_packageImport-packageImport xmi:type uml:Property ;
	xmi:id "A_importedPackage_packageImport-packageImport" ;
	uml-model:name "packageImport" ;
	uml-model:type "PackageImport" ;
	uml-model:association uml-element:A_importedPackage_packageImport ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_elementImport_importingNamespace xmi:type uml:Association ;
	xmi:id "A_elementImport_importingNamespace" ;
	uml-model:name "A_elementImport_importingNamespace" .

element:A_ownedMember_namespace xmi:type uml:Association ;
	xmi:id "A_ownedMember_namespace" ;
	uml-model:name "A_ownedMember_namespace" .

element:A_ownedRule_context xmi:type uml:Association ;
	xmi:id "A_ownedRule_context" ;
	uml-model:name "A_ownedRule_context" .

element:A_packageImport_importingNamespace xmi:type uml:Association ;
	xmi:id "A_packageImport_importingNamespace" ;
	uml-model:name "A_packageImport_importingNamespace" .

element:A_member_memberNamespace xmi:type uml:Association ;
	xmi:id "A_member_memberNamespace" ;
	uml-model:name "A_member_memberNamespace" .

element:A_member_memberNamespace-memberNamespace xmi:type uml:Property ;
	xmi:id "A_member_memberNamespace-memberNamespace" ;
	uml-model:name "memberNamespace" ;
	uml-model:type "Namespace" ;
	uml-model:association uml-element:A_member_memberNamespace .

element:A_importedMember_namespace xmi:type uml:Association ;
	xmi:id "A_importedMember_namespace" ;
	uml-model:name "A_importedMember_namespace" .

element:A_importedMember_namespace-namespace xmi:type uml:Property ;
	xmi:id "A_importedMember_namespace-namespace" ;
	uml-model:name "namespace" ;
	uml-model:type "Namespace" ;
	uml-model:association uml-element:A_importedMember_namespace ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace .

element:A_nameExpression_namedElement xmi:type uml:Association ;
	xmi:id "A_nameExpression_namedElement" ;
	uml-model:name "A_nameExpression_namedElement" .

element:A_nameExpression_namedElement-namedElement xmi:type uml:Property ;
	xmi:id "A_nameExpression_namedElement-namedElement" ;
	uml-model:name "namedElement" ;
	uml-model:type "NamedElement" ;
	uml-model:association uml-element:A_nameExpression_namedElement ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_clientDependency_client xmi:type uml:Association ;
	xmi:id "A_clientDependency_client" ;
	uml-model:name "A_clientDependency_client" .

element:A_lowerValue_owningLower xmi:type uml:Association ;
	xmi:id "A_lowerValue_owningLower" ;
	uml-model:name "A_lowerValue_owningLower" .

element:A_lowerValue_owningLower-owningLower xmi:type uml:Property ;
	xmi:id "A_lowerValue_owningLower-owningLower" ;
	uml-model:name "owningLower" ;
	uml-model:type "MultiplicityElement" ;
	uml-model:association uml-element:A_lowerValue_owningLower ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_upperValue_owningUpper xmi:type uml:Association ;
	xmi:id "A_upperValue_owningUpper" ;
	uml-model:name "A_upperValue_owningUpper" .

element:A_upperValue_owningUpper-owningUpper xmi:type uml:Property ;
	xmi:id "A_upperValue_owningUpper-owningUpper" ;
	uml-model:name "owningUpper" ;
	uml-model:type "MultiplicityElement" ;
	uml-model:association uml-element:A_upperValue_owningUpper ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_importedElement_import xmi:type uml:Association ;
	xmi:id "A_importedElement_import" ;
	uml-model:name "A_importedElement_import" .

element:A_importedElement_import-import xmi:type uml:Property ;
	xmi:id "A_importedElement_import-import" ;
	uml-model:name "import" ;
	uml-model:type "ElementImport" ;
	uml-model:association uml-element:A_importedElement_import ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_ownedElement_owner xmi:type uml:Association ;
	xmi:id "A_ownedElement_owner" ;
	uml-model:name "A_ownedElement_owner" .

element:A_ownedComment_owningElement xmi:type uml:Association ;
	xmi:id "A_ownedComment_owningElement" ;
	uml-model:name "A_ownedComment_owningElement" .

element:A_ownedComment_owningElement-owningElement xmi:type uml:Property ;
	xmi:id "A_ownedComment_owningElement-owningElement" ;
	uml-model:name "owningElement" ;
	uml-model:type "Element" ;
	uml-model:association uml-element:A_ownedComment_owningElement ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_source_directedRelationship xmi:type uml:Association ;
	xmi:id "A_source_directedRelationship" ;
	uml-model:name "A_source_directedRelationship" .

element:A_source_directedRelationship-directedRelationship xmi:type uml:Property ;
	xmi:id "A_source_directedRelationship-directedRelationship" ;
	uml-model:name "directedRelationship" ;
	uml-model:type "DirectedRelationship" ;
	uml-model:association uml-element:A_source_directedRelationship ;
	uml-model:subsettedProperty uml-element:A_relatedElement_relationship-relationship .

element:A_target_directedRelationship xmi:type uml:Association ;
	xmi:id "A_target_directedRelationship" ;
	uml-model:name "A_target_directedRelationship" .

element:A_target_directedRelationship-directedRelationship xmi:type uml:Property ;
	xmi:id "A_target_directedRelationship-directedRelationship" ;
	uml-model:name "directedRelationship" ;
	uml-model:type "DirectedRelationship" ;
	uml-model:association uml-element:A_target_directedRelationship ;
	uml-model:subsettedProperty uml-element:A_relatedElement_relationship-relationship .

element:A_supplier_supplierDependency xmi:type uml:Association ;
	xmi:id "A_supplier_supplierDependency" ;
	uml-model:name "A_supplier_supplierDependency" .

element:A_supplier_supplierDependency-supplierDependency xmi:type uml:Property ;
	xmi:id "A_supplier_supplierDependency-supplierDependency" ;
	uml-model:name "supplierDependency" ;
	uml-model:type "Dependency" ;
	uml-model:association uml-element:A_supplier_supplierDependency ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship ;
	rdfs:comment "'Indicates the dependencies that reference the supplier."@en .

element:A_constrainedElement_constraint xmi:type uml:Association ;
	xmi:id "A_constrainedElement_constraint" ;
	uml-model:name "A_constrainedElement_constraint" .

element:A_constrainedElement_constraint-constraint xmi:type uml:Property ;
	xmi:id "A_constrainedElement_constraint-constraint" ;
	uml-model:name "constraint" ;
	uml-model:type "Constraint" ;
	uml-model:association uml-element:A_constrainedElement_constraint .

element:A_specification_owningConstraint xmi:type uml:Association ;
	xmi:id "A_specification_owningConstraint" ;
	uml-model:name "A_specification_owningConstraint" .

element:A_specification_owningConstraint-owningConstraint xmi:type uml:Property ;
	xmi:id "A_specification_owningConstraint-owningConstraint" ;
	uml-model:name "owningConstraint" ;
	uml-model:type "Constraint" ;
	uml-model:association uml-element:A_specification_owningConstraint ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_annotatedElement_comment xmi:type uml:Association ;
	xmi:id "A_annotatedElement_comment" ;
	uml-model:name "A_annotatedElement_comment" .

element:A_annotatedElement_comment-comment xmi:type uml:Property ;
	xmi:id "A_annotatedElement_comment-comment" ;
	uml-model:name "comment" ;
	uml-model:type "Comment" ;
	uml-model:association uml-element:A_annotatedElement_comment .

element:A_mapping_abstraction xmi:type uml:Association ;
	xmi:id "A_mapping_abstraction" ;
	uml-model:name "A_mapping_abstraction" .

element:A_mapping_abstraction-abstraction xmi:type uml:Property ;
	xmi:id "A_mapping_abstraction-abstraction" ;
	uml-model:name "abstraction" ;
	uml-model:type "Abstraction" ;
	uml-model:association uml-element:A_mapping_abstraction ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:CommonBehavior xmi:type uml:Package ;
	xmi:id "CommonBehavior" ;
	uml-model:name "CommonBehavior" .

uml-import:CommonBehavior-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "CommonBehavior-_packageImport.0" ;
	uml-model:packagedElement element:CommonBehavior ;
	uml-model:importedPackage element:Classification .

uml-import:CommonBehavior-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "CommonBehavior-_packageImport.1" ;
	uml-model:packagedElement element:CommonBehavior ;
	uml-model:importedPackage element:SimpleClassifiers .

element:AnyReceiveEvent xmi:type uml:Class ;
	xmi:id "AnyReceiveEvent" ;
	uml-model:name "AnyReceiveEvent" ;
	rdfs:comment "'A trigger for an AnyReceiveEvent is triggered by the receipt of any message that is not explicitly handled by any related trigger."@en ;
	rdfs:subClassOf element:MessageEvent .

element:Behavior xmi:type uml:Class ;
	xmi:id "Behavior" ;
	uml-model:name "Behavior" ;
	rdfs:comment "'Behavior is a specification of how its context BehavioredClassifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution."@en ;
	uml-model:rule element:Behavior-most_one_behavior, element:Behavior-parameters_match, element:Behavior-feature_of_context_classifier ;
	rdfs:subClassOf element:Class ;
	uml-model:ownedAttribute property:Behavior-context, property:Behavior-isReentrant, property:Behavior-ownedParameter, property:Behavior-ownedParameterSet, property:Behavior-postcondition, property:Behavior-precondition, property:Behavior-specification, property:Behavior-redefinedBehavior ;
	uml-model:operation element:Behavior-context.1, element:Behavior-behavioredClassifier, element:Behavior-inputParameters, element:Behavior-outputParameters .

element:Behavior-most_one_behavior rdfs:comment "'There may be at most one Behavior for a given pairing of BehavioredClassifier (as owner of the Behavior) and BehavioralFeature (as specification of the Behavior)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-most_one_behavior-_specification .

element:Behavior-most_one_behavior-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "specification <> null implies _'context'.ownedBehavior->select(specification=self.specification)->size() = 1"^^<http://www.omg.org/spec/OCL> .

element:Behavior-parameters_match rdfs:comment "'If a Behavior has a specification BehavioralFeature, then it must have the same number of ownedParameters as its specification. The Behavior Parameters must also &#34;match&#34; the BehavioralParameter Parameters, but the exact requirements for this matching are not formalized."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-parameters_match-_specification .

element:Behavior-parameters_match-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "specification <> null implies ownedParameter->size() = specification.ownedParameter->size()"^^<http://www.omg.org/spec/OCL> .

element:Behavior-feature_of_context_classifier rdfs:comment "'The specification BehavioralFeature must be a feature (possibly inherited) of the context BehavioredClassifier of the Behavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-feature_of_context_classifier-_specification .

element:Behavior-feature_of_context_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "_'context'.feature->includes(specification)"^^<http://www.omg.org/spec/OCL> .

property:Behavior-context rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-context" ;
	rdfs:label "Behavior-context" ;
	uml-model:name "context" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_context_behavior ;
	rdfs:range element:BehavioredClassifier ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The BehavioredClassifier that is the context for the execution of the Behavior. A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior. For example, following this algorithm, the context of an entry Behavior in a StateMachine is the BehavioredClassifier that owns the StateMachine. The features of the context BehavioredClassifier as well as the Elements visible to the context Classifier are visible to the Behavior."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Behavior-context.1-spec .

property:Behavior-isReentrant rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-isReentrant" ;
	rdfs:label "Behavior-isReentrant" ;
	uml-model:name "isReentrant" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Tells whether the Behavior can be invoked while it is still executing from a previous invocation."@en ;
	xmi:defaultValue element:Behavior-isReentrant-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Behavior-isReentrant-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Behavior-isReentrant-_defaultValue" ;
	uml-model:value "true" .

property:Behavior-ownedParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-ownedParameter" ;
	rdfs:label "Behavior-ownedParameter" ;
	uml-model:name "ownedParameter" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameter_behavior ;
	rdfs:range element:Parameter ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'References a list of Parameters to the Behavior which describes the order and type of arguments that can be given when the Behavior is invoked and of the values which will be returned when the Behavior completes its execution."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Behavior-ownedParameterSet rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-ownedParameterSet" ;
	rdfs:label "Behavior-ownedParameterSet" ;
	uml-model:name "ownedParameterSet" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameterSet_behavior ;
	rdfs:range element:ParameterSet ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ParameterSets owned by this Behavior."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Behavior-postcondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-postcondition" ;
	rdfs:label "Behavior-postcondition" ;
	uml-model:name "postcondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_postcondition_behavior ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'An optional set of Constraints specifying what is fulfilled after the execution of the Behavior is completed, if its precondition was fulfilled before its invocation."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Behavior-precondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-precondition" ;
	rdfs:label "Behavior-precondition" ;
	uml-model:name "precondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_precondition_behavior ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'An optional set of Constraints specifying what must be fulfilled before the Behavior is invoked."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Behavior-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-specification" ;
	rdfs:label "Behavior-specification" ;
	uml-model:name "specification" ;
	uml-model:association uml-element:A_method_specification ;
	rdfs:range element:BehavioralFeature ;
	rdfs:comment "'Designates a BehavioralFeature that the Behavior implements. The BehavioralFeature must be owned by the BehavioredClassifier that owns the Behavior or be inherited by it. The Parameters of the BehavioralFeature and the implementing Behavior must match. A Behavior does not need to have a specification, in which case it either is the classifierBehavior of a BehavioredClassifier or it can only be invoked by another Behavior of the Classifier."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Behavior-redefinedBehavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Behavior-redefinedBehavior" ;
	rdfs:label "Behavior-redefinedBehavior" ;
	uml-model:name "redefinedBehavior" ;
	uml-model:association uml-element:A_redefinedBehavior_behavior ;
	rdfs:range element:Behavior ;
	uml-model:subsettedProperty uml-element:Classifier-redefinedClassifier ;
	rdfs:comment "'References the Behavior that this Behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the Behavior implements a BehavioralFeature, it replaces the redefined Behavior. If the Behavior is a classifierBehavior, it extends the redefined Behavior."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Behavior-context.1 rdfs:comment "'A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior. "@en ;
	uml-model:returns element:Behavior-context.1-result .

element:Behavior-context.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-context.1-spec-_specification .

element:Behavior-context.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if nestingClass <> null then\n    null\nelse\n    let b:BehavioredClassifier = self.behavioredClassifier(self.owner) in\n    if b.oclIsKindOf(Behavior) and b.oclAsType(Behavior)._'context' <> null then \n        b.oclAsType(Behavior)._'context'\n    else \n        b \n    endif\nendif\n        )"^^<http://www.omg.org/spec/OCL> .

element:Behavior-context.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:BehavioredClassifier .

element:Behavior-behavioredClassifier rdfs:comment "'The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any."@en ;
	uml-model:rule element:Behavior-behavioredClassifier-spec ;
	uml-model:returns element:Behavior-behavioredClassifier-result .

element:Behavior-behavioredClassifier-spec rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-behavioredClassifier-spec-_specification .

element:Behavior-behavioredClassifier-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if from.oclIsKindOf(BehavioredClassifier) then\n    from.oclAsType(BehavioredClassifier)\nelse if from.owner = null then\n    null\nelse\n    self.behavioredClassifier(from.owner)\nendif\nendif"^^<http://www.omg.org/spec/OCL> .

element:Behavior-behavioredClassifier-from rdf:type uml:Parameter ;
	uml-model:name "from" ;
	uml-model:parameterType element:Element .

element:Behavior-behavioredClassifier-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:BehavioredClassifier .

element:Behavior-inputParameters rdfs:comment "'The in and inout ownedParameters of the Behavior."@en ;
	uml-model:rule element:Behavior-inputParameters-spec ;
	uml-model:returns element:Behavior-inputParameters-result .

element:Behavior-inputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-inputParameters-spec-_specification .

element:Behavior-inputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedParameter->select(direction=ParameterDirectionKind::_'in' or direction=ParameterDirectionKind::inout))"^^<http://www.omg.org/spec/OCL> .

element:Behavior-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:Behavior-inputParameters-result-_upperValue .

element:Behavior-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Behavior-outputParameters rdfs:comment "'The out, inout and return ownedParameters."@en ;
	uml-model:rule element:Behavior-outputParameters-spec ;
	uml-model:returns element:Behavior-outputParameters-result .

element:Behavior-outputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:Behavior-outputParameters-spec-_specification .

element:Behavior-outputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedParameter->select(direction=ParameterDirectionKind::out or direction=ParameterDirectionKind::inout or direction=ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

element:Behavior-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:Behavior-outputParameters-result-_upperValue .

element:Behavior-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallEvent xmi:type uml:Class ;
	xmi:id "CallEvent" ;
	uml-model:name "CallEvent" ;
	rdfs:comment "'A CallEvent models the receipt by an object of a message invoking a call of an Operation."@en ;
	rdfs:subClassOf element:MessageEvent ;
	uml-model:ownedAttribute property:CallEvent-operation .

property:CallEvent-operation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CallEvent-operation" ;
	rdfs:label "CallEvent-operation" ;
	uml-model:name "operation" ;
	uml-model:association uml-element:A_operation_callEvent ;
	rdfs:range element:Operation ;
	rdfs:comment "'Designates the Operation whose invocation raised the CalEvent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ChangeEvent xmi:type uml:Class ;
	xmi:id "ChangeEvent" ;
	uml-model:name "ChangeEvent" ;
	rdfs:comment "'A ChangeEvent models a change in the system configuration that makes a condition true."@en ;
	rdfs:subClassOf element:Event ;
	uml-model:ownedAttribute property:ChangeEvent-changeExpression .

property:ChangeEvent-changeExpression rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ChangeEvent-changeExpression" ;
	rdfs:label "ChangeEvent-changeExpression" ;
	uml-model:name "changeExpression" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_changeExpression_changeEvent ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Boolean-valued ValueSpecification that will result in a ChangeEvent whenever its value changes from false to true."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Event xmi:type uml:Class ;
	xmi:id "Event" ;
	uml-model:name "Event" ;
	rdfs:comment "'An Event is the specification of some occurrence that may potentially trigger effects by an object."@en ;
	rdfs:subClassOf element:PackageableElement .

element:FunctionBehavior xmi:type uml:Class ;
	xmi:id "FunctionBehavior" ;
	uml-model:name "FunctionBehavior" ;
	rdfs:comment "'A FunctionBehavior is an OpaqueBehavior that does not access or modify any objects or other external data."@en ;
	uml-model:rule element:FunctionBehavior-one_output_parameter, element:FunctionBehavior-types_of_parameters ;
	rdfs:subClassOf element:OpaqueBehavior ;
	uml-model:operation element:FunctionBehavior-hasAllDataTypeAttributes .

element:FunctionBehavior-one_output_parameter rdfs:comment "'A FunctionBehavior has at least one output Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FunctionBehavior-one_output_parameter-_specification .

element:FunctionBehavior-one_output_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.ownedParameter->\n  select(p | p.direction = ParameterDirectionKind::out or p.direction= ParameterDirectionKind::inout or p.direction= ParameterDirectionKind::return)->size() >= 1"^^<http://www.omg.org/spec/OCL> .

element:FunctionBehavior-types_of_parameters rdfs:comment "'The types of the ownedParameters are all DataTypes, which may not nest anything but other DataTypes."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:FunctionBehavior-types_of_parameters-_specification .

element:FunctionBehavior-types_of_parameters-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "ownedParameter->forAll(p | p.type <> null and\n  p.type.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p.type.oclAsType(DataType)))"^^<http://www.omg.org/spec/OCL> .

element:FunctionBehavior-hasAllDataTypeAttributes rdfs:comment "'The hasAllDataTypeAttributes query tests whether the types of the attributes of the given DataType are all DataTypes, and similarly for all those DataTypes."@en ;
	uml-model:rule element:FunctionBehavior-hasAllDataTypeAttributes-spec ;
	uml-model:returns element:FunctionBehavior-hasAllDataTypeAttributes-result .

element:FunctionBehavior-hasAllDataTypeAttributes-spec rdf:type uml:Constraint ;
	uml-model:specification element:FunctionBehavior-hasAllDataTypeAttributes-spec-_specification .

element:FunctionBehavior-hasAllDataTypeAttributes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (d.ownedAttribute->forAll(a |\n    a.type.oclIsKindOf(DataType) and\n      hasAllDataTypeAttributes(a.type.oclAsType(DataType))))"^^<http://www.omg.org/spec/OCL> .

element:FunctionBehavior-hasAllDataTypeAttributes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:FunctionBehavior-hasAllDataTypeAttributes-d rdf:type uml:Parameter ;
	uml-model:name "d" ;
	uml-model:parameterType element:DataType .

element:MessageEvent xmi:type uml:Class ;
	xmi:id "MessageEvent" ;
	uml-model:name "MessageEvent" ;
	rdfs:comment "'A MessageEvent specifies the receipt by an object of either an Operation call or a Signal instance."@en ;
	rdfs:subClassOf element:Event .

element:OpaqueBehavior xmi:type uml:Class ;
	xmi:id "OpaqueBehavior" ;
	uml-model:name "OpaqueBehavior" ;
	rdfs:comment "'An OpaqueBehavior is a Behavior whose specification is given in a textual language other than UML."@en ;
	rdfs:subClassOf element:Behavior ;
	uml-model:ownedAttribute property:OpaqueBehavior-body, property:OpaqueBehavior-language .

property:OpaqueBehavior-body rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueBehavior-body" ;
	rdfs:label "OpaqueBehavior-body" ;
	uml-model:name "body" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Specifies the behavior in one or more languages."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueBehavior-language rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueBehavior-language" ;
	rdfs:label "OpaqueBehavior-language" ;
	uml-model:name "language" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Languages the body strings use in the same order as the body strings."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:SignalEvent xmi:type uml:Class ;
	xmi:id "SignalEvent" ;
	uml-model:name "SignalEvent" ;
	rdfs:comment "'A SignalEvent represents the receipt of an asynchronous Signal instance."@en ;
	rdfs:subClassOf element:MessageEvent ;
	uml-model:ownedAttribute property:SignalEvent-signal .

property:SignalEvent-signal rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SignalEvent-signal" ;
	rdfs:label "SignalEvent-signal" ;
	uml-model:name "signal" ;
	uml-model:association uml-element:A_signal_signalEvent ;
	rdfs:range element:Signal ;
	rdfs:comment "'The specific Signal that is associated with this SignalEvent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TimeEvent xmi:type uml:Class ;
	xmi:id "TimeEvent" ;
	uml-model:name "TimeEvent" ;
	rdfs:comment "'A TimeEvent is an Event that occurs at a specific point in time."@en ;
	uml-model:rule element:TimeEvent-when_non_negative ;
	rdfs:subClassOf element:Event ;
	uml-model:ownedAttribute property:TimeEvent-isRelative, property:TimeEvent-when .

element:TimeEvent-when_non_negative rdfs:comment "'The ValueSpecification when must return a non-negative Integer."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TimeEvent-when_non_negative-_specification .

element:TimeEvent-when_non_negative-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "when.integerValue() >= 0"^^<http://www.omg.org/spec/OCL> .

property:TimeEvent-isRelative rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeEvent-isRelative" ;
	rdfs:label "TimeEvent-isRelative" ;
	uml-model:name "isRelative" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the TimeEvent is specified as an absolute or relative time."@en ;
	xmi:defaultValue element:TimeEvent-isRelative-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:TimeEvent-isRelative-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "TimeEvent-isRelative-_defaultValue" .

property:TimeEvent-when rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TimeEvent-when" ;
	rdfs:label "TimeEvent-when" ;
	uml-model:name "when" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_when_timeEvent ;
	rdfs:range element:TimeExpression ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies the time of the TimeEvent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Trigger xmi:type uml:Class ;
	xmi:id "Trigger" ;
	uml-model:name "Trigger" ;
	rdfs:comment "'A Trigger specifies a specific point  at which an Event occurrence may trigger an effect in a Behavior. A Trigger may be qualified by the Port on which the Event occurred."@en ;
	uml-model:rule element:Trigger-trigger_with_ports ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:Trigger-event, property:Trigger-port .

element:Trigger-trigger_with_ports rdfs:comment "'If a Trigger specifies one or more ports, the event of the Trigger must be a MessageEvent."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Trigger-trigger_with_ports-_specification .

element:Trigger-trigger_with_ports-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "port->notEmpty() implies event.oclIsKindOf(MessageEvent)"^^<http://www.omg.org/spec/OCL> .

property:Trigger-event rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Trigger-event" ;
	rdfs:label "Trigger-event" ;
	uml-model:name "event" ;
	uml-model:association uml-element:A_event_trigger ;
	rdfs:range element:Event ;
	rdfs:comment "'The Event that detected by the Trigger."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Trigger-port rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Trigger-port" ;
	rdfs:label "Trigger-port" ;
	uml-model:name "port" ;
	uml-model:association uml-element:A_port_trigger ;
	rdfs:range element:Port ;
	rdfs:comment "'A optional Port of through which the given effect is detected."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:A_event_trigger xmi:type uml:Association ;
	xmi:id "A_event_trigger" ;
	uml-model:name "A_event_trigger" .

element:A_event_trigger-trigger xmi:type uml:Property ;
	xmi:id "A_event_trigger-trigger" ;
	uml-model:name "trigger" ;
	uml-model:type "Trigger" ;
	uml-model:association uml-element:A_event_trigger .

element:A_port_trigger xmi:type uml:Association ;
	xmi:id "A_port_trigger" ;
	uml-model:name "A_port_trigger" .

element:A_port_trigger-trigger xmi:type uml:Property ;
	xmi:id "A_port_trigger-trigger" ;
	uml-model:name "trigger" ;
	uml-model:type "Trigger" ;
	uml-model:association uml-element:A_port_trigger .

element:A_when_timeEvent xmi:type uml:Association ;
	xmi:id "A_when_timeEvent" ;
	uml-model:name "A_when_timeEvent" .

element:A_when_timeEvent-timeEvent xmi:type uml:Property ;
	xmi:id "A_when_timeEvent-timeEvent" ;
	uml-model:name "timeEvent" ;
	uml-model:type "TimeEvent" ;
	uml-model:association uml-element:A_when_timeEvent ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_signal_signalEvent xmi:type uml:Association ;
	xmi:id "A_signal_signalEvent" ;
	uml-model:name "A_signal_signalEvent" .

element:A_signal_signalEvent-signalEvent xmi:type uml:Property ;
	xmi:id "A_signal_signalEvent-signalEvent" ;
	uml-model:name "signalEvent" ;
	uml-model:type "SignalEvent" ;
	uml-model:association uml-element:A_signal_signalEvent .

element:A_changeExpression_changeEvent xmi:type uml:Association ;
	xmi:id "A_changeExpression_changeEvent" ;
	uml-model:name "A_changeExpression_changeEvent" .

element:A_changeExpression_changeEvent-changeEvent xmi:type uml:Property ;
	xmi:id "A_changeExpression_changeEvent-changeEvent" ;
	uml-model:name "changeEvent" ;
	uml-model:type "ChangeEvent" ;
	uml-model:association uml-element:A_changeExpression_changeEvent ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_operation_callEvent xmi:type uml:Association ;
	xmi:id "A_operation_callEvent" ;
	uml-model:name "A_operation_callEvent" .

element:A_operation_callEvent-callEvent xmi:type uml:Property ;
	xmi:id "A_operation_callEvent-callEvent" ;
	uml-model:name "callEvent" ;
	uml-model:type "CallEvent" ;
	uml-model:association uml-element:A_operation_callEvent .

element:A_ownedParameterSet_behavior xmi:type uml:Association ;
	xmi:id "A_ownedParameterSet_behavior" ;
	uml-model:name "A_ownedParameterSet_behavior" .

element:A_ownedParameterSet_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_ownedParameterSet_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_ownedParameterSet_behavior ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_context_behavior xmi:type uml:Association ;
	xmi:id "A_context_behavior" ;
	uml-model:name "A_context_behavior" .

element:A_context_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_context_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_context_behavior ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement .

element:A_precondition_behavior xmi:type uml:Association ;
	xmi:id "A_precondition_behavior" ;
	uml-model:name "A_precondition_behavior" .

element:A_precondition_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_precondition_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_precondition_behavior ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_postcondition_behavior xmi:type uml:Association ;
	xmi:id "A_postcondition_behavior" ;
	uml-model:name "A_postcondition_behavior" .

element:A_postcondition_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_postcondition_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_postcondition_behavior ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_redefinedBehavior_behavior xmi:type uml:Association ;
	xmi:id "A_redefinedBehavior_behavior" ;
	uml-model:name "A_redefinedBehavior_behavior" .

element:A_redefinedBehavior_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_redefinedBehavior_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_redefinedBehavior_behavior ;
	uml-model:subsettedProperty uml-element:A_redefinedClassifier_classifier-classifier .

element:A_ownedParameter_behavior xmi:type uml:Association ;
	xmi:id "A_ownedParameter_behavior" ;
	uml-model:name "A_ownedParameter_behavior" .

element:A_ownedParameter_behavior-behavior xmi:type uml:Property ;
	xmi:id "A_ownedParameter_behavior-behavior" ;
	uml-model:name "behavior" ;
	uml-model:type "Behavior" ;
	uml-model:association uml-element:A_ownedParameter_behavior ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:Classification xmi:type uml:Package ;
	xmi:id "Classification" ;
	uml-model:name "Classification" .

uml-import:Classification-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Classification-_packageImport.0" ;
	uml-model:packagedElement element:Classification ;
	uml-model:importedPackage element:CommonStructure .

uml-import:Classification-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Classification-_packageImport.1" ;
	uml-model:packagedElement element:Classification ;
	uml-model:importedPackage element:Deployments .

uml-import:Classification-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "Classification-_packageImport.2" ;
	uml-model:packagedElement element:Classification ;
	uml-model:importedPackage element:CommonBehavior .

element:Substitution xmi:type uml:Class ;
	xmi:id "Substitution" ;
	uml-model:name "Substitution" ;
	rdfs:comment "'A substitution is a relationship between two classifiers signifying that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."@en ;
	rdfs:subClassOf element:Realization ;
	uml-model:ownedAttribute property:Substitution-contract, property:Substitution-substitutingClassifier .

property:Substitution-contract rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Substitution-contract" ;
	rdfs:label "Substitution-contract" ;
	uml-model:name "contract" ;
	uml-model:association uml-element:A_contract_substitution ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:Dependency-supplier ;
	rdfs:comment "'The contract with which the substituting classifier complies."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Substitution-substitutingClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Substitution-substitutingClassifier" ;
	rdfs:label "Substitution-substitutingClassifier" ;
	uml-model:name "substitutingClassifier" ;
	uml-model:association uml-element:A_substitution_substitutingClassifier ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:Dependency-client, uml-element:Element-owner ;
	rdfs:comment "'Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:BehavioralFeature xmi:type uml:Class ;
	xmi:id "BehavioralFeature" ;
	uml-model:name "BehavioralFeature" ;
	rdfs:comment "'A BehavioralFeature is a feature of a Classifier that specifies an aspect of the behavior of its instances.  A BehavioralFeature is implemented (realized) by a Behavior. A BehavioralFeature specifies that a Classifier will respond to a designated request by invoking its implementing method."@en ;
	uml-model:rule element:BehavioralFeature-abstract_no_method ;
	rdfs:subClassOf element:Feature, element:Namespace ;
	uml-model:ownedAttribute property:BehavioralFeature-concurrency, property:BehavioralFeature-isAbstract, property:BehavioralFeature-method, property:BehavioralFeature-ownedParameter, property:BehavioralFeature-ownedParameterSet, property:BehavioralFeature-raisedException ;
	uml-model:operation element:BehavioralFeature-isDistinguishableFrom, element:BehavioralFeature-inputParameters, element:BehavioralFeature-outputParameters .

element:BehavioralFeature-abstract_no_method rdfs:comment "'When isAbstract is true there are no methods."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:BehavioralFeature-abstract_no_method-_specification .

element:BehavioralFeature-abstract_no_method-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isAbstract implies method->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:BehavioralFeature-concurrency rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-concurrency" ;
	rdfs:label "BehavioralFeature-concurrency" ;
	uml-model:name "concurrency" ;
	rdfs:range element:CallConcurrencyKind ;
	rdfs:comment "'Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a Class with isActive being false). Active instances control access to their own BehavioralFeatures."@en ;
	xmi:defaultValue element:BehavioralFeature-concurrency-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:BehavioralFeature-concurrency-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "BehavioralFeature-concurrency-_defaultValue" .

property:BehavioralFeature-isAbstract rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-isAbstract" ;
	rdfs:label "BehavioralFeature-isAbstract" ;
	uml-model:name "isAbstract" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, then the BehavioralFeature does not have an implementation, and one must be supplied by a more specific Classifier. If false, the BehavioralFeature must have an implementation in the Classifier or one must be inherited."@en ;
	xmi:defaultValue element:BehavioralFeature-isAbstract-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:BehavioralFeature-isAbstract-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "BehavioralFeature-isAbstract-_defaultValue" .

property:BehavioralFeature-method rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-method" ;
	rdfs:label "BehavioralFeature-method" ;
	uml-model:name "method" ;
	uml-model:association uml-element:A_method_specification ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior that implements the BehavioralFeature. There may be at most one Behavior for a particular pairing of a Classifier (as owner of the Behavior) and a BehavioralFeature (as specification of the Behavior)."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:BehavioralFeature-ownedParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-ownedParameter" ;
	rdfs:label "BehavioralFeature-ownedParameter" ;
	uml-model:name "ownedParameter" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameter_ownerFormalParam ;
	rdfs:range element:Parameter ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ordered set of formal Parameters of this BehavioralFeature."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:BehavioralFeature-ownedParameterSet rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-ownedParameterSet" ;
	rdfs:label "BehavioralFeature-ownedParameterSet" ;
	uml-model:name "ownedParameterSet" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameterSet_behavioralFeature ;
	rdfs:range element:ParameterSet ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The ParameterSets owned by this BehavioralFeature."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:BehavioralFeature-raisedException rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BehavioralFeature-raisedException" ;
	rdfs:label "BehavioralFeature-raisedException" ;
	uml-model:name "raisedException" ;
	uml-model:association uml-element:A_raisedException_behavioralFeature ;
	rdfs:range element:Type ;
	rdfs:comment "'The Types representing exceptions that may be raised during an invocation of this BehavioralFeature."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:BehavioralFeature-isDistinguishableFrom uml-model:redefines element:NamedElement-isDistinguishableFrom ;
	rdfs:comment "'The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they must have different signatures."@en ;
	uml-model:rule element:BehavioralFeature-isDistinguishableFrom-spec ;
	uml-model:returns element:BehavioralFeature-isDistinguishableFrom-result .

element:BehavioralFeature-isDistinguishableFrom-spec rdf:type uml:Constraint ;
	uml-model:specification element:BehavioralFeature-isDistinguishableFrom-spec-_specification .

element:BehavioralFeature-isDistinguishableFrom-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((n.oclIsKindOf(BehavioralFeature) and ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()) implies\n  Set{self}->including(n.oclAsType(BehavioralFeature))->isUnique(ownedParameter->collect(p|\n  Tuple { name=p.name, type=p.type,effect=p.effect,direction=p.direction,isException=p.isException,\n              isStream=p.isStream,isOrdered=p.isOrdered,isUnique=p.isUnique,lower=p.lower, upper=p.upper }))\n  )"^^<http://www.omg.org/spec/OCL> .

element:BehavioralFeature-isDistinguishableFrom-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:BehavioralFeature-isDistinguishableFrom-n rdf:type uml:Parameter ;
	uml-model:name "n" ;
	uml-model:parameterType element:NamedElement .

element:BehavioralFeature-isDistinguishableFrom-ns rdf:type uml:Parameter ;
	uml-model:name "ns" ;
	uml-model:parameterType element:Namespace .

element:BehavioralFeature-inputParameters rdfs:comment "'The ownedParameters with direction in and inout."@en ;
	uml-model:rule element:BehavioralFeature-inputParameters-spec ;
	uml-model:returns element:BehavioralFeature-inputParameters-result .

element:BehavioralFeature-inputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:BehavioralFeature-inputParameters-spec-_specification .

element:BehavioralFeature-inputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedParameter->select(direction=ParameterDirectionKind::_'in' or direction=ParameterDirectionKind::inout))"^^<http://www.omg.org/spec/OCL> .

element:BehavioralFeature-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:BehavioralFeature-inputParameters-result-_upperValue .

element:BehavioralFeature-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:BehavioralFeature-outputParameters rdfs:comment "'The ownedParameters with direction out, inout, or return."@en ;
	uml-model:rule element:BehavioralFeature-outputParameters-spec ;
	uml-model:returns element:BehavioralFeature-outputParameters-result .

element:BehavioralFeature-outputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:BehavioralFeature-outputParameters-spec-_specification .

element:BehavioralFeature-outputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedParameter->select(direction=ParameterDirectionKind::out or direction=ParameterDirectionKind::inout or direction=ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

element:BehavioralFeature-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:BehavioralFeature-outputParameters-result-_upperValue .

element:BehavioralFeature-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier xmi:type uml:Class ;
	xmi:id "Classifier" ;
	uml-model:name "Classifier" ;
	rdfs:comment "'A Classifier represents a classification of instances according to their Features."@en ;
	uml-model:rule element:Classifier-specialize_type, element:Classifier-maps_to_generalization_set, element:Classifier-non_final_parents, element:Classifier-no_cycles_in_generalization ;
	rdfs:subClassOf element:Namespace, element:Type, element:TemplateableElement, element:RedefinableElement ;
	uml-model:ownedAttribute property:Classifier-attribute, property:Classifier-collaborationUse, property:Classifier-feature, property:Classifier-general, property:Classifier-generalization, property:Classifier-inheritedMember, property:Classifier-isAbstract, property:Classifier-isFinalSpecialization, property:Classifier-ownedTemplateSignature, property:Classifier-ownedUseCase, property:Classifier-powertypeExtent, property:Classifier-redefinedClassifier, property:Classifier-representation, property:Classifier-substitution, property:Classifier-templateParameter, property:Classifier-useCase ;
	uml-model:operation element:Classifier-allFeatures, element:Classifier-allParents, element:Classifier-conformsTo, element:Classifier-general.1, element:Classifier-hasVisibilityOf, element:Classifier-inherit, element:Classifier-inheritableMembers, element:Classifier-inheritedMember.1, element:Classifier-isTemplate, element:Classifier-maySpecializeType, element:Classifier-parents, element:Classifier-directlyRealizedInterfaces, element:Classifier-directlyUsedInterfaces, element:Classifier-allRealizedInterfaces, element:Classifier-allUsedInterfaces, element:Classifier-isSubstitutableFor, element:Classifier-allAttributes, element:Classifier-allSlottableFeatures .

element:Classifier-specialize_type rdfs:comment "'A Classifier may only specialize Classifiers of a valid type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-specialize_type-_specification .

element:Classifier-specialize_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parents()->forAll(c | self.maySpecializeType(c))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-maps_to_generalization_set rdfs:comment "'The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances also be its subclasses."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-maps_to_generalization_set-_specification .

element:Classifier-maps_to_generalization_set-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "powertypeExtent->forAll( gs | \n  gs.generalization->forAll( gen | \n    not (gen.general = self) and not gen.general.allParents()->includes(self) and not (gen.specific = self) and not self.allParents()->includes(gen.specific) \n  ))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-non_final_parents rdfs:comment "'The parents of a Classifier must be non-final."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-non_final_parents-_specification .

element:Classifier-non_final_parents-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parents()->forAll(not isFinalSpecialization)"^^<http://www.omg.org/spec/OCL> .

element:Classifier-no_cycles_in_generalization rdfs:comment "'Generalization hierarchies must be directed and acyclical. A Classifier can not be both a transitively general and transitively specific Classifier of the same Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-no_cycles_in_generalization-_specification .

element:Classifier-no_cycles_in_generalization-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not allParents()->includes(self)"^^<http://www.omg.org/spec/OCL> .

property:Classifier-attribute rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-attribute" ;
	rdfs:label "Classifier-attribute" ;
	uml-model:name "attribute" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_attribute_classifier ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement, uml-element:Classifier-feature ;
	rdfs:comment "'All of the Properties that are direct (i.e., not inherited or imported) attributes of the Classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-collaborationUse rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-collaborationUse" ;
	rdfs:label "Classifier-collaborationUse" ;
	uml-model:name "collaborationUse" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_collaborationUse_classifier ;
	rdfs:range element:CollaborationUse ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The CollaborationUses owned by the Classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-feature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-feature" ;
	rdfs:label "Classifier-feature" ;
	uml-model:name "feature" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_feature_featuringClassifier ;
	rdfs:range element:Feature ;
	uml-model:subsettedProperty uml-element:Namespace-member ;
	rdfs:comment "'Specifies each Feature directly defined in the classifier. Note that there may be members of the Classifier that are of the type Feature but are not included, e.g., inherited features."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-general rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-general" ;
	rdfs:label "Classifier-general" ;
	uml-model:name "general" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_general_classifier ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The generalizing Classifiers for this Classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Classifier-general.1-spec .

property:Classifier-generalization rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-generalization" ;
	rdfs:label "Classifier-generalization" ;
	uml-model:name "generalization" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_generalization_specific ;
	rdfs:range element:Generalization ;
	uml-model:subsettedProperty uml-element:A_source_directedRelationship-directedRelationship, uml-element:Element-ownedElement ;
	rdfs:comment "'The Generalization relationships for this Classifier. These Generalizations navigate to more general Classifiers in the generalization hierarchy."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-inheritedMember rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-inheritedMember" ;
	rdfs:label "Classifier-inheritedMember" ;
	uml-model:name "inheritedMember" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_inheritedMember_inheritingClassifier ;
	rdfs:range element:NamedElement ;
	uml-model:subsettedProperty uml-element:Namespace-member ;
	rdfs:comment "'All elements inherited by this Classifier from its general Classifiers."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Classifier-inheritedMember.1-spec .

property:Classifier-isAbstract rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-isAbstract" ;
	rdfs:label "Classifier-isAbstract" ;
	uml-model:name "isAbstract" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the Classifier can only be instantiated by instantiating one of its specializations. An abstract Classifier is intended to be used by other Classifiers e.g., as the target of Associations or Generalizations."@en ;
	xmi:defaultValue element:Classifier-isAbstract-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Classifier-isAbstract-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Classifier-isAbstract-_defaultValue" .

property:Classifier-isFinalSpecialization rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-isFinalSpecialization" ;
	rdfs:label "Classifier-isFinalSpecialization" ;
	uml-model:name "isFinalSpecialization" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the Classifier cannot be specialized."@en ;
	xmi:defaultValue element:Classifier-isFinalSpecialization-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Classifier-isFinalSpecialization-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Classifier-isFinalSpecialization-_defaultValue" .

property:Classifier-ownedTemplateSignature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-ownedTemplateSignature" ;
	rdfs:label "Classifier-ownedTemplateSignature" ;
	uml-model:name "ownedTemplateSignature" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedTemplateSignature_classifier ;
	rdfs:range element:RedefinableTemplateSignature ;
	uml-model:subsettedProperty uml-element:A_redefinitionContext_redefinableElement-redefinableElement ;
	rdfs:comment "'The optional RedefinableTemplateSignature specifying the formal template parameters."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Classifier-ownedUseCase rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-ownedUseCase" ;
	rdfs:label "Classifier-ownedUseCase" ;
	uml-model:name "ownedUseCase" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedUseCase_classifier ;
	rdfs:range element:UseCase ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The UseCases owned by this classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-powertypeExtent rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-powertypeExtent" ;
	rdfs:label "Classifier-powertypeExtent" ;
	uml-model:name "powertypeExtent" ;
	uml-model:association uml-element:A_powertypeExtent_powertype ;
	rdfs:range element:GeneralizationSet ;
	rdfs:comment "'The GeneralizationSet of which this Classifier is a power type."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-redefinedClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-redefinedClassifier" ;
	rdfs:label "Classifier-redefinedClassifier" ;
	uml-model:name "redefinedClassifier" ;
	uml-model:association uml-element:A_redefinedClassifier_classifier ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The Classifiers redefined by this Classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-representation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-representation" ;
	rdfs:label "Classifier-representation" ;
	uml-model:name "representation" ;
	uml-model:association uml-element:A_representation_classifier ;
	rdfs:range element:CollaborationUse ;
	uml-model:subsettedProperty uml-element:Classifier-collaborationUse ;
	rdfs:comment "'A CollaborationUse which indicates the Collaboration that represents this Classifier."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Classifier-substitution rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-substitution" ;
	rdfs:label "Classifier-substitution" ;
	uml-model:name "substitution" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_substitution_substitutingClassifier ;
	rdfs:range element:Substitution ;
	uml-model:subsettedProperty uml-element:Element-ownedElement, uml-element:NamedElement-clientDependency ;
	rdfs:comment "'The Substitutions owned by this Classifier."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Classifier-templateParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-templateParameter" ;
	rdfs:label "Classifier-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:association uml-element:A_classifier_templateParameter_parameteredElement ;
	rdfs:range element:ClassifierTemplateParameter ;
	rdfs:comment "'TheClassifierTemplateParameter that exposes this element as a formal parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Classifier-useCase rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Classifier-useCase" ;
	rdfs:label "Classifier-useCase" ;
	uml-model:name "useCase" ;
	uml-model:association uml-element:A_subject_useCase ;
	rdfs:range element:UseCase ;
	rdfs:comment "'The set of UseCases for which this Classifier is the subject."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Classifier-allFeatures rdfs:comment "'The query allFeatures() gives all of the Features in the namespace of the Classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature."@en ;
	uml-model:rule element:Classifier-allFeatures-spec ;
	uml-model:returns element:Classifier-allFeatures-result .

element:Classifier-allFeatures-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allFeatures-spec-_specification .

element:Classifier-allFeatures-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (member->select(oclIsKindOf(Feature))->collect(oclAsType(Feature))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allFeatures-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Feature ;
	uml-model:upperValue element:Classifier-allFeatures-result-_upperValue .

element:Classifier-allFeatures-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-allParents rdfs:comment "'The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier."@en ;
	uml-model:rule element:Classifier-allParents-spec ;
	uml-model:returns element:Classifier-allParents-result .

element:Classifier-allParents-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allParents-spec-_specification .

element:Classifier-allParents-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (parents()->union(parents()->collect(allParents())->asSet()))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allParents-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier ;
	uml-model:upperValue element:Classifier-allParents-result-_upperValue .

element:Classifier-allParents-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-conformsTo uml-model:redefines element:Type-conformsTo ;
	rdfs:comment "'The query conformsTo() gives true for a Classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations."@en ;
	uml-model:rule element:Classifier-conformsTo-spec ;
	uml-model:returns element:Classifier-conformsTo-result .

element:Classifier-conformsTo-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-conformsTo-spec-_specification .

element:Classifier-conformsTo-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if other.oclIsKindOf(Classifier) then\n  let otherClassifier : Classifier = other.oclAsType(Classifier) in\n    self = otherClassifier or allParents()->includes(otherClassifier)\nelse\n  false\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Classifier-conformsTo-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Classifier-conformsTo-other rdf:type uml:Parameter ;
	uml-model:name "other" ;
	uml-model:parameterType element:Type .

element:Classifier-general.1 rdfs:comment "'The general Classifiers are the ones referenced by the Generalization relationships."@en ;
	uml-model:returns element:Classifier-general.1-result .

element:Classifier-general.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-general.1-spec-_specification .

element:Classifier-general.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (parents())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-general.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier ;
	uml-model:upperValue element:Classifier-general.1-result-_upperValue .

element:Classifier-general.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-hasVisibilityOf rdfs:comment "'The query hasVisibilityOf() determines whether a NamedElement is visible in the classifier. Non-private members are visible. It is only called when the argument is something owned by a parent."@en ;
	uml-model:rule element:Classifier-hasVisibilityOf-pre, element:Classifier-hasVisibilityOf-spec ;
	uml-model:returns element:Classifier-hasVisibilityOf-result .

element:Classifier-hasVisibilityOf-pre rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-hasVisibilityOf-pre-_specification .

element:Classifier-hasVisibilityOf-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "allParents()->including(self)->collect(member)->includes(n)"^^<http://www.omg.org/spec/OCL> .

element:Classifier-hasVisibilityOf-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-hasVisibilityOf-spec-_specification .

element:Classifier-hasVisibilityOf-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (n.visibility <> VisibilityKind::private)"^^<http://www.omg.org/spec/OCL> .

element:Classifier-hasVisibilityOf-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Classifier-hasVisibilityOf-n rdf:type uml:Parameter ;
	uml-model:name "n" ;
	uml-model:parameterType element:NamedElement .

element:Classifier-inherit rdfs:comment "'The query inherit() defines how to inherit a set of elements passed as its argument.  It excludes redefined elements from the result."@en ;
	uml-model:rule element:Classifier-inherit-spec ;
	uml-model:returns element:Classifier-inherit-result .

element:Classifier-inherit-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-inherit-spec-_specification .

element:Classifier-inherit-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (inhs->reject(inh |\n  inh.oclIsKindOf(RedefinableElement) and\n  ownedMember->select(oclIsKindOf(RedefinableElement))->\n    select(redefinedElement->includes(inh.oclAsType(RedefinableElement)))\n       ->notEmpty()))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-inherit-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:NamedElement ;
	uml-model:upperValue element:Classifier-inherit-result-_upperValue .

element:Classifier-inherit-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-inherit-inhs rdf:type uml:Parameter ;
	uml-model:name "inhs" ;
	uml-model:parameterType element:NamedElement ;
	uml-model:upperValue element:Classifier-inherit-inhs-_upperValue .

element:Classifier-inherit-inhs-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-inheritableMembers rdfs:comment "'The query inheritableMembers() gives all of the members of a Classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply."@en ;
	uml-model:rule element:Classifier-inheritableMembers-pre, element:Classifier-inheritableMembers-spec ;
	uml-model:returns element:Classifier-inheritableMembers-result .

element:Classifier-inheritableMembers-pre rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-inheritableMembers-pre-_specification .

element:Classifier-inheritableMembers-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "c.allParents()->includes(self)"^^<http://www.omg.org/spec/OCL> .

element:Classifier-inheritableMembers-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-inheritableMembers-spec-_specification .

element:Classifier-inheritableMembers-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (member->select(m | c.hasVisibilityOf(m)))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-inheritableMembers-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:NamedElement ;
	uml-model:upperValue element:Classifier-inheritableMembers-result-_upperValue .

element:Classifier-inheritableMembers-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-inheritableMembers-c rdf:type uml:Parameter ;
	uml-model:name "c" ;
	uml-model:parameterType element:Classifier .

element:Classifier-inheritedMember.1 rdfs:comment "'The inheritedMember association is derived by inheriting the inheritable members of the parents."@en ;
	uml-model:returns element:Classifier-inheritedMember.1-result .

element:Classifier-inheritedMember.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-inheritedMember.1-spec-_specification .

element:Classifier-inheritedMember.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (inherit(parents()->collect(inheritableMembers(self))->asSet()))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-inheritedMember.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:NamedElement ;
	uml-model:upperValue element:Classifier-inheritedMember.1-result-_upperValue .

element:Classifier-inheritedMember.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-isTemplate uml-model:redefines element:TemplateableElement-isTemplate ;
	rdfs:comment "'The query isTemplate() returns whether this Classifier is actually a template."@en ;
	uml-model:rule element:Classifier-isTemplate-spec ;
	uml-model:returns element:Classifier-isTemplate-result .

element:Classifier-isTemplate-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-isTemplate-spec-_specification .

element:Classifier-isTemplate-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedTemplateSignature <> null or general->exists(g | g.isTemplate()))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-isTemplate-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Classifier-maySpecializeType rdfs:comment "'The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints."@en ;
	uml-model:rule element:Classifier-maySpecializeType-spec ;
	uml-model:returns element:Classifier-maySpecializeType-result .

element:Classifier-maySpecializeType-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-maySpecializeType-spec-_specification .

element:Classifier-maySpecializeType-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oclIsKindOf(c.oclType()))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-maySpecializeType-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Classifier-maySpecializeType-c rdf:type uml:Parameter ;
	uml-model:name "c" ;
	uml-model:parameterType element:Classifier .

element:Classifier-parents rdfs:comment "'The query parents() gives all of the immediate ancestors of a generalized Classifier."@en ;
	uml-model:rule element:Classifier-parents-spec ;
	uml-model:returns element:Classifier-parents-result .

element:Classifier-parents-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-parents-spec-_specification .

element:Classifier-parents-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (generalization.general->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-parents-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier ;
	uml-model:upperValue element:Classifier-parents-result-_upperValue .

element:Classifier-parents-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-directlyRealizedInterfaces rdfs:comment "'The Interfaces directly realized by this Classifier"@en ;
	uml-model:rule element:Classifier-directlyRealizedInterfaces-spec ;
	uml-model:returns element:Classifier-directlyRealizedInterfaces-result .

element:Classifier-directlyRealizedInterfaces-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-directlyRealizedInterfaces-spec-_specification .

element:Classifier-directlyRealizedInterfaces-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((clientDependency->\n  select(oclIsKindOf(Realization) and supplier->forAll(oclIsKindOf(Interface))))->\n      collect(supplier.oclAsType(Interface))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-directlyRealizedInterfaces-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Classifier-directlyRealizedInterfaces-result-_upperValue .

element:Classifier-directlyRealizedInterfaces-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-directlyUsedInterfaces rdfs:comment "'The Interfaces directly used by this Classifier"@en ;
	uml-model:rule element:Classifier-directlyUsedInterfaces-spec ;
	uml-model:returns element:Classifier-directlyUsedInterfaces-result .

element:Classifier-directlyUsedInterfaces-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-directlyUsedInterfaces-spec-_specification .

element:Classifier-directlyUsedInterfaces-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = ((supplierDependency->\n  select(oclIsKindOf(Usage) and client->forAll(oclIsKindOf(Interface))))->\n    collect(client.oclAsType(Interface))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-directlyUsedInterfaces-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Classifier-directlyUsedInterfaces-result-_upperValue .

element:Classifier-directlyUsedInterfaces-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-allRealizedInterfaces rdfs:comment "'The Interfaces realized by this Classifier and all of its generalizations"@en ;
	uml-model:rule element:Classifier-allRealizedInterfaces-spec ;
	uml-model:returns element:Classifier-allRealizedInterfaces-result .

element:Classifier-allRealizedInterfaces-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allRealizedInterfaces-spec-_specification .

element:Classifier-allRealizedInterfaces-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (directlyRealizedInterfaces()->union(self.allParents()->collect(directlyRealizedInterfaces()))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allRealizedInterfaces-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Classifier-allRealizedInterfaces-result-_upperValue .

element:Classifier-allRealizedInterfaces-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-allUsedInterfaces rdfs:comment "'The Interfaces used by this Classifier and all of its generalizations"@en ;
	uml-model:rule element:Classifier-allUsedInterfaces-spec ;
	uml-model:returns element:Classifier-allUsedInterfaces-result .

element:Classifier-allUsedInterfaces-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allUsedInterfaces-spec-_specification .

element:Classifier-allUsedInterfaces-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (directlyUsedInterfaces()->union(self.allParents()->collect(directlyUsedInterfaces()))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allUsedInterfaces-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Interface ;
	uml-model:upperValue element:Classifier-allUsedInterfaces-result-_upperValue .

element:Classifier-allUsedInterfaces-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-isSubstitutableFor-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-isSubstitutableFor-spec-_specification .

element:Classifier-isSubstitutableFor-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (substitution.contract->includes(contract))"^^<http://www.omg.org/spec/OCL> .

element:Classifier-isSubstitutableFor uml-model:rule element:Classifier-isSubstitutableFor-spec ;
	uml-model:returns element:Classifier-isSubstitutableFor-result .

element:Classifier-isSubstitutableFor-contract rdf:type uml:Parameter ;
	uml-model:name "contract" ;
	uml-model:parameterType element:Classifier .

element:Classifier-isSubstitutableFor-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Classifier-allAttributes rdfs:comment "'The query allAttributes gives an ordered set of all owned and inherited attributes of the Classifier. All owned attributes appear before any inherited attributes, and the attributes inherited from any more specific parent Classifier appear before those of any more general parent Classifier. However, if the Classifier has multiple immediate parents, then the relative ordering of the sets of attributes from those parents is not defined."@en ;
	uml-model:rule element:Classifier-allAttributes-spec ;
	uml-model:returns element:Classifier-allAttributes-result .

element:Classifier-allAttributes-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allAttributes-spec-_specification .

element:Classifier-allAttributes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (attribute->asSequence()->union(parents()->asSequence().allAttributes())->select(p | member->includes(p))->asOrderedSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allAttributes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property ;
	uml-model:upperValue element:Classifier-allAttributes-result-_upperValue .

element:Classifier-allAttributes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Classifier-allSlottableFeatures rdfs:comment "'All StructuralFeatures related to the Classifier that may have Slots, including direct attributes, inherited attributes, private attributes in generalizations, and memberEnds of Associations, but excluding redefined StructuralFeatures."@en ;
	uml-model:rule element:Classifier-allSlottableFeatures-spec ;
	uml-model:returns element:Classifier-allSlottableFeatures-result .

element:Classifier-allSlottableFeatures-spec rdf:type uml:Constraint ;
	uml-model:specification element:Classifier-allSlottableFeatures-spec-_specification .

element:Classifier-allSlottableFeatures-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (member->select(oclIsKindOf(StructuralFeature))->\n  collect(oclAsType(StructuralFeature))->\n   union(self.inherit(self.allParents()->collect(p | p.attribute)->asSet())->\n     collect(oclAsType(StructuralFeature)))->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Classifier-allSlottableFeatures-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:StructuralFeature ;
	uml-model:upperValue element:Classifier-allSlottableFeatures-result-_upperValue .

element:Classifier-allSlottableFeatures-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:ClassifierTemplateParameter xmi:type uml:Class ;
	xmi:id "ClassifierTemplateParameter" ;
	uml-model:name "ClassifierTemplateParameter" ;
	rdfs:comment "'A ClassifierTemplateParameter exposes a Classifier as a formal template parameter."@en ;
	uml-model:rule element:ClassifierTemplateParameter-has_constraining_classifier, element:ClassifierTemplateParameter-parametered_element_no_features, element:ClassifierTemplateParameter-matching_abstract, element:ClassifierTemplateParameter-actual_is_classifier, element:ClassifierTemplateParameter-constraining_classifiers_constrain_args, element:ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element ;
	rdfs:subClassOf element:TemplateParameter ;
	uml-model:ownedAttribute property:ClassifierTemplateParameter-allowSubstitutable, property:ClassifierTemplateParameter-constrainingClassifier, property:ClassifierTemplateParameter-parameteredElement .

element:ClassifierTemplateParameter-has_constraining_classifier rdfs:comment "'If allowSubstitutable is true, then there must be a constrainingClassifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-has_constraining_classifier-_specification .

element:ClassifierTemplateParameter-has_constraining_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "allowSubstitutable implies constrainingClassifier->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ClassifierTemplateParameter-parametered_element_no_features rdfs:comment "'The parameteredElement has no direct features, and if constrainedElement is empty it has no generalizations."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-parametered_element_no_features-_specification .

element:ClassifierTemplateParameter-parametered_element_no_features-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parameteredElement.feature->isEmpty() and (constrainingClassifier->isEmpty() implies  parameteredElement.allParents()->isEmpty())"^^<http://www.omg.org/spec/OCL> .

element:ClassifierTemplateParameter-matching_abstract rdfs:comment "'If the parameteredElement is not abstract, then the Classifier used as an argument shall not be abstract."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-matching_abstract-_specification .

element:ClassifierTemplateParameter-matching_abstract-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(not parameteredElement.isAbstract) implies templateParameterSubstitution.actual->forAll(a | not a.oclAsType(Classifier).isAbstract)"^^<http://www.omg.org/spec/OCL> .

element:ClassifierTemplateParameter-actual_is_classifier rdfs:comment "'The argument to a ClassifierTemplateParameter is a Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-actual_is_classifier-_specification .

element:ClassifierTemplateParameter-actual_is_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "templateParameterSubstitution.actual->forAll(a | a.oclIsKindOf(Classifier))"^^<http://www.omg.org/spec/OCL> .

element:ClassifierTemplateParameter-constraining_classifiers_constrain_args rdfs:comment "'If there are any constrainingClassifiers, then every argument must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-constraining_classifiers_constrain_args-_specification .

element:ClassifierTemplateParameter-constraining_classifiers_constrain_args-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "templateParameterSubstitution.actual->forAll( a |\n  let arg : Classifier = a.oclAsType(Classifier) in\n    constrainingClassifier->forAll(\n      cc |  \n         arg = cc or arg.conformsTo(cc) or (allowSubstitutable and arg.isSubstitutableFor(cc))\n      )\n)"^^<http://www.omg.org/spec/OCL> .

element:ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element rdfs:comment "'If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element-_specification .

element:ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "constrainingClassifier->forAll(\n     cc |  parameteredElement = cc or parameteredElement.conformsTo(cc) or (allowSubstitutable and parameteredElement.isSubstitutableFor(cc))\n)"^^<http://www.omg.org/spec/OCL> .

property:ClassifierTemplateParameter-allowSubstitutable rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ClassifierTemplateParameter-allowSubstitutable" ;
	rdfs:label "ClassifierTemplateParameter-allowSubstitutable" ;
	uml-model:name "allowSubstitutable" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter."@en ;
	xmi:defaultValue element:ClassifierTemplateParameter-allowSubstitutable-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ClassifierTemplateParameter-allowSubstitutable-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ClassifierTemplateParameter-allowSubstitutable-_defaultValue" ;
	uml-model:value "true" .

property:ClassifierTemplateParameter-constrainingClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ClassifierTemplateParameter-constrainingClassifier" ;
	rdfs:label "ClassifierTemplateParameter-constrainingClassifier" ;
	uml-model:name "constrainingClassifier" ;
	uml-model:association uml-element:A_constrainingClassifier_classifierTemplateParameter ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The classifiers that constrain the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any Classifier that is compatible with this constraining Classifier can be substituted; otherwise, it must be either this Classifier or one of its specializations. If this property is empty, there are no constraints on the Classifier that can be used as an argument."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ClassifierTemplateParameter-parameteredElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ClassifierTemplateParameter-parameteredElement" ;
	rdfs:label "ClassifierTemplateParameter-parameteredElement" ;
	uml-model:name "parameteredElement" ;
	uml-model:association uml-element:A_classifier_templateParameter_parameteredElement ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifier exposed by this ClassifierTemplateParameter."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Feature xmi:type uml:Class ;
	xmi:id "Feature" ;
	uml-model:name "Feature" ;
	rdfs:comment "'A Feature declares a behavioral or structural characteristic of Classifiers."@en ;
	rdfs:subClassOf element:RedefinableElement ;
	uml-model:ownedAttribute property:Feature-featuringClassifier, property:Feature-isStatic .

property:Feature-featuringClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Feature-featuringClassifier" ;
	rdfs:label "Feature-featuringClassifier" ;
	uml-model:name "featuringClassifier" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_feature_featuringClassifier ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace ;
	rdfs:comment "'The Classifiers that have this Feature as a feature."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Feature-isStatic rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Feature-isStatic" ;
	rdfs:label "Feature-isStatic" ;
	uml-model:name "isStatic" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether this Feature characterizes individual instances classified by the Classifier (false) or the Classifier itself (true)."@en ;
	xmi:defaultValue element:Feature-isStatic-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Feature-isStatic-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Feature-isStatic-_defaultValue" .

element:Generalization xmi:type uml:Class ;
	xmi:id "Generalization" ;
	uml-model:name "Generalization" ;
	rdfs:comment "'A Generalization is a taxonomic relationship between a more general Classifier and a more specific Classifier. Each instance of the specific Classifier is also an instance of the general Classifier. The specific Classifier inherits the features of the more general Classifier. A Generalization is owned by the specific Classifier."@en ;
	rdfs:subClassOf element:DirectedRelationship ;
	uml-model:ownedAttribute property:Generalization-general, property:Generalization-generalizationSet, property:Generalization-isSubstitutable, property:Generalization-specific .

property:Generalization-general rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Generalization-general" ;
	rdfs:label "Generalization-general" ;
	uml-model:name "general" ;
	uml-model:association uml-element:A_general_generalization ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-target ;
	rdfs:comment "'The general classifier in the Generalization relationship."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Generalization-generalizationSet rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Generalization-generalizationSet" ;
	rdfs:label "Generalization-generalizationSet" ;
	uml-model:name "generalizationSet" ;
	uml-model:association uml-element:A_generalizationSet_generalization ;
	rdfs:range element:GeneralizationSet ;
	rdfs:comment "'Represents a set of instances of Generalization.  A Generalization may appear in many GeneralizationSets."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Generalization-isSubstitutable rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Generalization-isSubstitutable" ;
	rdfs:label "Generalization-isSubstitutable" ;
	uml-model:name "isSubstitutable" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the specific Classifier can be used wherever the general Classifier can be used. If true, the execution traces of the specific Classifier shall be a superset of the execution traces of the general Classifier. If false, there is no such constraint on execution traces. If unset, the modeler has not stated whether there is such a constraint or not."@en ;
	xmi:defaultValue element:Generalization-isSubstitutable-_defaultValue ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:Generalization-isSubstitutable-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Generalization-isSubstitutable-_defaultValue" ;
	uml-model:value "true" .

property:Generalization-specific rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Generalization-specific" ;
	rdfs:label "Generalization-specific" ;
	uml-model:name "specific" ;
	uml-model:association uml-element:A_generalization_specific ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:DirectedRelationship-source, uml-element:Element-owner ;
	rdfs:comment "'The specializing Classifier in the Generalization relationship."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:GeneralizationSet xmi:type uml:Class ;
	xmi:id "GeneralizationSet" ;
	uml-model:name "GeneralizationSet" ;
	rdfs:comment "'A GeneralizationSet is a PackageableElement whose instances represent sets of Generalization relationships."@en ;
	uml-model:rule element:GeneralizationSet-generalization_same_classifier, element:GeneralizationSet-maps_to_generalization_set ;
	rdfs:subClassOf element:PackageableElement ;
	uml-model:ownedAttribute property:GeneralizationSet-generalization, property:GeneralizationSet-isCovering, property:GeneralizationSet-isDisjoint, property:GeneralizationSet-powertype .

element:GeneralizationSet-generalization_same_classifier rdfs:comment "'Every Generalization associated with a particular GeneralizationSet must have the same general Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:GeneralizationSet-generalization_same_classifier-_specification .

element:GeneralizationSet-generalization_same_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "generalization->collect(general)->asSet()->size() <= 1"^^<http://www.omg.org/spec/OCL> .

element:GeneralizationSet-maps_to_generalization_set rdfs:comment "'The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances be its subclasses."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:GeneralizationSet-maps_to_generalization_set-_specification .

element:GeneralizationSet-maps_to_generalization_set-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "powertype <> null implies generalization->forAll( gen | \n    not (gen.general = powertype) and not gen.general.allParents()->includes(powertype) and not (gen.specific = powertype) and not powertype.allParents()->includes(gen.specific)\n  )"^^<http://www.omg.org/spec/OCL> .

property:GeneralizationSet-generalization rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralizationSet-generalization" ;
	rdfs:label "GeneralizationSet-generalization" ;
	uml-model:name "generalization" ;
	uml-model:association uml-element:A_generalizationSet_generalization ;
	rdfs:range element:Generalization ;
	rdfs:comment "'Designates the instances of Generalization that are members of this GeneralizationSet."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:GeneralizationSet-isCovering rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralizationSet-isCovering" ;
	rdfs:label "GeneralizationSet-isCovering" ;
	uml-model:name "isCovering" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."@en ;
	xmi:defaultValue element:GeneralizationSet-isCovering-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:GeneralizationSet-isCovering-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "GeneralizationSet-isCovering-_defaultValue" .

property:GeneralizationSet-isDisjoint rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralizationSet-isDisjoint" ;
	rdfs:label "GeneralizationSet-isDisjoint" ;
	uml-model:name "isDisjoint" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty."@en ;
	xmi:defaultValue element:GeneralizationSet-isDisjoint-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:GeneralizationSet-isDisjoint-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "GeneralizationSet-isDisjoint-_defaultValue" .

property:GeneralizationSet-powertype rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "GeneralizationSet-powertype" ;
	rdfs:label "GeneralizationSet-powertype" ;
	uml-model:name "powertype" ;
	uml-model:association uml-element:A_powertypeExtent_powertype ;
	rdfs:range element:Classifier ;
	rdfs:comment "'Designates the Classifier that is defined as the power type for the associated GeneralizationSet, if there is one."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:InstanceSpecification xmi:type uml:Class ;
	xmi:id "InstanceSpecification" ;
	uml-model:name "InstanceSpecification" ;
	rdfs:comment "'An InstanceSpecification is a model element that represents an instance in a modeled system. An InstanceSpecification can act as a DeploymentTarget in a Deployment relationship, in the case that it represents an instance of a Node. It can also act as a DeployedArtifact, if it represents an instance of an Artifact."@en ;
	uml-model:rule element:InstanceSpecification-deployment_artifact, element:InstanceSpecification-structural_feature, element:InstanceSpecification-defining_feature, element:InstanceSpecification-deployment_target ;
	rdfs:subClassOf element:DeploymentTarget, element:PackageableElement, element:DeployedArtifact ;
	uml-model:ownedAttribute property:InstanceSpecification-classifier, property:InstanceSpecification-slot, property:InstanceSpecification-specification .

element:InstanceSpecification-deployment_artifact rdfs:comment "'An InstanceSpecification can act as a DeployedArtifact if it represents an instance of an Artifact."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InstanceSpecification-deployment_artifact-_specification .

element:InstanceSpecification-deployment_artifact-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "deploymentForArtifact->notEmpty() implies classifier->exists(oclIsKindOf(Artifact))"^^<http://www.omg.org/spec/OCL> .

element:InstanceSpecification-structural_feature rdfs:comment "'No more than one slot in an InstanceSpecification may have the same definingFeature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InstanceSpecification-structural_feature-_specification .

element:InstanceSpecification-structural_feature-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "classifier->forAll(c | (c.allSlottableFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))"^^<http://www.omg.org/spec/OCL> .

element:InstanceSpecification-defining_feature rdfs:comment "'The definingFeature of each slot is a StructuralFeature related to a classifier of the InstanceSpecification, including direct attributes, inherited attributes, private attributes in generalizations, and memberEnds of Associations, but excluding redefined StructuralFeatures."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InstanceSpecification-defining_feature-_specification .

element:InstanceSpecification-defining_feature-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "slot->forAll(s | classifier->exists (c | c.allSlottableFeatures()->includes (s.definingFeature)))"^^<http://www.omg.org/spec/OCL> .

element:InstanceSpecification-deployment_target rdfs:comment "'An InstanceSpecification can act as a DeploymentTarget if it represents an instance of a Node and functions as a part in the internal structure of an encompassing Node."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InstanceSpecification-deployment_target-_specification .

element:InstanceSpecification-deployment_target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "deployment->notEmpty() implies classifier->exists(node | node.oclIsKindOf(Node) and Node.allInstances()->exists(n | n.part->exists(p | p.type = node)))"^^<http://www.omg.org/spec/OCL> .

property:InstanceSpecification-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InstanceSpecification-classifier" ;
	rdfs:label "InstanceSpecification-classifier" ;
	uml-model:name "classifier" ;
	uml-model:association uml-element:A_classifier_instanceSpecification ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifier or Classifiers of the represented instance. If multiple Classifiers are specified, the instance is classified by all of them."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InstanceSpecification-slot rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InstanceSpecification-slot" ;
	rdfs:label "InstanceSpecification-slot" ;
	uml-model:name "slot" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_slot_owningInstance ;
	rdfs:range element:Slot ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Slot giving the value or values of a StructuralFeature of the instance. An InstanceSpecification can have one Slot per StructuralFeature of its Classifiers, including inherited features. It is not necessary to model a Slot for every StructuralFeature, in which case the InstanceSpecification is a partial description."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InstanceSpecification-specification rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InstanceSpecification-specification" ;
	rdfs:label "InstanceSpecification-specification" ;
	uml-model:name "specification" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_specification_owningInstanceSpec ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A specification of how to compute, derive, or construct the instance."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:InstanceValue xmi:type uml:Class ;
	xmi:id "InstanceValue" ;
	uml-model:name "InstanceValue" ;
	rdfs:comment "'An InstanceValue is a ValueSpecification that identifies an instance."@en ;
	rdfs:subClassOf element:ValueSpecification ;
	uml-model:ownedAttribute property:InstanceValue-instance .

property:InstanceValue-instance rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InstanceValue-instance" ;
	rdfs:label "InstanceValue-instance" ;
	uml-model:name "instance" ;
	uml-model:association uml-element:A_instance_instanceValue ;
	rdfs:range element:InstanceSpecification ;
	rdfs:comment "'The InstanceSpecification that represents the specified value."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Operation xmi:type uml:Class ;
	xmi:id "Operation" ;
	uml-model:name "Operation" ;
	rdfs:comment "'An Operation is a BehavioralFeature of a Classifier that specifies the name, type, parameters, and constraints for invoking an associated Behavior. An Operation may invoke both the execution of method behaviors as well as other behavioral responses. Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."@en ;
	uml-model:rule element:Operation-at_most_one_return, element:Operation-only_body_for_query ;
	rdfs:subClassOf element:TemplateableElement, element:ParameterableElement, element:BehavioralFeature ;
	uml-model:ownedAttribute property:Operation-bodyCondition, property:Operation-class, property:Operation-datatype, property:Operation-interface, property:Operation-isOrdered, property:Operation-isQuery, property:Operation-isUnique, property:Operation-lower, property:Operation-ownedParameter, property:Operation-postcondition, property:Operation-precondition, property:Operation-raisedException, property:Operation-redefinedOperation, property:Operation-templateParameter, property:Operation-type, property:Operation-upper ;
	uml-model:operation element:Operation-isConsistentWith, element:Operation-isOrdered.1, element:Operation-isUnique.1, element:Operation-lower.1, element:Operation-returnResult, element:Operation-type.1, element:Operation-upper.1 .

element:Operation-at_most_one_return rdfs:comment "'An Operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return.'"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Operation-at_most_one_return-_specification .

element:Operation-at_most_one_return-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.ownedParameter->select(direction = ParameterDirectionKind::return)->size() <= 1"^^<http://www.omg.org/spec/OCL> .

element:Operation-only_body_for_query rdfs:comment "'A bodyCondition can only be specified for a query Operation."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Operation-only_body_for_query-_specification .

element:Operation-only_body_for_query-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "bodyCondition <> null implies isQuery"^^<http://www.omg.org/spec/OCL> .

property:Operation-bodyCondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-bodyCondition" ;
	rdfs:label "Operation-bodyCondition" ;
	uml-model:name "bodyCondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_bodyCondition_bodyContext ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'An optional Constraint on the result values of an invocation of this Operation."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Operation-class rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-class" ;
	rdfs:label "Operation-class" ;
	uml-model:name "class" ;
	uml-model:association uml-element:A_ownedOperation_class ;
	rdfs:range element:Class ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The Class that owns this operation, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Operation-datatype rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-datatype" ;
	rdfs:label "Operation-datatype" ;
	uml-model:name "datatype" ;
	uml-model:association uml-element:A_ownedOperation_datatype ;
	rdfs:range element:DataType ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The DataType that owns this Operation, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Operation-interface rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-interface" ;
	rdfs:label "Operation-interface" ;
	uml-model:name "interface" ;
	uml-model:association uml-element:A_ownedOperation_interface ;
	rdfs:range element:Interface ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The Interface that owns this Operation, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Operation-isOrdered rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-isOrdered" ;
	rdfs:label "Operation-isOrdered" ;
	uml-model:name "isOrdered" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the return parameter is ordered or not, if present.  This information is derived from the return result for this Operation."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Operation-isOrdered.1-spec .

property:Operation-isQuery rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-isQuery" ;
	rdfs:label "Operation-isQuery" ;
	uml-model:name "isQuery" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."@en ;
	xmi:defaultValue element:Operation-isQuery-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Operation-isQuery-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Operation-isQuery-_defaultValue" .

property:Operation-isUnique rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-isUnique" ;
	rdfs:label "Operation-isUnique" ;
	uml-model:name "isUnique" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the return parameter is unique or not, if present. This information is derived from the return result for this Operation."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Operation-isUnique.1-spec .

property:Operation-lower rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-lower" ;
	rdfs:label "Operation-lower" ;
	uml-model:name "lower" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Integer ;
	rdfs:comment "'Specifies the lower multiplicity of the return parameter, if present. This information is derived from the return result for this Operation."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Operation-lower.1-spec .

property:Operation-ownedParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-ownedParameter" ;
	rdfs:label "Operation-ownedParameter" ;
	uml-model:name "ownedParameter" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_ownedParameter_operation ;
	rdfs:range element:Parameter ;
	rdfs:comment "'The parameters owned by this Operation."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Operation-postcondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-postcondition" ;
	rdfs:label "Operation-postcondition" ;
	uml-model:name "postcondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_postcondition_postContext ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'An optional set of Constraints specifying the state of the system when the Operation is completed."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Operation-precondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-precondition" ;
	rdfs:label "Operation-precondition" ;
	uml-model:name "precondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_precondition_preContext ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Namespace-ownedRule ;
	rdfs:comment "'An optional set of Constraints on the state of the system when the Operation is invoked."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Operation-raisedException rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-raisedException" ;
	rdfs:label "Operation-raisedException" ;
	uml-model:name "raisedException" ;
	uml-model:association uml-element:A_raisedException_operation ;
	rdfs:range element:Type ;
	rdfs:comment "'The Types representing exceptions that may be raised during an invocation of this operation."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Operation-redefinedOperation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-redefinedOperation" ;
	rdfs:label "Operation-redefinedOperation" ;
	uml-model:name "redefinedOperation" ;
	uml-model:association uml-element:A_redefinedOperation_operation ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The Operations that are redefined by this Operation."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Operation-templateParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-templateParameter" ;
	rdfs:label "Operation-templateParameter" ;
	uml-model:name "templateParameter" ;
	uml-model:association uml-element:A_operation_templateParameter_parameteredElement ;
	rdfs:range element:OperationTemplateParameter ;
	rdfs:comment "'The OperationTemplateParameter that exposes this element as a formal parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Operation-type rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-type" ;
	rdfs:label "Operation-type" ;
	uml-model:name "type" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_type_operation ;
	rdfs:range element:Type ;
	rdfs:comment "'The return type of the operation, if present. This information is derived from the return result for this Operation."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Operation-type.1-spec .

property:Operation-upper rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Operation-upper" ;
	rdfs:label "Operation-upper" ;
	uml-model:name "upper" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:UnlimitedNatural ;
	rdfs:comment "'The upper multiplicity of the return parameter, if present. This information is derived from the return result for this Operation."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Operation-upper.1-spec .

element:Operation-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent. A redefining operation is consistent with a redefined operation if&#xD;&#xA;it has the same number of owned parameters, and for each parameter the following holds:&#xD;&#xA;&#xD;&#xA;- Direction, ordering and uniqueness are the same.&#xD;&#xA;- The corresponding types are covariant, contravariant or invariant.&#xD;&#xA;- The multiplicities are compatible, depending on the parameter direction."@en ;
	uml-model:rule element:Operation-isConsistentWith-spec, element:Operation-isConsistentWith-pre ;
	uml-model:returns element:Operation-isConsistentWith-result .

element:Operation-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-isConsistentWith-spec-_specification .

element:Operation-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(Operation) and\nlet op : Operation = redefiningElement.oclAsType(Operation) in\n   self.ownedParameter->size() = op.ownedParameter->size() and\n   Sequence{1..self.ownedParameter->size()}->\n      forAll(i |  \n        let redefiningParam : Parameter = op.ownedParameter->at(i),\n               redefinedParam : Parameter = self.ownedParameter->at(i) in\n                 (redefiningParam.isUnique = redefinedParam.isUnique) and\n                 (redefiningParam.isOrdered = redefinedParam. isOrdered) and\n                 (redefiningParam.direction = redefinedParam.direction) and\n                 (redefiningParam.type.conformsTo(redefinedParam.type) or\n                     redefinedParam.type.conformsTo(redefiningParam.type)) and\n                 (redefiningParam.direction = ParameterDirectionKind::inout implies\n                         (redefinedParam.compatibleWith(redefiningParam) and\n                         redefiningParam.compatibleWith(redefinedParam))) and\n                 (redefiningParam.direction = ParameterDirectionKind::_'in' implies\n                         redefinedParam.compatibleWith(redefiningParam)) and\n                 ((redefiningParam.direction = ParameterDirectionKind::out or\n                      redefiningParam.direction = ParameterDirectionKind::return) implies\n                         redefiningParam.compatibleWith(redefinedParam))\n      ))"^^<http://www.omg.org/spec/OCL> .

element:Operation-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:Operation-isConsistentWith-pre-_specification .

element:Operation-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:Operation-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Operation-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Operation-isOrdered.1 rdfs:comment "'If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false."@en ;
	uml-model:returns element:Operation-isOrdered.1-result .

element:Operation-isOrdered.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-isOrdered.1-spec-_specification .

element:Operation-isOrdered.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if returnResult()->notEmpty() then returnResult()-> exists(isOrdered) else false endif)"^^<http://www.omg.org/spec/OCL> .

element:Operation-isOrdered.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Operation-isUnique.1 rdfs:comment "'If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true."@en ;
	uml-model:returns element:Operation-isUnique.1-result .

element:Operation-isUnique.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-isUnique.1-spec-_specification .

element:Operation-isUnique.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if returnResult()->notEmpty() then returnResult()->exists(isUnique) else true endif)"^^<http://www.omg.org/spec/OCL> .

element:Operation-isUnique.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Operation-lower.1 rdfs:comment "'If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower has no value."@en ;
	uml-model:returns element:Operation-lower.1-result .

element:Operation-lower.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-lower.1-spec-_specification .

element:Operation-lower.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if returnResult()->notEmpty() then returnResult()->any(true).lower else null endif)"^^<http://www.omg.org/spec/OCL> .

element:Operation-lower.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer> .

element:Operation-returnResult rdfs:comment "'The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set"@en ;
	uml-model:rule element:Operation-returnResult-spec ;
	uml-model:returns element:Operation-returnResult-result .

element:Operation-returnResult-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-returnResult-spec-_specification .

element:Operation-returnResult-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (ownedParameter->select (direction = ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

element:Operation-returnResult-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:Operation-returnResult-result-_upperValue .

element:Operation-returnResult-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Operation-type.1 rdfs:comment "'If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type has no value."@en ;
	uml-model:returns element:Operation-type.1-result .

element:Operation-type.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-type.1-spec-_specification .

element:Operation-type.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if returnResult()->notEmpty() then returnResult()->any(true).type else null endif)"^^<http://www.omg.org/spec/OCL> .

element:Operation-type.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Type .

element:Operation-upper.1 rdfs:comment "'If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper has no value."@en ;
	uml-model:returns element:Operation-upper.1-result .

element:Operation-upper.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Operation-upper.1-spec-_specification .

element:Operation-upper.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if returnResult()->notEmpty() then returnResult()->any(true).upper else null endif)"^^<http://www.omg.org/spec/OCL> .

element:Operation-upper.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural> .

element:OperationTemplateParameter xmi:type uml:Class ;
	xmi:id "OperationTemplateParameter" ;
	uml-model:name "OperationTemplateParameter" ;
	rdfs:comment "'An OperationTemplateParameter exposes an Operation as a formal parameter for a template."@en ;
	uml-model:rule element:OperationTemplateParameter-match_default_signature ;
	rdfs:subClassOf element:TemplateParameter ;
	uml-model:ownedAttribute property:OperationTemplateParameter-parameteredElement .

element:OperationTemplateParameter-match_default_signature rdf:type uml:Constraint ;
	uml-model:specification element:OperationTemplateParameter-match_default_signature-_specification .

element:OperationTemplateParameter-match_default_signature-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "default->notEmpty() implies (default.oclIsKindOf(Operation) and (let defaultOp : Operation = default.oclAsType(Operation) in \n    defaultOp.ownedParameter->size() = parameteredElement.ownedParameter->size() and\n    Sequence{1.. defaultOp.ownedParameter->size()}->forAll( ix | \n        let p1: Parameter = defaultOp.ownedParameter->at(ix), p2 : Parameter = parameteredElement.ownedParameter->at(ix) in\n          p1.type = p2.type and p1.upper = p2.upper and p1.lower = p2.lower and p1.direction = p2.direction and p1.isOrdered = p2.isOrdered and p1.isUnique = p2.isUnique)))"^^<http://www.omg.org/spec/OCL> .

property:OperationTemplateParameter-parameteredElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OperationTemplateParameter-parameteredElement" ;
	rdfs:label "OperationTemplateParameter-parameteredElement" ;
	uml-model:name "parameteredElement" ;
	uml-model:association uml-element:A_operation_templateParameter_parameteredElement ;
	rdfs:range element:Operation ;
	rdfs:comment "'The Operation exposed by this OperationTemplateParameter."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Parameter xmi:type uml:Class ;
	xmi:id "Parameter" ;
	uml-model:name "Parameter" ;
	rdfs:comment "'A Parameter is a specification of an argument used to pass information into or out of an invocation of a BehavioralFeature.  Parameters can be treated as ConnectableElements within Collaborations."@en ;
	uml-model:rule element:Parameter-in_and_out, element:Parameter-not_exception, element:Parameter-connector_end, element:Parameter-reentrant_behaviors, element:Parameter-stream_and_exception, element:Parameter-object_effect ;
	rdfs:subClassOf element:MultiplicityElement, element:ConnectableElement ;
	uml-model:ownedAttribute property:Parameter-default, property:Parameter-defaultValue, property:Parameter-direction, property:Parameter-effect, property:Parameter-isException, property:Parameter-isStream, property:Parameter-operation, property:Parameter-parameterSet ;
	uml-model:operation element:Parameter-default.1 .

element:Parameter-in_and_out rdfs:comment "'Only in and inout Parameters may have a delete effect. Only out, inout, and return Parameters may have a create effect."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-in_and_out-_specification .

element:Parameter-in_and_out-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(effect = ParameterEffectKind::delete implies (direction = ParameterDirectionKind::_'in' or direction = ParameterDirectionKind::inout))\nand\n(effect = ParameterEffectKind::create implies (direction = ParameterDirectionKind::out or direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::return))"^^<http://www.omg.org/spec/OCL> .

element:Parameter-not_exception rdfs:comment "'An input Parameter cannot be an exception."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-not_exception-_specification .

element:Parameter-not_exception-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isException implies (direction <> ParameterDirectionKind::_'in' and direction <> ParameterDirectionKind::inout)"^^<http://www.omg.org/spec/OCL> .

element:Parameter-connector_end rdfs:comment "'A Parameter may only be associated with a Connector end within the context of a Collaboration."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-connector_end-_specification .

element:Parameter-connector_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end->notEmpty() implies collaboration->notEmpty()"^^<http://www.omg.org/spec/OCL> .

element:Parameter-reentrant_behaviors rdfs:comment "'Reentrant behaviors cannot have stream Parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-reentrant_behaviors-_specification .

element:Parameter-reentrant_behaviors-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(isStream and behavior <> null) implies not behavior.isReentrant"^^<http://www.omg.org/spec/OCL> .

element:Parameter-stream_and_exception rdfs:comment "'A Parameter cannot be a stream and exception at the same time."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-stream_and_exception-_specification .

element:Parameter-stream_and_exception-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not (isException and isStream)"^^<http://www.omg.org/spec/OCL> .

element:Parameter-object_effect rdfs:comment "'Parameters typed by DataTypes cannot have an effect."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-object_effect-_specification .

element:Parameter-object_effect-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(type.oclIsKindOf(DataType)) implies (effect = null)"^^<http://www.omg.org/spec/OCL> .

property:Parameter-default rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-default" ;
	rdfs:label "Parameter-default" ;
	uml-model:name "default" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'A String that represents a value to be used when no argument is supplied for the Parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Parameter-default.1-spec .

property:Parameter-defaultValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-defaultValue" ;
	rdfs:label "Parameter-defaultValue" ;
	uml-model:name "defaultValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_defaultValue_owningParameter ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Parameter-direction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-direction" ;
	rdfs:label "Parameter-direction" ;
	uml-model:name "direction" ;
	rdfs:range element:ParameterDirectionKind ;
	rdfs:comment "'Indicates whether a parameter is being sent into or out of a behavioral element."@en ;
	xmi:defaultValue element:Parameter-direction-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Parameter-direction-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "Parameter-direction-_defaultValue" .

property:Parameter-effect rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-effect" ;
	rdfs:label "Parameter-effect" ;
	uml-model:name "effect" ;
	rdfs:range element:ParameterEffectKind ;
	rdfs:comment "'Specifies the effect that executions of the owner of the Parameter have on objects passed in or out of the parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Parameter-isException rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-isException" ;
	rdfs:label "Parameter-isException" ;
	uml-model:name "isException" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Tells whether an output parameter may emit a value to the exclusion of the other outputs."@en ;
	xmi:defaultValue element:Parameter-isException-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Parameter-isException-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Parameter-isException-_defaultValue" .

property:Parameter-isStream rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-isStream" ;
	rdfs:label "Parameter-isStream" ;
	uml-model:name "isStream" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter may post values while the behavior is executing."@en ;
	xmi:defaultValue element:Parameter-isStream-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Parameter-isStream-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Parameter-isStream-_defaultValue" .

property:Parameter-operation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-operation" ;
	rdfs:label "Parameter-operation" ;
	uml-model:name "operation" ;
	uml-model:association uml-element:A_ownedParameter_operation ;
	rdfs:range element:Operation ;
	uml-model:subsettedProperty uml-element:A_ownedParameter_ownerFormalParam-ownerFormalParam ;
	rdfs:comment "'The Operation owning this parameter."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Parameter-parameterSet rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Parameter-parameterSet" ;
	rdfs:label "Parameter-parameterSet" ;
	uml-model:name "parameterSet" ;
	uml-model:association uml-element:A_parameterSet_parameter ;
	rdfs:range element:ParameterSet ;
	rdfs:comment "'The ParameterSets containing the parameter. See ParameterSet."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Parameter-default.1 rdfs:comment "'Derivation for Parameter::/default"@en ;
	uml-model:returns element:Parameter-default.1-result .

element:Parameter-default.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Parameter-default.1-spec-_specification .

element:Parameter-default.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if self.type = String then defaultValue.stringValue() else null endif)"^^<http://www.omg.org/spec/OCL> .

element:Parameter-default.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String> .

element:ParameterSet xmi:type uml:Class ;
	xmi:id "ParameterSet" ;
	uml-model:name "ParameterSet" ;
	rdfs:comment "'A ParameterSet designates alternative sets of inputs or outputs that a Behavior may use."@en ;
	uml-model:rule element:ParameterSet-same_parameterized_entity, element:ParameterSet-input, element:ParameterSet-two_parameter_sets ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:ParameterSet-condition, property:ParameterSet-parameter .

element:ParameterSet-same_parameterized_entity rdfs:comment "'The Parameters in a ParameterSet must all be inputs or all be outputs of the same parameterized entity, and the ParameterSet is owned by that entity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ParameterSet-same_parameterized_entity-_specification .

element:ParameterSet-same_parameterized_entity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parameter->forAll(p1, p2 | self.owner = p1.owner and self.owner = p2.owner and p1.direction = p2.direction)"^^<http://www.omg.org/spec/OCL> .

element:ParameterSet-input rdfs:comment "'If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ParameterSet-input-_specification .

element:ParameterSet-input-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "((parameter->exists(direction = ParameterDirectionKind::_'in')) implies \n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::_'in' and p.parameterSet->isEmpty())->forAll(isStream))\n    and\n((parameter->exists(direction = ParameterDirectionKind::out)) implies \n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::out and p.parameterSet->isEmpty())->forAll(isStream))"^^<http://www.omg.org/spec/OCL> .

element:ParameterSet-two_parameter_sets rdfs:comment "'Two ParameterSets cannot have exactly the same set of Parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ParameterSet-two_parameter_sets-_specification .

element:ParameterSet-two_parameter_sets-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "parameter->forAll(parameterSet->forAll(s1, s2 | s1->size() = s2->size() implies s1.parameter->exists(p | not s2.parameter->includes(p))))"^^<http://www.omg.org/spec/OCL> .

property:ParameterSet-condition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ParameterSet-condition" ;
	rdfs:label "ParameterSet-condition" ;
	uml-model:name "condition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_condition_parameterSet ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A constraint that should be satisfied for the owner of the Parameters in an input ParameterSet to start execution using the values provided for those Parameters, or the owner of the Parameters in an output ParameterSet to end execution providing the values for those Parameters, if all preconditions and conditions on input ParameterSets were satisfied."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ParameterSet-parameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ParameterSet-parameter" ;
	rdfs:label "ParameterSet-parameter" ;
	uml-model:name "parameter" ;
	uml-model:association uml-element:A_parameterSet_parameter ;
	rdfs:range element:Parameter ;
	rdfs:comment "'Parameters in the ParameterSet."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:Property xmi:type uml:Class ;
	xmi:id "Property" ;
	uml-model:name "Property" ;
	rdfs:comment "'A Property is a StructuralFeature. A Property related by ownedAttribute to a Classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the Classifier to a value or set of values of the type of the attribute. A Property related by memberEnd to an Association represents an end of the Association. The type of the Property is the type of the end of the Association. A Property has the capability of being a DeploymentTarget in a Deployment relationship. This enables modeling the deployment to hierarchical nodes that have Properties functioning as internal parts.  Property specializes ParameterableElement to specify that a Property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."@en ;
	uml-model:rule element:Property-subsetting_context_conforms, element:Property-derived_union_is_read_only, element:Property-multiplicity_of_composite, element:Property-redefined_property_inherited, element:Property-subsetting_rules, element:Property-binding_to_attribute, element:Property-derived_union_is_derived, element:Property-deployment_target, element:Property-subsetted_property_names, element:Property-type_of_opposite_end, element:Property-qualified_is_association_end ;
	rdfs:subClassOf element:ConnectableElement, element:DeploymentTarget, element:StructuralFeature ;
	uml-model:ownedAttribute property:Property-aggregation, property:Property-association, property:Property-associationEnd, property:Property-class, property:Property-datatype, property:Property-defaultValue, property:Property-interface, property:Property-isComposite, property:Property-isDerived, property:Property-isDerivedUnion, property:Property-isID, property:Property-opposite, property:Property-owningAssociation, property:Property-qualifier, property:Property-redefinedProperty, property:Property-subsettedProperty ;
	uml-model:operation element:Property-isAttribute, element:Property-isCompatibleWith, element:Property-isComposite.1, element:Property-isConsistentWith, element:Property-isNavigable, element:Property-opposite.1, element:Property-subsettingContext .

element:Property-subsetting_context_conforms rdfs:comment "'Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-subsetting_context_conforms-_specification .

element:Property-subsetting_context_conforms-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "subsettedProperty->notEmpty() implies\n  (subsettingContext()->notEmpty() and subsettingContext()->forAll (sc |\n    subsettedProperty->forAll(sp |\n      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))"^^<http://www.omg.org/spec/OCL> .

element:Property-derived_union_is_read_only rdfs:comment "'A derived union is read only."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-derived_union_is_read_only-_specification .

element:Property-derived_union_is_read_only-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isDerivedUnion implies isReadOnly"^^<http://www.omg.org/spec/OCL> .

element:Property-multiplicity_of_composite rdfs:comment "'A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-multiplicity_of_composite-_specification .

element:Property-multiplicity_of_composite-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isComposite and association <> null implies opposite.upperBound() <= 1"^^<http://www.omg.org/spec/OCL> .

element:Property-redefined_property_inherited rdfs:comment "'A redefined Property must be inherited from a more general Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-redefined_property_inherited-_specification .

element:Property-redefined_property_inherited-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(redefinedProperty->notEmpty()) implies\n  (redefinitionContext->notEmpty() and\n      redefinedProperty->forAll(rp|\n        ((redefinitionContext->collect(fc|\n          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp)))"^^<http://www.omg.org/spec/OCL> .

element:Property-subsetting_rules rdfs:comment "'A subsetting Property may strengthen the type of the subsetted Property, and its upper bound may be less."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-subsetting_rules-_specification .

element:Property-subsetting_rules-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "subsettedProperty->forAll(sp |\n  self.type.conformsTo(sp.type) and\n    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies\n      self.upperBound() <= sp.upperBound() ))"^^<http://www.omg.org/spec/OCL> .

element:Property-binding_to_attribute rdfs:comment "'A binding of a PropertyTemplateParameter representing an attribute must be to an attribute."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-binding_to_attribute-_specification .

element:Property-binding_to_attribute-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(self.isAttribute()\nand (templateParameterSubstitution->notEmpty())\nimplies (templateParameterSubstitution->forAll(ts |\n    ts.formal.oclIsKindOf(Property)\n    and ts.formal.oclAsType(Property).isAttribute())))"^^<http://www.omg.org/spec/OCL> .

element:Property-derived_union_is_derived rdfs:comment "'A derived union is derived."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-derived_union_is_derived-_specification .

element:Property-derived_union_is_derived-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isDerivedUnion implies isDerived"^^<http://www.omg.org/spec/OCL> .

element:Property-deployment_target rdfs:comment "'A Property can be a DeploymentTarget if it is a kind of Node and functions as a part in the internal structure of an encompassing Node."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-deployment_target-_specification .

element:Property-deployment_target-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "deployment->notEmpty() implies owner.oclIsKindOf(Node) and Node.allInstances()->exists(n | n.part->exists(p | p = self))"^^<http://www.omg.org/spec/OCL> .

element:Property-subsetted_property_names rdfs:comment "'A Property may not subset a Property with the same name."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-subsetted_property_names-_specification .

element:Property-subsetted_property_names-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "subsettedProperty->forAll(sp | sp.name <> name)"^^<http://www.omg.org/spec/OCL> .

element:Property-type_of_opposite_end rdfs:comment "'If a Property is a classifier-owned end of a binary Association, its owner must be the type of the opposite end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-type_of_opposite_end-_specification .

element:Property-type_of_opposite_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(opposite->notEmpty() and owningAssociation->isEmpty()) implies classifier = opposite.type"^^<http://www.omg.org/spec/OCL> .

element:Property-qualified_is_association_end rdfs:comment "'All qualified Properties must be Association ends"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Property-qualified_is_association_end-_specification .

element:Property-qualified_is_association_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "qualifier->notEmpty() implies association->notEmpty()"^^<http://www.omg.org/spec/OCL> .

property:Property-aggregation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-aggregation" ;
	rdfs:label "Property-aggregation" ;
	uml-model:name "aggregation" ;
	rdfs:range element:AggregationKind ;
	rdfs:comment "'Specifies the kind of aggregation that applies to the Property."@en ;
	xmi:defaultValue element:Property-aggregation-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Property-aggregation-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "Property-aggregation-_defaultValue" .

property:Property-association rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-association" ;
	rdfs:label "Property-association" ;
	uml-model:name "association" ;
	uml-model:association uml-element:A_memberEnd_association ;
	rdfs:range element:Association ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace ;
	rdfs:comment "'The Association of which this Property is a member, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-associationEnd rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-associationEnd" ;
	rdfs:label "Property-associationEnd" ;
	uml-model:name "associationEnd" ;
	uml-model:association uml-element:A_qualifier_associationEnd ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'Designates the optional association end that owns a qualifier attribute."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-class rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-class" ;
	rdfs:label "Property-class" ;
	uml-model:name "class" ;
	uml-model:association uml-element:A_ownedAttribute_class ;
	rdfs:range element:Class ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:A_ownedAttribute_structuredClassifier-structuredClassifier, uml-element:NamedElement-namespace ;
	rdfs:comment "'The Class that owns this Property, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-datatype rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-datatype" ;
	rdfs:label "Property-datatype" ;
	uml-model:name "datatype" ;
	uml-model:association uml-element:A_ownedAttribute_datatype ;
	rdfs:range element:DataType ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:NamedElement-namespace ;
	rdfs:comment "'The DataType that owns this Property, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-defaultValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-defaultValue" ;
	rdfs:label "Property-defaultValue" ;
	uml-model:name "defaultValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_defaultValue_owningProperty ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A ValueSpecification that is evaluated to give a default value for the Property when an instance of the owning Classifier is instantiated."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-interface rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-interface" ;
	rdfs:label "Property-interface" ;
	uml-model:name "interface" ;
	uml-model:association uml-element:A_ownedAttribute_interface ;
	rdfs:range element:Interface ;
	uml-model:subsettedProperty uml-element:A_attribute_classifier-classifier, uml-element:NamedElement-namespace ;
	rdfs:comment "'The Interface that owns this Property, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-isComposite rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-isComposite" ;
	rdfs:label "Property-isComposite" ;
	uml-model:name "isComposite" ;
	uml-model:derived "true"^^xsd:boolean ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute. This is a derived value, indicating whether the aggregation of the Property is composite or not."@en ;
	xmi:defaultValue element:Property-isComposite-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Property-isComposite.1-spec .

element:Property-isComposite-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Property-isComposite-_defaultValue" .

property:Property-isDerived rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-isDerived" ;
	rdfs:label "Property-isDerived" ;
	uml-model:name "isDerived" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information."@en ;
	xmi:defaultValue element:Property-isDerived-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Property-isDerived-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Property-isDerived-_defaultValue" .

property:Property-isDerivedUnion rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-isDerivedUnion" ;
	rdfs:label "Property-isDerivedUnion" ;
	uml-model:name "isDerivedUnion" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the property is derived as the union of all of the Properties that are constrained to subset it."@en ;
	xmi:defaultValue element:Property-isDerivedUnion-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Property-isDerivedUnion-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Property-isDerivedUnion-_defaultValue" .

property:Property-isID rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-isID" ;
	rdfs:label "Property-isID" ;
	uml-model:name "isID" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'True indicates this property can be used to uniquely identify an instance of the containing Class."@en ;
	xmi:defaultValue element:Property-isID-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Property-isID-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Property-isID-_defaultValue" .

property:Property-opposite rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-opposite" ;
	rdfs:label "Property-opposite" ;
	uml-model:name "opposite" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_opposite_property ;
	rdfs:range element:Property ;
	rdfs:comment "'In the case where the Property is one end of a binary association this gives the other end."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Property-opposite.1-spec .

property:Property-owningAssociation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-owningAssociation" ;
	rdfs:label "Property-owningAssociation" ;
	uml-model:name "owningAssociation" ;
	uml-model:association uml-element:A_ownedEnd_owningAssociation ;
	rdfs:range element:Association ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:NamedElement-namespace, uml-element:Property-association, uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The owning association of this property, if any."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:Property-qualifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-qualifier" ;
	rdfs:label "Property-qualifier" ;
	uml-model:name "qualifier" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_qualifier_associationEnd ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'An optional list of ordered qualifier attributes for the end."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Property-redefinedProperty rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-redefinedProperty" ;
	rdfs:label "Property-redefinedProperty" ;
	uml-model:name "redefinedProperty" ;
	uml-model:association uml-element:A_redefinedProperty_property ;
	rdfs:range element:Property ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The properties that are redefined by this property, if any."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Property-subsettedProperty rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Property-subsettedProperty" ;
	rdfs:label "Property-subsettedProperty" ;
	uml-model:name "subsettedProperty" ;
	uml-model:association uml-element:A_subsettedProperty_property ;
	rdfs:range element:Property ;
	rdfs:comment "'The properties of which this Property is constrained to be a subset, if any."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Property-isAttribute rdfs:comment "'The query isAttribute() is true if the Property is defined as an attribute of some Classifier."@en ;
	uml-model:rule element:Property-isAttribute-spec ;
	uml-model:returns element:Property-isAttribute-result .

element:Property-isAttribute-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-isAttribute-spec-_specification .

element:Property-isAttribute-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (not classifier->isEmpty())"^^<http://www.omg.org/spec/OCL> .

element:Property-isAttribute-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Property-isCompatibleWith uml-model:redefines element:ParameterableElement-isCompatibleWith ;
	rdfs:comment "'The query isCompatibleWith() determines if this Property is compatible with the specified ParameterableElement. This Property is compatible with ParameterableElement p if the kind of this Property is thesame as or a subtype of the kind of p. Further, if p is a TypedElement, then the type of this Property must be conformant with the type of p."@en ;
	uml-model:rule element:Property-isCompatibleWith-spec ;
	uml-model:returns element:Property-isCompatibleWith-result .

element:Property-isCompatibleWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-isCompatibleWith-spec-_specification .

element:Property-isCompatibleWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.oclIsKindOf(p.oclType()) and (p.oclIsKindOf(TypeElement) implies\nself.type.conformsTo(p.oclAsType(TypedElement).type)))"^^<http://www.omg.org/spec/OCL> .

element:Property-isCompatibleWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Property-isCompatibleWith-p rdf:type uml:Parameter ;
	uml-model:name "p" ;
	uml-model:parameterType element:ParameterableElement .

element:Property-isComposite.1 rdfs:comment "'The value of isComposite is true only if aggregation is composite."@en ;
	uml-model:returns element:Property-isComposite.1-result .

element:Property-isComposite.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-isComposite.1-spec-_specification .

element:Property-isComposite.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (aggregation = AggregationKind::composite)"^^<http://www.omg.org/spec/OCL> .

element:Property-isComposite.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Property-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining Property is consistent with a redefined Property if the type of the redefining Property conforms to the type of the redefined Property, and the multiplicity of the redefining Property (if specified) is contained in the multiplicity of the redefined Property."@en ;
	uml-model:rule element:Property-isConsistentWith-pre, element:Property-isConsistentWith-spec ;
	uml-model:returns element:Property-isConsistentWith-result .

element:Property-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:Property-isConsistentWith-pre-_specification .

element:Property-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:Property-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-isConsistentWith-spec-_specification .

element:Property-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(Property) and \n  let prop : Property = redefiningElement.oclAsType(Property) in \n  (prop.type.conformsTo(self.type) and \n  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and \n  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() <= self.lowerBound()) and \n  (self.isComposite implies prop.isComposite)))"^^<http://www.omg.org/spec/OCL> .

element:Property-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Property-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Property-isNavigable rdfs:comment "'The query isNavigable() indicates whether it is possible to navigate across the property."@en ;
	uml-model:rule element:Property-isNavigable-spec ;
	uml-model:returns element:Property-isNavigable-result .

element:Property-isNavigable-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-isNavigable-spec-_specification .

element:Property-isNavigable-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (not classifier->isEmpty() or association.navigableOwnedEnd->includes(self))"^^<http://www.omg.org/spec/OCL> .

element:Property-isNavigable-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:Property-opposite.1 rdfs:comment "'If this property is a memberEnd of a binary association, then opposite gives the other end."@en ;
	uml-model:returns element:Property-opposite.1-result .

element:Property-opposite.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-opposite.1-spec-_specification .

element:Property-opposite.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if association <> null and association.memberEnd->size() = 2\nthen\n    association.memberEnd->any(e | e <> self)\nelse\n    null\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Property-opposite.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property .

element:Property-subsettingContext rdfs:comment "'The query subsettingContext() gives the context for subsetting a Property. It consists, in the case of an attribute, of the corresponding Classifier, and in the case of an association end, all of the Classifiers at the other ends."@en ;
	uml-model:rule element:Property-subsettingContext-spec ;
	uml-model:returns element:Property-subsettingContext-result .

element:Property-subsettingContext-spec rdf:type uml:Constraint ;
	uml-model:specification element:Property-subsettingContext-spec-_specification .

element:Property-subsettingContext-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if association <> null\nthen association.memberEnd->excluding(self)->collect(type)->asSet()\nelse \n  if classifier<>null\n  then classifier->asSet()\n  else Set{} \n  endif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Property-subsettingContext-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Type ;
	uml-model:upperValue element:Property-subsettingContext-result-_upperValue .

element:Property-subsettingContext-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:RedefinableElement xmi:type uml:Class ;
	xmi:id "RedefinableElement" ;
	uml-model:name "RedefinableElement" ;
	rdfs:comment "'A RedefinableElement is an element that, when defined in the context of a Classifier, can be redefined more specifically or differently in the context of another Classifier that specializes (directly or indirectly) the context Classifier."@en ;
	uml-model:rule element:RedefinableElement-redefinition_consistent, element:RedefinableElement-non_leaf_redefinition, element:RedefinableElement-redefinition_context_valid ;
	rdfs:subClassOf element:NamedElement ;
	uml-model:ownedAttribute property:RedefinableElement-isLeaf, property:RedefinableElement-redefinedElement, property:RedefinableElement-redefinitionContext ;
	uml-model:operation element:RedefinableElement-isConsistentWith, element:RedefinableElement-isRedefinitionContextValid .

element:RedefinableElement-redefinition_consistent rdfs:comment "'A redefining element must be consistent with each redefined element."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-redefinition_consistent-_specification .

element:RedefinableElement-redefinition_consistent-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefinedElement->forAll(re | re.isConsistentWith(self))"^^<http://www.omg.org/spec/OCL> .

element:RedefinableElement-non_leaf_redefinition rdfs:comment "'A RedefinableElement can only redefine non-leaf RedefinableElements."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-non_leaf_redefinition-_specification .

element:RedefinableElement-non_leaf_redefinition-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefinedElement->forAll(re | not re.isLeaf)"^^<http://www.omg.org/spec/OCL> .

element:RedefinableElement-redefinition_context_valid rdfs:comment "'At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-redefinition_context_valid-_specification .

element:RedefinableElement-redefinition_context_valid-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefinedElement->forAll(re | self.isRedefinitionContextValid(re))"^^<http://www.omg.org/spec/OCL> .

property:RedefinableElement-isLeaf rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableElement-isLeaf" ;
	rdfs:label "RedefinableElement-isLeaf" ;
	uml-model:name "isLeaf" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether it is possible to further redefine a RedefinableElement. If the value is true, then it is not possible to further redefine the RedefinableElement."@en ;
	xmi:defaultValue element:RedefinableElement-isLeaf-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:RedefinableElement-isLeaf-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "RedefinableElement-isLeaf-_defaultValue" .

property:RedefinableElement-redefinedElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableElement-redefinedElement" ;
	rdfs:label "RedefinableElement-redefinedElement" ;
	uml-model:name "redefinedElement" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_redefinedElement_redefinableElement ;
	rdfs:range element:RedefinableElement ;
	rdfs:comment "'The RedefinableElement that is being redefined by this element."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:RedefinableElement-redefinitionContext rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableElement-redefinitionContext" ;
	rdfs:label "RedefinableElement-redefinitionContext" ;
	uml-model:name "redefinitionContext" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_redefinitionContext_redefinableElement ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The contexts that this element may be redefined from."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:RedefinableElement-isConsistentWith rdfs:comment "'The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions."@en ;
	uml-model:rule element:RedefinableElement-isConsistentWith-spec, element:RedefinableElement-isConsistentWith-pre ;
	uml-model:returns element:RedefinableElement-isConsistentWith-result .

element:RedefinableElement-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-isConsistentWith-spec-_specification .

element:RedefinableElement-isConsistentWith-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (false)"^^<http://www.omg.org/spec/OCL> .

element:RedefinableElement-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-isConsistentWith-pre-_specification .

element:RedefinableElement-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:RedefinableElement-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:RedefinableElement-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:RedefinableElement-isRedefinitionContextValid rdfs:comment "'The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element."@en ;
	uml-model:rule element:RedefinableElement-isRedefinitionContextValid-spec ;
	uml-model:returns element:RedefinableElement-isRedefinitionContextValid-result .

element:RedefinableElement-isRedefinitionContextValid-spec rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableElement-isRedefinitionContextValid-spec-_specification .

element:RedefinableElement-isRedefinitionContextValid-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefinitionContext->exists(c | c.allParents()->includesAll(redefinedElement.redefinitionContext)))"^^<http://www.omg.org/spec/OCL> .

element:RedefinableElement-isRedefinitionContextValid-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:RedefinableElement-isRedefinitionContextValid-redefinedElement rdf:type uml:Parameter ;
	uml-model:name "redefinedElement" ;
	uml-model:parameterType element:RedefinableElement .

element:RedefinableTemplateSignature xmi:type uml:Class ;
	xmi:id "RedefinableTemplateSignature" ;
	uml-model:name "RedefinableTemplateSignature" ;
	rdfs:comment "'A RedefinableTemplateSignature supports the addition of formal template parameters in a specialization of a template classifier."@en ;
	uml-model:rule element:RedefinableTemplateSignature-redefines_parents ;
	rdfs:subClassOf element:RedefinableElement, element:TemplateSignature ;
	uml-model:ownedAttribute property:RedefinableTemplateSignature-classifier, property:RedefinableTemplateSignature-extendedSignature, property:RedefinableTemplateSignature-inheritedParameter ;
	uml-model:operation element:RedefinableTemplateSignature-inheritedParameter.1, element:RedefinableTemplateSignature-isConsistentWith .

element:RedefinableTemplateSignature-redefines_parents rdfs:comment "'If any of the parent Classifiers are a template, then the extendedSignature must include the signature of that Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableTemplateSignature-redefines_parents-_specification .

element:RedefinableTemplateSignature-redefines_parents-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "classifier.allParents()->forAll(c | c.ownedTemplateSignature->notEmpty() implies self->closure(extendedSignature)->includes(c.ownedTemplateSignature))"^^<http://www.omg.org/spec/OCL> .

property:RedefinableTemplateSignature-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableTemplateSignature-classifier" ;
	rdfs:label "RedefinableTemplateSignature-classifier" ;
	uml-model:name "classifier" ;
	uml-model:association uml-element:A_ownedTemplateSignature_classifier ;
	rdfs:range element:Classifier ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinitionContext ;
	rdfs:comment "'The Classifier that owns this RedefinableTemplateSignature."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:RedefinableTemplateSignature-extendedSignature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableTemplateSignature-extendedSignature" ;
	rdfs:label "RedefinableTemplateSignature-extendedSignature" ;
	uml-model:name "extendedSignature" ;
	uml-model:association uml-element:A_extendedSignature_redefinableTemplateSignature ;
	rdfs:range element:RedefinableTemplateSignature ;
	uml-model:subsettedProperty uml-element:RedefinableElement-redefinedElement ;
	rdfs:comment "'The signatures extended by this RedefinableTemplateSignature."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:RedefinableTemplateSignature-inheritedParameter rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RedefinableTemplateSignature-inheritedParameter" ;
	rdfs:label "RedefinableTemplateSignature-inheritedParameter" ;
	uml-model:name "inheritedParameter" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_inheritedParameter_redefinableTemplateSignature ;
	rdfs:range element:TemplateParameter ;
	uml-model:subsettedProperty uml-element:TemplateSignature-parameter ;
	rdfs:comment "'The formal template parameters of the extended signatures."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:RedefinableTemplateSignature-inheritedParameter.1-spec .

element:RedefinableTemplateSignature-inheritedParameter.1 rdfs:comment "'Derivation for RedefinableTemplateSignature::/inheritedParameter"@en ;
	uml-model:returns element:RedefinableTemplateSignature-inheritedParameter.1-result .

element:RedefinableTemplateSignature-inheritedParameter.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableTemplateSignature-inheritedParameter.1-spec-_specification .

element:RedefinableTemplateSignature-inheritedParameter.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if extendedSignature->isEmpty() then Set{} else extendedSignature.parameter->asSet() endif)"^^<http://www.omg.org/spec/OCL> .

element:RedefinableTemplateSignature-inheritedParameter.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:TemplateParameter ;
	uml-model:upperValue element:RedefinableTemplateSignature-inheritedParameter.1-result-_upperValue .

element:RedefinableTemplateSignature-inheritedParameter.1-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:RedefinableTemplateSignature-isConsistentWith uml-model:redefines element:RedefinableElement-isConsistentWith ;
	rdfs:comment "'The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, as redefinition only adds new formal parameters."@en ;
	uml-model:rule element:RedefinableTemplateSignature-isConsistentWith-spec, element:RedefinableTemplateSignature-isConsistentWith-pre ;
	uml-model:returns element:RedefinableTemplateSignature-isConsistentWith-result .

element:RedefinableTemplateSignature-isConsistentWith-spec rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableTemplateSignature-isConsistentWith-spec-spec .

element:RedefinableTemplateSignature-isConsistentWith-spec-spec rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (redefiningElement.oclIsKindOf(RedefinableTemplateSignature))"^^<http://www.omg.org/spec/OCL> .

element:RedefinableTemplateSignature-isConsistentWith-pre rdf:type uml:Constraint ;
	uml-model:specification element:RedefinableTemplateSignature-isConsistentWith-pre-_specification .

element:RedefinableTemplateSignature-isConsistentWith-pre-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "redefiningElement.isRedefinitionContextValid(self)"^^<http://www.omg.org/spec/OCL> .

element:RedefinableTemplateSignature-isConsistentWith-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType <http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean> .

element:RedefinableTemplateSignature-isConsistentWith-redefiningElement rdf:type uml:Parameter ;
	uml-model:name "redefiningElement" ;
	uml-model:parameterType element:RedefinableElement .

element:Slot xmi:type uml:Class ;
	xmi:id "Slot" ;
	uml-model:name "Slot" ;
	rdfs:comment "'A Slot designates that an entity modeled by an InstanceSpecification has a value or values for a specific StructuralFeature."@en ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:Slot-definingFeature, property:Slot-owningInstance, property:Slot-value .

property:Slot-definingFeature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Slot-definingFeature" ;
	rdfs:label "Slot-definingFeature" ;
	uml-model:name "definingFeature" ;
	uml-model:association uml-element:A_definingFeature_slot ;
	rdfs:range element:StructuralFeature ;
	rdfs:comment "'The StructuralFeature that specifies the values that may be held by the Slot."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Slot-owningInstance rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Slot-owningInstance" ;
	rdfs:label "Slot-owningInstance" ;
	uml-model:name "owningInstance" ;
	uml-model:association uml-element:A_slot_owningInstance ;
	rdfs:range element:InstanceSpecification ;
	uml-model:subsettedProperty uml-element:Element-owner ;
	rdfs:comment "'The InstanceSpecification that owns this Slot."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Slot-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Slot-value" ;
	rdfs:label "Slot-value" ;
	uml-model:name "value" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_value_owningSlot ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The value or values held by the Slot."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StructuralFeature xmi:type uml:Class ;
	xmi:id "StructuralFeature" ;
	uml-model:name "StructuralFeature" ;
	rdfs:comment "'A StructuralFeature is a typed feature of a Classifier that specifies the structure of instances of the Classifier."@en ;
	rdfs:subClassOf element:MultiplicityElement, element:TypedElement, element:Feature ;
	uml-model:ownedAttribute property:StructuralFeature-isReadOnly .

property:StructuralFeature-isReadOnly rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuralFeature-isReadOnly" ;
	rdfs:label "StructuralFeature-isReadOnly" ;
	uml-model:name "isReadOnly" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If isReadOnly is true, the StructuralFeature may not be written to after initialization."@en ;
	xmi:defaultValue element:StructuralFeature-isReadOnly-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:StructuralFeature-isReadOnly-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "StructuralFeature-isReadOnly-_defaultValue" .

element:AggregationKind xmi:type uml:Enumeration ;
	xmi:id "AggregationKind" ;
	uml-model:name "AggregationKind" ;
	rdfs:comment "'AggregationKind is an Enumeration for specifying the kind of aggregation of a Property."@en .

element:CallConcurrencyKind xmi:type uml:Enumeration ;
	xmi:id "CallConcurrencyKind" ;
	uml-model:name "CallConcurrencyKind" ;
	rdfs:comment "'CallConcurrencyKind is an Enumeration used to specify the semantics of concurrent calls to a BehavioralFeature."@en .

element:ParameterDirectionKind xmi:type uml:Enumeration ;
	xmi:id "ParameterDirectionKind" ;
	uml-model:name "ParameterDirectionKind" ;
	rdfs:comment "'ParameterDirectionKind is an Enumeration that defines literals used to specify direction of parameters."@en .

element:ParameterEffectKind xmi:type uml:Enumeration ;
	xmi:id "ParameterEffectKind" ;
	uml-model:name "ParameterEffectKind" ;
	rdfs:comment "'ParameterEffectKind is an Enumeration that indicates the effect of a Behavior on values passed in or out of its parameters."@en .

element:A_definingFeature_slot xmi:type uml:Association ;
	xmi:id "A_definingFeature_slot" ;
	uml-model:name "A_definingFeature_slot" .

element:A_definingFeature_slot-slot xmi:type uml:Property ;
	xmi:id "A_definingFeature_slot-slot" ;
	uml-model:name "slot" ;
	uml-model:type "Slot" ;
	uml-model:association uml-element:A_definingFeature_slot .

element:A_value_owningSlot xmi:type uml:Association ;
	xmi:id "A_value_owningSlot" ;
	uml-model:name "A_value_owningSlot" .

element:A_value_owningSlot-owningSlot xmi:type uml:Property ;
	xmi:id "A_value_owningSlot-owningSlot" ;
	uml-model:name "owningSlot" ;
	uml-model:type "Slot" ;
	uml-model:association uml-element:A_value_owningSlot ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_extendedSignature_redefinableTemplateSignature xmi:type uml:Association ;
	xmi:id "A_extendedSignature_redefinableTemplateSignature" ;
	uml-model:name "A_extendedSignature_redefinableTemplateSignature" .

element:A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature xmi:type uml:Property ;
	xmi:id "A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature" ;
	uml-model:name "redefinableTemplateSignature" ;
	uml-model:type "RedefinableTemplateSignature" ;
	uml-model:association uml-element:A_extendedSignature_redefinableTemplateSignature ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_inheritedParameter_redefinableTemplateSignature xmi:type uml:Association ;
	xmi:id "A_inheritedParameter_redefinableTemplateSignature" ;
	uml-model:name "A_inheritedParameter_redefinableTemplateSignature" .

element:A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature xmi:type uml:Property ;
	xmi:id "A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature" ;
	uml-model:name "redefinableTemplateSignature" ;
	uml-model:type "RedefinableTemplateSignature" ;
	uml-model:association uml-element:A_inheritedParameter_redefinableTemplateSignature ;
	uml-model:subsettedProperty uml-element:A_parameter_templateSignature-templateSignature .

element:A_redefinitionContext_redefinableElement xmi:type uml:Association ;
	xmi:id "A_redefinitionContext_redefinableElement" ;
	uml-model:name "A_redefinitionContext_redefinableElement" .

element:A_redefinitionContext_redefinableElement-redefinableElement xmi:type uml:Property ;
	xmi:id "A_redefinitionContext_redefinableElement-redefinableElement" ;
	uml-model:name "redefinableElement" ;
	uml-model:type "RedefinableElement" ;
	uml-model:association uml-element:A_redefinitionContext_redefinableElement .

element:A_redefinedElement_redefinableElement xmi:type uml:Association ;
	xmi:id "A_redefinedElement_redefinableElement" ;
	uml-model:name "A_redefinedElement_redefinableElement" .

element:A_redefinedElement_redefinableElement-redefinableElement xmi:type uml:Property ;
	xmi:id "A_redefinedElement_redefinableElement-redefinableElement" ;
	uml-model:name "redefinableElement" ;
	uml-model:type "RedefinableElement" ;
	uml-model:association uml-element:A_redefinedElement_redefinableElement .

element:A_qualifier_associationEnd xmi:type uml:Association ;
	xmi:id "A_qualifier_associationEnd" ;
	uml-model:name "A_qualifier_associationEnd" .

element:A_redefinedProperty_property xmi:type uml:Association ;
	xmi:id "A_redefinedProperty_property" ;
	uml-model:name "A_redefinedProperty_property" .

element:A_redefinedProperty_property-property xmi:type uml:Property ;
	xmi:id "A_redefinedProperty_property-property" ;
	uml-model:name "property" ;
	uml-model:type "Property" ;
	uml-model:association uml-element:A_redefinedProperty_property ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_defaultValue_owningProperty xmi:type uml:Association ;
	xmi:id "A_defaultValue_owningProperty" ;
	uml-model:name "A_defaultValue_owningProperty" .

element:A_defaultValue_owningProperty-owningProperty xmi:type uml:Property ;
	xmi:id "A_defaultValue_owningProperty-owningProperty" ;
	uml-model:name "owningProperty" ;
	uml-model:type "Property" ;
	uml-model:association uml-element:A_defaultValue_owningProperty ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_opposite_property xmi:type uml:Association ;
	xmi:id "A_opposite_property" ;
	uml-model:name "A_opposite_property" .

element:A_opposite_property-property xmi:type uml:Property ;
	xmi:id "A_opposite_property-property" ;
	uml-model:name "property" ;
	uml-model:type "Property" ;
	uml-model:association uml-element:A_opposite_property .

element:A_subsettedProperty_property xmi:type uml:Association ;
	xmi:id "A_subsettedProperty_property" ;
	uml-model:name "A_subsettedProperty_property" .

element:A_subsettedProperty_property-property xmi:type uml:Property ;
	xmi:id "A_subsettedProperty_property-property" ;
	uml-model:name "property" ;
	uml-model:type "Property" ;
	uml-model:association uml-element:A_subsettedProperty_property .

element:A_condition_parameterSet xmi:type uml:Association ;
	xmi:id "A_condition_parameterSet" ;
	uml-model:name "A_condition_parameterSet" .

element:A_condition_parameterSet-parameterSet xmi:type uml:Property ;
	xmi:id "A_condition_parameterSet-parameterSet" ;
	uml-model:name "parameterSet" ;
	uml-model:type "ParameterSet" ;
	uml-model:association uml-element:A_condition_parameterSet ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_parameterSet_parameter xmi:type uml:Association ;
	xmi:id "A_parameterSet_parameter" ;
	uml-model:name "A_parameterSet_parameter" .

element:A_defaultValue_owningParameter xmi:type uml:Association ;
	xmi:id "A_defaultValue_owningParameter" ;
	uml-model:name "A_defaultValue_owningParameter" .

element:A_defaultValue_owningParameter-owningParameter xmi:type uml:Property ;
	xmi:id "A_defaultValue_owningParameter-owningParameter" ;
	uml-model:name "owningParameter" ;
	uml-model:type "Parameter" ;
	uml-model:association uml-element:A_defaultValue_owningParameter ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_type_operation xmi:type uml:Association ;
	xmi:id "A_type_operation" ;
	uml-model:name "A_type_operation" .

element:A_type_operation-operation xmi:type uml:Property ;
	xmi:id "A_type_operation-operation" ;
	uml-model:name "operation" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_type_operation .

element:A_operation_templateParameter_parameteredElement xmi:type uml:Association ;
	xmi:id "A_operation_templateParameter_parameteredElement" ;
	uml-model:name "A_operation_templateParameter_parameteredElement" .

element:A_bodyCondition_bodyContext xmi:type uml:Association ;
	xmi:id "A_bodyCondition_bodyContext" ;
	uml-model:name "A_bodyCondition_bodyContext" .

element:A_bodyCondition_bodyContext-bodyContext xmi:type uml:Property ;
	xmi:id "A_bodyCondition_bodyContext-bodyContext" ;
	uml-model:name "bodyContext" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_bodyCondition_bodyContext ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_postcondition_postContext xmi:type uml:Association ;
	xmi:id "A_postcondition_postContext" ;
	uml-model:name "A_postcondition_postContext" .

element:A_postcondition_postContext-postContext xmi:type uml:Property ;
	xmi:id "A_postcondition_postContext-postContext" ;
	uml-model:name "postContext" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_postcondition_postContext ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_redefinedOperation_operation xmi:type uml:Association ;
	xmi:id "A_redefinedOperation_operation" ;
	uml-model:name "A_redefinedOperation_operation" .

element:A_redefinedOperation_operation-operation xmi:type uml:Property ;
	xmi:id "A_redefinedOperation_operation-operation" ;
	uml-model:name "operation" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_redefinedOperation_operation ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_raisedException_operation xmi:type uml:Association ;
	xmi:id "A_raisedException_operation" ;
	uml-model:name "A_raisedException_operation" .

element:A_raisedException_operation-operation xmi:type uml:Property ;
	xmi:id "A_raisedException_operation-operation" ;
	uml-model:name "operation" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_raisedException_operation ;
	uml-model:subsettedProperty uml-element:A_raisedException_behavioralFeature-behavioralFeature .

element:A_precondition_preContext xmi:type uml:Association ;
	xmi:id "A_precondition_preContext" ;
	uml-model:name "A_precondition_preContext" .

element:A_precondition_preContext-preContext xmi:type uml:Property ;
	xmi:id "A_precondition_preContext-preContext" ;
	uml-model:name "preContext" ;
	uml-model:type "Operation" ;
	uml-model:association uml-element:A_precondition_preContext ;
	uml-model:subsettedProperty uml-element:Constraint-context .

element:A_ownedParameter_operation xmi:type uml:Association ;
	xmi:id "A_ownedParameter_operation" ;
	uml-model:name "A_ownedParameter_operation" .

element:A_instance_instanceValue xmi:type uml:Association ;
	xmi:id "A_instance_instanceValue" ;
	uml-model:name "A_instance_instanceValue" .

element:A_instance_instanceValue-instanceValue xmi:type uml:Property ;
	xmi:id "A_instance_instanceValue-instanceValue" ;
	uml-model:name "instanceValue" ;
	uml-model:type "InstanceValue" ;
	uml-model:association uml-element:A_instance_instanceValue .

element:A_classifier_instanceSpecification xmi:type uml:Association ;
	xmi:id "A_classifier_instanceSpecification" ;
	uml-model:name "A_classifier_instanceSpecification" .

element:A_classifier_instanceSpecification-instanceSpecification xmi:type uml:Property ;
	xmi:id "A_classifier_instanceSpecification-instanceSpecification" ;
	uml-model:name "instanceSpecification" ;
	uml-model:type "InstanceSpecification" ;
	uml-model:association uml-element:A_classifier_instanceSpecification .

element:A_slot_owningInstance xmi:type uml:Association ;
	xmi:id "A_slot_owningInstance" ;
	uml-model:name "A_slot_owningInstance" .

element:A_specification_owningInstanceSpec xmi:type uml:Association ;
	xmi:id "A_specification_owningInstanceSpec" ;
	uml-model:name "A_specification_owningInstanceSpec" .

element:A_specification_owningInstanceSpec-owningInstanceSpec xmi:type uml:Property ;
	xmi:id "A_specification_owningInstanceSpec-owningInstanceSpec" ;
	uml-model:name "owningInstanceSpec" ;
	uml-model:type "InstanceSpecification" ;
	uml-model:association uml-element:A_specification_owningInstanceSpec ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_generalizationSet_generalization xmi:type uml:Association ;
	xmi:id "A_generalizationSet_generalization" ;
	uml-model:name "A_generalizationSet_generalization" .

element:A_general_generalization xmi:type uml:Association ;
	xmi:id "A_general_generalization" ;
	uml-model:name "A_general_generalization" .

element:A_general_generalization-generalization xmi:type uml:Property ;
	xmi:id "A_general_generalization-generalization" ;
	uml-model:name "generalization" ;
	uml-model:type "Generalization" ;
	uml-model:association uml-element:A_general_generalization ;
	uml-model:subsettedProperty uml-element:A_target_directedRelationship-directedRelationship .

element:A_constrainingClassifier_classifierTemplateParameter xmi:type uml:Association ;
	xmi:id "A_constrainingClassifier_classifierTemplateParameter" ;
	uml-model:name "A_constrainingClassifier_classifierTemplateParameter" .

element:A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter xmi:type uml:Property ;
	xmi:id "A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter" ;
	uml-model:name "classifierTemplateParameter" ;
	uml-model:type "ClassifierTemplateParameter" ;
	uml-model:association uml-element:A_constrainingClassifier_classifierTemplateParameter .

element:A_classifier_templateParameter_parameteredElement xmi:type uml:Association ;
	xmi:id "A_classifier_templateParameter_parameteredElement" ;
	uml-model:name "A_classifier_templateParameter_parameteredElement" .

element:A_powertypeExtent_powertype xmi:type uml:Association ;
	xmi:id "A_powertypeExtent_powertype" ;
	uml-model:name "A_powertypeExtent_powertype" .

element:A_generalization_specific xmi:type uml:Association ;
	xmi:id "A_generalization_specific" ;
	uml-model:name "A_generalization_specific" .

element:A_general_classifier xmi:type uml:Association ;
	xmi:id "A_general_classifier" ;
	uml-model:name "A_general_classifier" .

element:A_general_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_general_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_general_classifier .

element:A_feature_featuringClassifier xmi:type uml:Association ;
	xmi:id "A_feature_featuringClassifier" ;
	uml-model:name "A_feature_featuringClassifier" .

element:A_substitution_substitutingClassifier xmi:type uml:Association ;
	xmi:id "A_substitution_substitutingClassifier" ;
	uml-model:name "A_substitution_substitutingClassifier" .

element:A_representation_classifier xmi:type uml:Association ;
	xmi:id "A_representation_classifier" ;
	uml-model:name "A_representation_classifier" ;
	rdfs:subClassOf element:A_collaborationUse_classifier .

element:A_representation_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_representation_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_representation_classifier .

element:A_ownedTemplateSignature_classifier xmi:type uml:Association ;
	xmi:id "A_ownedTemplateSignature_classifier" ;
	uml-model:name "A_ownedTemplateSignature_classifier" .

element:A_inheritedMember_inheritingClassifier xmi:type uml:Association ;
	xmi:id "A_inheritedMember_inheritingClassifier" ;
	uml-model:name "A_inheritedMember_inheritingClassifier" .

element:A_inheritedMember_inheritingClassifier-inheritingClassifier xmi:type uml:Property ;
	xmi:id "A_inheritedMember_inheritingClassifier-inheritingClassifier" ;
	uml-model:name "inheritingClassifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_inheritedMember_inheritingClassifier ;
	uml-model:subsettedProperty uml-element:A_member_memberNamespace-memberNamespace .

element:A_redefinedClassifier_classifier xmi:type uml:Association ;
	xmi:id "A_redefinedClassifier_classifier" ;
	uml-model:name "A_redefinedClassifier_classifier" .

element:A_redefinedClassifier_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_redefinedClassifier_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_redefinedClassifier_classifier ;
	uml-model:subsettedProperty uml-element:A_redefinedElement_redefinableElement-redefinableElement .

element:A_collaborationUse_classifier xmi:type uml:Association ;
	xmi:id "A_collaborationUse_classifier" ;
	uml-model:name "A_collaborationUse_classifier" .

element:A_collaborationUse_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_collaborationUse_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_collaborationUse_classifier ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_attribute_classifier xmi:type uml:Association ;
	xmi:id "A_attribute_classifier" ;
	uml-model:name "A_attribute_classifier" .

element:A_attribute_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_attribute_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_attribute_classifier ;
	uml-model:subsettedProperty uml-element:Feature-featuringClassifier, uml-element:RedefinableElement-redefinitionContext .

element:A_ownedUseCase_classifier xmi:type uml:Association ;
	xmi:id "A_ownedUseCase_classifier" ;
	uml-model:name "A_ownedUseCase_classifier" .

element:A_ownedUseCase_classifier-classifier xmi:type uml:Property ;
	xmi:id "A_ownedUseCase_classifier-classifier" ;
	uml-model:name "classifier" ;
	uml-model:type "Classifier" ;
	uml-model:association uml-element:A_ownedUseCase_classifier ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_ownedParameter_ownerFormalParam xmi:type uml:Association ;
	xmi:id "A_ownedParameter_ownerFormalParam" ;
	uml-model:name "A_ownedParameter_ownerFormalParam" .

element:A_ownedParameter_ownerFormalParam-ownerFormalParam xmi:type uml:Property ;
	xmi:id "A_ownedParameter_ownerFormalParam-ownerFormalParam" ;
	uml-model:name "ownerFormalParam" ;
	uml-model:type "BehavioralFeature" ;
	uml-model:association uml-element:A_ownedParameter_ownerFormalParam ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_raisedException_behavioralFeature xmi:type uml:Association ;
	xmi:id "A_raisedException_behavioralFeature" ;
	uml-model:name "A_raisedException_behavioralFeature" .

element:A_raisedException_behavioralFeature-behavioralFeature xmi:type uml:Property ;
	xmi:id "A_raisedException_behavioralFeature-behavioralFeature" ;
	uml-model:name "behavioralFeature" ;
	uml-model:type "BehavioralFeature" ;
	uml-model:association uml-element:A_raisedException_behavioralFeature .

element:A_ownedParameterSet_behavioralFeature xmi:type uml:Association ;
	xmi:id "A_ownedParameterSet_behavioralFeature" ;
	uml-model:name "A_ownedParameterSet_behavioralFeature" .

element:A_ownedParameterSet_behavioralFeature-behavioralFeature xmi:type uml:Property ;
	xmi:id "A_ownedParameterSet_behavioralFeature-behavioralFeature" ;
	uml-model:name "behavioralFeature" ;
	uml-model:type "BehavioralFeature" ;
	uml-model:association uml-element:A_ownedParameterSet_behavioralFeature ;
	uml-model:subsettedProperty uml-element:NamedElement-namespace .

element:A_method_specification xmi:type uml:Association ;
	xmi:id "A_method_specification" ;
	uml-model:name "A_method_specification" .

element:A_contract_substitution xmi:type uml:Association ;
	xmi:id "A_contract_substitution" ;
	uml-model:name "A_contract_substitution" .

element:A_contract_substitution-substitution xmi:type uml:Property ;
	xmi:id "A_contract_substitution-substitution" ;
	uml-model:name "substitution" ;
	uml-model:type "Substitution" ;
	uml-model:association uml-element:A_contract_substitution ;
	uml-model:subsettedProperty uml-element:A_supplier_supplierDependency-supplierDependency .

element:Actions xmi:type uml:Package ;
	xmi:id "Actions" ;
	uml-model:name "Actions" .

uml-import:Actions-_packageImport.0 xmi:type uml:PackageImport ;
	xmi:id "Actions-_packageImport.0" ;
	uml-model:packagedElement element:Actions ;
	uml-model:importedPackage element:Classification .

uml-import:Actions-_packageImport.1 xmi:type uml:PackageImport ;
	xmi:id "Actions-_packageImport.1" ;
	uml-model:packagedElement element:Actions ;
	uml-model:importedPackage element:StructuredClassifiers .

uml-import:Actions-_packageImport.2 xmi:type uml:PackageImport ;
	xmi:id "Actions-_packageImport.2" ;
	uml-model:packagedElement element:Actions ;
	uml-model:importedPackage element:CommonStructure .

uml-import:Actions-_packageImport.3 xmi:type uml:PackageImport ;
	xmi:id "Actions-_packageImport.3" ;
	uml-model:packagedElement element:Actions ;
	uml-model:importedPackage element:Activities .

uml-import:Actions-_packageImport.4 xmi:type uml:PackageImport ;
	xmi:id "Actions-_packageImport.4" ;
	uml-model:packagedElement element:Actions ;
	uml-model:importedPackage element:CommonBehavior .

element:ValueSpecificationAction xmi:type uml:Class ;
	xmi:id "ValueSpecificationAction" ;
	uml-model:name "ValueSpecificationAction" ;
	rdfs:comment "'A ValueSpecificationAction is an Action that evaluates a ValueSpecification and provides a result."@en ;
	uml-model:rule element:ValueSpecificationAction-multiplicity, element:ValueSpecificationAction-compatible_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ValueSpecificationAction-result, property:ValueSpecificationAction-value .

element:ValueSpecificationAction-multiplicity rdfs:comment "'The multiplicity of the result OutputPin is 1..1"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecificationAction-multiplicity-_specification .

element:ValueSpecificationAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ValueSpecificationAction-compatible_type rdfs:comment "'The type of the value ValueSpecification must conform to the type of the result OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ValueSpecificationAction-compatible_type-_specification .

element:ValueSpecificationAction-compatible_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value.type.conformsTo(result.type)"^^<http://www.omg.org/spec/OCL> .

property:ValueSpecificationAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ValueSpecificationAction-result" ;
	rdfs:label "ValueSpecificationAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_valueSpecificationAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the result value is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ValueSpecificationAction-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ValueSpecificationAction-value" ;
	rdfs:label "ValueSpecificationAction-value" ;
	uml-model:name "value" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_value_valueSpecificationAction ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The ValueSpecification to be evaluated."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:VariableAction xmi:type uml:Class ;
	xmi:id "VariableAction" ;
	uml-model:name "VariableAction" ;
	rdfs:comment "'VariableAction is an abstract class for Actions that operate on a specified Variable."@en ;
	uml-model:rule element:VariableAction-scope_of_variable ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:VariableAction-variable .

element:VariableAction-scope_of_variable rdfs:comment "'The VariableAction must be in the scope of the variable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:VariableAction-scope_of_variable-_specification .

element:VariableAction-scope_of_variable-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "variable.isAccessibleBy(self)"^^<http://www.omg.org/spec/OCL> .

property:VariableAction-variable rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "VariableAction-variable" ;
	rdfs:label "VariableAction-variable" ;
	uml-model:name "variable" ;
	uml-model:association uml-element:A_variable_variableAction ;
	rdfs:range element:Variable ;
	rdfs:comment "'The Variable to be read or written."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:WriteLinkAction xmi:type uml:Class ;
	xmi:id "WriteLinkAction" ;
	uml-model:name "WriteLinkAction" ;
	rdfs:comment "'WriteLinkAction is an abstract class for LinkActions that create and destroy links."@en ;
	uml-model:rule element:WriteLinkAction-allow_access ;
	rdfs:subClassOf element:LinkAction .

element:WriteLinkAction-allow_access rdfs:comment "'The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteLinkAction-allow_access-_specification .

element:WriteLinkAction-allow_access-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "endData.end->exists(end |\n  end.type=_'context' or\n  end.visibility=VisibilityKind::public or \n  end.visibility=VisibilityKind::protected and\n  endData.end->exists(other | \n    other<>end and _'context'.conformsTo(other.type.oclAsType(Classifier))))"^^<http://www.omg.org/spec/OCL> .

element:WriteStructuralFeatureAction xmi:type uml:Class ;
	xmi:id "WriteStructuralFeatureAction" ;
	uml-model:name "WriteStructuralFeatureAction" ;
	rdfs:comment "'WriteStructuralFeatureAction is an abstract class for StructuralFeatureActions that change StructuralFeature values."@en ;
	uml-model:rule element:WriteStructuralFeatureAction-multiplicity_of_result, element:WriteStructuralFeatureAction-type_of_value, element:WriteStructuralFeatureAction-multiplicity_of_value, element:WriteStructuralFeatureAction-type_of_result ;
	rdfs:subClassOf element:StructuralFeatureAction ;
	uml-model:ownedAttribute property:WriteStructuralFeatureAction-result, property:WriteStructuralFeatureAction-value .

element:WriteStructuralFeatureAction-multiplicity_of_result rdfs:comment "'The multiplicity of the result OutputPin must be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteStructuralFeatureAction-multiplicity_of_result-_specification .

element:WriteStructuralFeatureAction-multiplicity_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result <> null implies result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:WriteStructuralFeatureAction-type_of_value rdfs:comment "'The type of the value InputPin must conform to the type of the structuralFeature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteStructuralFeatureAction-type_of_value-_specification .

element:WriteStructuralFeatureAction-type_of_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value <> null implies value.type.conformsTo(structuralFeature.type)"^^<http://www.omg.org/spec/OCL> .

element:WriteStructuralFeatureAction-multiplicity_of_value rdfs:comment "'The multiplicity of the value InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteStructuralFeatureAction-multiplicity_of_value-_specification .

element:WriteStructuralFeatureAction-multiplicity_of_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value<>null implies value.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:WriteStructuralFeatureAction-type_of_result rdfs:comment "'The type of the result OutputPin is the same as the type of the inherited object InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteStructuralFeatureAction-type_of_result-_specification .

element:WriteStructuralFeatureAction-type_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result <> null implies result.type = object.type"^^<http://www.omg.org/spec/OCL> .

property:WriteStructuralFeatureAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "WriteStructuralFeatureAction-result" ;
	rdfs:label "WriteStructuralFeatureAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_writeStructuralFeatureAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which is put the input object as modified by the WriteStructuralFeatureAction."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:WriteStructuralFeatureAction-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "WriteStructuralFeatureAction-value" ;
	rdfs:label "WriteStructuralFeatureAction-value" ;
	uml-model:name "value" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_value_writeStructuralFeatureAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that provides the value to be added or removed from the StructuralFeature."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:WriteVariableAction xmi:type uml:Class ;
	xmi:id "WriteVariableAction" ;
	uml-model:name "WriteVariableAction" ;
	rdfs:comment "'WriteVariableAction is an abstract class for VariableActions that change Variable values."@en ;
	uml-model:rule element:WriteVariableAction-value_type, element:WriteVariableAction-multiplicity ;
	rdfs:subClassOf element:VariableAction ;
	uml-model:ownedAttribute property:WriteVariableAction-value .

element:WriteVariableAction-value_type rdfs:comment "'The type of the value InputPin must conform to the type of the variable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteVariableAction-value_type-_specification .

element:WriteVariableAction-value_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value <> null implies value.type.conformsTo(variable.type)"^^<http://www.omg.org/spec/OCL> .

element:WriteVariableAction-multiplicity rdfs:comment "'The multiplicity of the value InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:WriteVariableAction-multiplicity-_specification .

element:WriteVariableAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value<>null implies value.is(1,1)"^^<http://www.omg.org/spec/OCL> .

property:WriteVariableAction-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "WriteVariableAction-value" ;
	rdfs:label "WriteVariableAction-value" ;
	uml-model:name "value" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_value_writeVariableAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that gives the value to be added or removed from the Variable."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ExpansionKind xmi:type uml:Enumeration ;
	xmi:id "ExpansionKind" ;
	uml-model:name "ExpansionKind" ;
	rdfs:comment "'ExpansionKind is an enumeration type used to specify how an ExpansionRegion executes its contents."@en .

element:AcceptCallAction xmi:type uml:Class ;
	xmi:id "AcceptCallAction" ;
	uml-model:name "AcceptCallAction" ;
	rdfs:comment "'An AcceptCallAction is an AcceptEventAction that handles the receipt of a synchronous call request. In addition to the values from the Operation input parameters, the Action produces an output that is needed later to supply the information to the ReplyAction necessary to return control to the caller. An AcceptCallAction is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent ReplyAction will complete immediately with no effect."@en ;
	uml-model:rule element:AcceptCallAction-result_pins, element:AcceptCallAction-trigger_call_event, element:AcceptCallAction-unmarshall ;
	rdfs:subClassOf element:AcceptEventAction ;
	uml-model:ownedAttribute property:AcceptCallAction-returnInformation .

element:AcceptCallAction-result_pins rdfs:comment "'The number of result OutputPins must be the same as the number of input (in and inout) ownedParameters of the Operation specified by the trigger Event. The type, ordering and multiplicity of each result OutputPin must be consistent with the corresponding input Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptCallAction-result_pins-_specification .

element:AcceptCallAction-result_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let parameter: OrderedSet(Parameter) = trigger.event->asSequence()->first().oclAsType(CallEvent).operation.inputParameters() in\nresult->size() = parameter->size() and\nSequence{1..result->size()}->forAll(i | \n   parameter->at(i).type.conformsTo(result->at(i).type) and \n   parameter->at(i).isOrdered = result->at(i).isOrdered and\n   parameter->at(i).compatibleWith(result->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:AcceptCallAction-trigger_call_event rdfs:comment "'The action must have exactly one trigger, which must be for a CallEvent."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptCallAction-trigger_call_event-_specification .

element:AcceptCallAction-trigger_call_event-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "trigger->size()=1 and\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent)"^^<http://www.omg.org/spec/OCL> .

element:AcceptCallAction-unmarshall rdfs:comment "'isUnmrashall must be true for an AcceptCallAction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptCallAction-unmarshall-_specification .

element:AcceptCallAction-unmarshall-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isUnmarshall = true"^^<http://www.omg.org/spec/OCL> .

property:AcceptCallAction-returnInformation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "AcceptCallAction-returnInformation" ;
	rdfs:label "AcceptCallAction-returnInformation" ;
	uml-model:name "returnInformation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_returnInformation_acceptCallAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'An OutputPin where a value is placed containing sufficient information to perform a subsequent ReplyAction and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:AcceptEventAction xmi:type uml:Class ;
	xmi:id "AcceptEventAction" ;
	uml-model:name "AcceptEventAction" ;
	rdfs:comment "'An AcceptEventAction is an Action that waits for the occurrence of one or more specific Events."@en ;
	uml-model:rule element:AcceptEventAction-one_output_pin, element:AcceptEventAction-no_input_pins, element:AcceptEventAction-no_output_pins, element:AcceptEventAction-unmarshall_signal_events, element:AcceptEventAction-conforming_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:AcceptEventAction-isUnmarshall, property:AcceptEventAction-result, property:AcceptEventAction-trigger .

element:AcceptEventAction-one_output_pin rdfs:comment "'If isUnmarshall=false and any of the triggers are for SignalEvents or TimeEvents, there must be exactly one result OutputPin with multiplicity 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptEventAction-one_output_pin-_specification .

element:AcceptEventAction-one_output_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not isUnmarshall and trigger->exists(event.oclIsKindOf(SignalEvent) or event.oclIsKindOf(TimeEvent)) implies \n   output->size() = 1 and output->first().is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:AcceptEventAction-no_input_pins rdfs:comment "'AcceptEventActions may have no input pins."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptEventAction-no_input_pins-_specification .

element:AcceptEventAction-no_input_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "input->size() = 0"^^<http://www.omg.org/spec/OCL> .

element:AcceptEventAction-no_output_pins rdfs:comment "'There are no OutputPins if the trigger events are only ChangeEvents and/or CallEvents when this action is an instance of AcceptEventAction and not an instance of a descendant of AcceptEventAction (such as AcceptCallAction)."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptEventAction-no_output_pins-_specification .

element:AcceptEventAction-no_output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "(self.oclIsTypeOf(AcceptEventAction) and\n   (trigger->forAll(event.oclIsKindOf(ChangeEvent) or  \n                             event.oclIsKindOf(CallEvent))))\nimplies output->size() = 0"^^<http://www.omg.org/spec/OCL> .

element:AcceptEventAction-unmarshall_signal_events rdfs:comment "'If isUnmarshall is true (and this is not an AcceptCallAction), there must be exactly one trigger, which is for a SignalEvent. The number of result output pins must be the same as the number of attributes of the signal. The type and ordering of each result output pin must be the same as the corresponding attribute of the signal. The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding attribute."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptEventAction-unmarshall_signal_events-_specification .

element:AcceptEventAction-unmarshall_signal_events-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isUnmarshall and self.oclIsTypeOf(AcceptEventAction) implies\n   trigger->size()=1 and\n   trigger->asSequence()->first().event.oclIsKindOf(SignalEvent) and\n   let attribute: OrderedSet(Property) = trigger->asSequence()->first().event.oclAsType(SignalEvent).signal.allAttributes() in\n   attribute->size()>0 and result->size() = attribute->size() and\n   Sequence{1..result->size()}->forAll(i | \n      result->at(i).type = attribute->at(i).type and \n      result->at(i).isOrdered = attribute->at(i).isOrdered and\n      result->at(i).includesMultiplicity(attribute->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:AcceptEventAction-conforming_type rdfs:comment "'If isUnmarshall=false and all the triggers are for SignalEvents, then the type of the single result OutputPin must either be null or all the signals must conform to it."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AcceptEventAction-conforming_type-_specification .

element:AcceptEventAction-conforming_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not isUnmarshall implies \n   result->isEmpty() or\n   let type: Type = result->first().type in type=null or \n      (trigger->forAll(event.oclIsKindOf(SignalEvent)) and \n       trigger.event.oclAsType(SignalEvent).signal->forAll(s | s.conformsTo(type)))"^^<http://www.omg.org/spec/OCL> .

property:AcceptEventAction-isUnmarshall rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "AcceptEventAction-isUnmarshall" ;
	rdfs:label "AcceptEventAction-isUnmarshall" ;
	uml-model:name "isUnmarshall" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether there is a single OutputPin for a SignalEvent occurrence, or multiple OutputPins for attribute values of the instance of the Signal associated with a SignalEvent occurrence."@en ;
	xmi:defaultValue element:AcceptEventAction-isUnmarshall-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:AcceptEventAction-isUnmarshall-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "AcceptEventAction-isUnmarshall-_defaultValue" .

property:AcceptEventAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "AcceptEventAction-result" ;
	rdfs:label "AcceptEventAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_acceptEventAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'OutputPins holding the values received from an Event occurrence."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:AcceptEventAction-trigger rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "AcceptEventAction-trigger" ;
	rdfs:label "AcceptEventAction-trigger" ;
	uml-model:name "trigger" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_trigger_acceptEventAction ;
	rdfs:range element:Trigger ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The Triggers specifying the Events of which the AcceptEventAction waits for occurrences."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:Action xmi:type uml:Class ;
	xmi:id "Action" ;
	uml-model:name "Action" ;
	rdfs:comment "'An Action is the fundamental unit of executable functionality. The execution of an Action represents some transformation or processing in the modeled system. Actions provide the ExecutableNodes within Activities and may also be used within Interactions."@en ;
	rdfs:subClassOf element:ExecutableNode ;
	uml-model:ownedAttribute property:Action-context, property:Action-input, property:Action-isLocallyReentrant, property:Action-localPostcondition, property:Action-localPrecondition, property:Action-output ;
	uml-model:operation element:Action-context.1, element:Action-allActions, element:Action-allOwnedNodes, element:Action-containingBehavior .

property:Action-context rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-context" ;
	rdfs:label "Action-context" ;
	uml-model:name "context" ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_context_action ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The context Classifier of the Behavior that contains this Action, or the Behavior itself if it has no context."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange ;
	uml-model:rule element:Action-context.1-spec .

property:Action-input rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-input" ;
	rdfs:label "Action-input" ;
	uml-model:name "input" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_input_action ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The ordered set of InputPins representing the inputs to the Action."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Action-isLocallyReentrant rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-isLocallyReentrant" ;
	rdfs:label "Action-isLocallyReentrant" ;
	uml-model:name "isLocallyReentrant" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the Action can begin a new, concurrent execution, even if there is already another execution of the Action ongoing. If false, the Action cannot begin a new execution until any previous execution has completed."@en ;
	xmi:defaultValue element:Action-isLocallyReentrant-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Action-isLocallyReentrant-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Action-isLocallyReentrant-_defaultValue" .

property:Action-localPostcondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-localPostcondition" ;
	rdfs:label "Action-localPostcondition" ;
	uml-model:name "localPostcondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_localPostcondition_action ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Constraint that must be satisfied when execution of the Action is completed."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Action-localPrecondition rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-localPrecondition" ;
	rdfs:label "Action-localPrecondition" ;
	uml-model:name "localPrecondition" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_localPrecondition_action ;
	rdfs:range element:Constraint ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A Constraint that must be satisfied when execution of the Action is started."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Action-output rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Action-output" ;
	rdfs:label "Action-output" ;
	uml-model:name "output" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:derived "true"^^xsd:boolean ;
	uml-model:association uml-element:A_output_action ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The ordered set of OutputPins representing outputs from the Action."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:Action-context.1 rdfs:comment "'The derivation for the context property."@en ;
	uml-model:returns element:Action-context.1-result .

element:Action-context.1-spec rdf:type uml:Constraint ;
	uml-model:specification element:Action-context.1-spec-_specification .

element:Action-context.1-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (let behavior: Behavior = self.containingBehavior() in\nif behavior=null then null\nelse if behavior._'context' = null then behavior\nelse behavior._'context'\nendif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:Action-context.1-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Classifier .

element:Action-allActions rdfs:comment "'Return this Action and all Actions contained directly or indirectly in it. By default only the Action itself is returned, but the operation is overridden for StructuredActivityNodes."@en ;
	uml-model:rule element:Action-allActions-spec ;
	uml-model:returns element:Action-allActions-result .

element:Action-allActions-spec rdf:type uml:Constraint ;
	uml-model:specification element:Action-allActions-spec-_specification .

element:Action-allActions-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self->asSet())"^^<http://www.omg.org/spec/OCL> .

element:Action-allActions-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Action ;
	uml-model:upperValue element:Action-allActions-result-_upperValue .

element:Action-allActions-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Action-allOwnedNodes rdfs:comment "'Returns all the ActivityNodes directly or indirectly owned by this Action. This includes at least all the Pins of the Action."@en ;
	uml-model:rule element:Action-allOwnedNodes-spec ;
	uml-model:returns element:Action-allOwnedNodes-result .

element:Action-allOwnedNodes-spec rdf:type uml:Constraint ;
	uml-model:specification element:Action-allOwnedNodes-spec-_specification .

element:Action-allOwnedNodes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (input.oclAsType(Pin)->asSet()->union(output->asSet()))"^^<http://www.omg.org/spec/OCL> .

element:Action-allOwnedNodes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ActivityNode ;
	uml-model:upperValue element:Action-allOwnedNodes-result-_upperValue .

element:Action-allOwnedNodes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Action-containingBehavior-spec rdf:type uml:Constraint ;
	uml-model:specification element:Action-containingBehavior-spec-_specification .

element:Action-containingBehavior-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if inStructuredNode<>null then inStructuredNode.containingBehavior() \nelse if activity<>null then activity\nelse interaction \nendif\nendif\n)"^^<http://www.omg.org/spec/OCL> .

element:Action-containingBehavior uml-model:rule element:Action-containingBehavior-spec ;
	uml-model:returns element:Action-containingBehavior-result .

element:Action-containingBehavior-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Behavior .

element:ActionInputPin xmi:type uml:Class ;
	xmi:id "ActionInputPin" ;
	uml-model:name "ActionInputPin" ;
	rdfs:comment "'An ActionInputPin is a kind of InputPin that executes an Action to determine the values to input to another Action."@en ;
	uml-model:rule element:ActionInputPin-input_pin, element:ActionInputPin-one_output_pin, element:ActionInputPin-no_control_or_object_flow ;
	rdfs:subClassOf element:InputPin ;
	uml-model:ownedAttribute property:ActionInputPin-fromAction .

element:ActionInputPin-input_pin rdfs:comment "'The fromAction of an ActionInputPin must only have ActionInputPins as InputPins."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActionInputPin-input_pin-_specification .

element:ActionInputPin-input_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "fromAction.input->forAll(oclIsKindOf(ActionInputPin))"^^<http://www.omg.org/spec/OCL> .

element:ActionInputPin-one_output_pin rdfs:comment "'The fromAction of an ActionInputPin must have exactly one OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActionInputPin-one_output_pin-_specification .

element:ActionInputPin-one_output_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "fromAction.output->size() = 1"^^<http://www.omg.org/spec/OCL> .

element:ActionInputPin-no_control_or_object_flow rdfs:comment "'The fromAction of an ActionInputPin cannot have ActivityEdges coming into or out of it or its Pins."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ActionInputPin-no_control_or_object_flow-_specification .

element:ActionInputPin-no_control_or_object_flow-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "fromAction.incoming->union(outgoing)->isEmpty() and\nfromAction.input.incoming->isEmpty() and\nfromAction.output.outgoing->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:ActionInputPin-fromAction rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ActionInputPin-fromAction" ;
	rdfs:label "ActionInputPin-fromAction" ;
	uml-model:name "fromAction" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_fromAction_actionInputPin ;
	rdfs:range element:Action ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The Action used to provide the values of the ActionInputPin."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:AddStructuralFeatureValueAction xmi:type uml:Class ;
	xmi:id "AddStructuralFeatureValueAction" ;
	uml-model:name "AddStructuralFeatureValueAction" ;
	rdfs:comment "'An AddStructuralFeatureValueAction is a WriteStructuralFeatureAction for adding values to a StructuralFeature."@en ;
	uml-model:rule element:AddStructuralFeatureValueAction-required_value, element:AddStructuralFeatureValueAction-insertAt_pin ;
	rdfs:subClassOf element:WriteStructuralFeatureAction ;
	uml-model:ownedAttribute property:AddStructuralFeatureValueAction-insertAt, property:AddStructuralFeatureValueAction-isReplaceAll .

element:AddStructuralFeatureValueAction-required_value rdfs:comment "'A value InputPin is required."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AddStructuralFeatureValueAction-required_value-_specification .

element:AddStructuralFeatureValueAction-required_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value<>null"^^<http://www.omg.org/spec/OCL> .

element:AddStructuralFeatureValueAction-insertAt_pin rdfs:comment "'AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, and must have no Input Pin for the insertion point when the StructuralFeature is unordered."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AddStructuralFeatureValueAction-insertAt_pin-_specification .

element:AddStructuralFeatureValueAction-insertAt_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if not structuralFeature.isOrdered then insertAt = null\nelse \n  not isReplaceAll implies\n   insertAt<>null and \n   insertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\nendif"^^<http://www.omg.org/spec/OCL> .

property:AddStructuralFeatureValueAction-insertAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "AddStructuralFeatureValueAction-insertAt" ;
	rdfs:label "AddStructuralFeatureValueAction-insertAt" ;
	uml-model:name "insertAt" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_insertAt_addStructuralFeatureValueAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that gives the position at which to insert the value in an ordered StructuralFeature. The type of the insertAt InputPin is UnlimitedNatural, but the value cannot be zero. It is omitted for unordered StructuralFeatures."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:AddStructuralFeatureValueAction-isReplaceAll rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "AddStructuralFeatureValueAction-isReplaceAll" ;
	rdfs:label "AddStructuralFeatureValueAction-isReplaceAll" ;
	uml-model:name "isReplaceAll" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether existing values of the StructuralFeature should be removed before adding the new value."@en ;
	xmi:defaultValue element:AddStructuralFeatureValueAction-isReplaceAll-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:AddStructuralFeatureValueAction-isReplaceAll-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "AddStructuralFeatureValueAction-isReplaceAll-_defaultValue" .

element:AddVariableValueAction xmi:type uml:Class ;
	xmi:id "AddVariableValueAction" ;
	uml-model:name "AddVariableValueAction" ;
	rdfs:comment "'An AddVariableValueAction is a WriteVariableAction for adding values to a Variable."@en ;
	uml-model:rule element:AddVariableValueAction-required_value, element:AddVariableValueAction-insertAt_pin ;
	rdfs:subClassOf element:WriteVariableAction ;
	uml-model:ownedAttribute property:AddVariableValueAction-insertAt, property:AddVariableValueAction-isReplaceAll .

element:AddVariableValueAction-required_value rdfs:comment "'A value InputPin is required."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AddVariableValueAction-required_value-_specification .

element:AddVariableValueAction-required_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value <> null"^^<http://www.omg.org/spec/OCL> .

element:AddVariableValueAction-insertAt_pin rdfs:comment "'AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no InputPin for the insertion point."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:AddVariableValueAction-insertAt_pin-_specification .

element:AddVariableValueAction-insertAt_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if not variable.isOrdered then insertAt = null\nelse \n  not isReplaceAll implies\n   insertAt<>null and \n   insertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\nendif"^^<http://www.omg.org/spec/OCL> .

property:AddVariableValueAction-insertAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "AddVariableValueAction-insertAt" ;
	rdfs:label "AddVariableValueAction-insertAt" ;
	uml-model:name "insertAt" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_insertAt_addVariableValueAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that gives the position at which to insert a new value or move an existing value in ordered Variables. The type of the insertAt InputPin is UnlimitedNatural, but the value cannot be zero. It is omitted for unordered Variables."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:AddVariableValueAction-isReplaceAll rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "AddVariableValueAction-isReplaceAll" ;
	rdfs:label "AddVariableValueAction-isReplaceAll" ;
	uml-model:name "isReplaceAll" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether existing values of the Variable should be removed before adding the new value."@en ;
	xmi:defaultValue element:AddVariableValueAction-isReplaceAll-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:AddVariableValueAction-isReplaceAll-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "AddVariableValueAction-isReplaceAll-_defaultValue" .

element:BroadcastSignalAction xmi:type uml:Class ;
	xmi:id "BroadcastSignalAction" ;
	uml-model:name "BroadcastSignalAction" ;
	rdfs:comment "'A BroadcastSignalAction is an InvocationAction that transmits a Signal instance to all the potential target objects in the system. Values from the argument InputPins are used to provide values for the attributes of the Signal. The requestor continues execution immediately after the Signal instances are sent out and cannot receive reply values."@en ;
	uml-model:rule element:BroadcastSignalAction-number_of_arguments, element:BroadcastSignalAction-type_ordering_multiplicity, element:BroadcastSignalAction-no_onport ;
	rdfs:subClassOf element:InvocationAction ;
	uml-model:ownedAttribute property:BroadcastSignalAction-signal .

element:BroadcastSignalAction-number_of_arguments rdfs:comment "'The number of argument InputPins must be the same as the number of attributes in the signal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:BroadcastSignalAction-number_of_arguments-_specification .

element:BroadcastSignalAction-number_of_arguments-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "argument->size() = signal.allAttributes()->size()"^^<http://www.omg.org/spec/OCL> .

element:BroadcastSignalAction-type_ordering_multiplicity rdfs:comment "'The type, ordering, and multiplicity of an argument InputPin must be the same as the corresponding attribute of the signal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:BroadcastSignalAction-type_ordering_multiplicity-_specification .

element:BroadcastSignalAction-type_ordering_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let attribute: OrderedSet(Property) = signal.allAttributes() in\nSequence{1..argument->size()}->forAll(i | \n   argument->at(i).type.conformsTo(attribute->at(i).type) and \n   argument->at(i).isOrdered = attribute->at(i).isOrdered and\n   argument->at(i).compatibleWith(attribute->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:BroadcastSignalAction-no_onport rdfs:comment "'A BroadcaseSignalAction may not specify onPort."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:BroadcastSignalAction-no_onport-_specification .

element:BroadcastSignalAction-no_onport-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "onPort=null"^^<http://www.omg.org/spec/OCL> .

property:BroadcastSignalAction-signal rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "BroadcastSignalAction-signal" ;
	rdfs:label "BroadcastSignalAction-signal" ;
	uml-model:name "signal" ;
	uml-model:association uml-element:A_signal_broadcastSignalAction ;
	rdfs:range element:Signal ;
	rdfs:comment "'The Signal whose instances are to be sent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CallAction xmi:type uml:Class ;
	xmi:id "CallAction" ;
	uml-model:name "CallAction" ;
	rdfs:comment "'CallAction is an abstract class for Actions that invoke a Behavior with given argument values and (if the invocation is synchronous) receive reply values."@en ;
	uml-model:rule element:CallAction-argument_pins, element:CallAction-result_pins, element:CallAction-synchronous_call ;
	rdfs:subClassOf element:InvocationAction ;
	uml-model:ownedAttribute property:CallAction-isSynchronous, property:CallAction-result ;
	uml-model:operation element:CallAction-inputParameters, element:CallAction-outputParameters .

element:CallAction-argument_pins rdfs:comment "'The number of argument InputPins must be the same as the number of input (in and inout) ownedParameters of the called Behavior or Operation. The type, ordering and multiplicity of each argument InputPin must be consistent with the corresponding input Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CallAction-argument_pins-_specification .

element:CallAction-argument_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let parameter: OrderedSet(Parameter) = self.inputParameters() in\nargument->size() = parameter->size() and\nSequence{1..argument->size()}->forAll(i | \n   argument->at(i).type.conformsTo(parameter->at(i).type) and \n   argument->at(i).isOrdered = parameter->at(i).isOrdered and\n   argument->at(i).compatibleWith(parameter->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:CallAction-result_pins rdfs:comment "'The number of result OutputPins must be the same as the number of output (inout, out and return) ownedParameters of the called Behavior or Operation. The type, ordering and multiplicity of each result OutputPin must be consistent with the corresponding input Parameter."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CallAction-result_pins-_specification .

element:CallAction-result_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let parameter: OrderedSet(Parameter) = self.outputParameters() in\nresult->size() = parameter->size() and\nSequence{1..result->size()}->forAll(i | \n   parameter->at(i).type.conformsTo(result->at(i).type) and \n   parameter->at(i).isOrdered = result->at(i).isOrdered and\n   parameter->at(i).compatibleWith(result->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:CallAction-synchronous_call rdfs:comment "'Only synchronous CallActions can have result OutputPins."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CallAction-synchronous_call-_specification .

element:CallAction-synchronous_call-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result->notEmpty() implies isSynchronous"^^<http://www.omg.org/spec/OCL> .

property:CallAction-isSynchronous rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "CallAction-isSynchronous" ;
	rdfs:label "CallAction-isSynchronous" ;
	uml-model:name "isSynchronous" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the call is synchronous and the caller waits for completion of the invoked Behavior. If false, the call is asynchronous and the caller proceeds immediately and cannot receive return values."@en ;
	xmi:defaultValue element:CallAction-isSynchronous-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CallAction-isSynchronous-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "CallAction-isSynchronous-_defaultValue" ;
	uml-model:value "true" .

property:CallAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CallAction-result" ;
	rdfs:label "CallAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_callAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPins on which the reply values from the invocation are placed (if the call is synchronous)."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:CallAction-inputParameters rdfs:comment "'Return the in and inout ownedParameters of the Behavior or Operation being called. (This operation is abstract and should be overridden by subclasses of CallAction.)"@en ;
	uml-model:returns element:CallAction-inputParameters-result .

element:CallAction-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallAction-inputParameters-result-_upperValue .

element:CallAction-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallAction-outputParameters rdfs:comment "'Return the inout, out and return ownedParameters of the Behavior or Operation being called. (This operation is abstract and should be overridden by subclasses of CallAction.)"@en ;
	uml-model:returns element:CallAction-outputParameters-result .

element:CallAction-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallAction-outputParameters-result-_upperValue .

element:CallAction-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallBehaviorAction xmi:type uml:Class ;
	xmi:id "CallBehaviorAction" ;
	uml-model:name "CallBehaviorAction" ;
	rdfs:comment "'A CallBehaviorAction is a CallAction that invokes a Behavior directly. The argument values of the CallBehaviorAction are passed on the input Parameters of the invoked Behavior. If the call is synchronous, the execution of the CallBehaviorAction waits until the execution of the invoked Behavior completes and the values of output Parameters of the Behavior are placed on the result OutputPins. If the call is asynchronous, the CallBehaviorAction completes immediately and no results values can be provided."@en ;
	uml-model:rule element:CallBehaviorAction-no_onport ;
	rdfs:subClassOf element:CallAction ;
	uml-model:ownedAttribute property:CallBehaviorAction-behavior ;
	uml-model:operation element:CallBehaviorAction-outputParameters, element:CallBehaviorAction-inputParameters .

element:CallBehaviorAction-no_onport rdfs:comment "'A CallBehaviorAction may not specify onPort."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CallBehaviorAction-no_onport-_specification .

element:CallBehaviorAction-no_onport-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "onPort=null"^^<http://www.omg.org/spec/OCL> .

property:CallBehaviorAction-behavior rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CallBehaviorAction-behavior" ;
	rdfs:label "CallBehaviorAction-behavior" ;
	uml-model:name "behavior" ;
	uml-model:association uml-element:A_behavior_callBehaviorAction ;
	rdfs:range element:Behavior ;
	rdfs:comment "'The Behavior being invoked."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CallBehaviorAction-outputParameters uml-model:redefines element:CallAction-outputParameters ;
	rdfs:comment "'Return the inout, out and return ownedParameters of the Behavior being called."@en ;
	uml-model:rule element:CallBehaviorAction-outputParameters-spec ;
	uml-model:returns element:CallBehaviorAction-outputParameters-result .

element:CallBehaviorAction-outputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:CallBehaviorAction-outputParameters-spec-_specification .

element:CallBehaviorAction-outputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (behavior.outputParameters())"^^<http://www.omg.org/spec/OCL> .

element:CallBehaviorAction-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallBehaviorAction-outputParameters-result-_upperValue .

element:CallBehaviorAction-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallBehaviorAction-inputParameters uml-model:redefines element:CallAction-inputParameters ;
	rdfs:comment "'Return the in and inout ownedParameters of the Behavior being called."@en ;
	uml-model:rule element:CallBehaviorAction-inputParameters-spec ;
	uml-model:returns element:CallBehaviorAction-inputParameters-result .

element:CallBehaviorAction-inputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:CallBehaviorAction-inputParameters-spec-_specification .

element:CallBehaviorAction-inputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (behavior.inputParameters())"^^<http://www.omg.org/spec/OCL> .

element:CallBehaviorAction-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallBehaviorAction-inputParameters-result-_upperValue .

element:CallBehaviorAction-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallOperationAction xmi:type uml:Class ;
	xmi:id "CallOperationAction" ;
	uml-model:name "CallOperationAction" ;
	rdfs:comment "'A CallOperationAction is a CallAction that transmits an Operation call request to the target object, where it may cause the invocation of associated Behavior. The argument values of the CallOperationAction are passed on the input Parameters of the Operation. If call is synchronous, the execution of the CallOperationAction waits until the execution of the invoked Operation completes and the values of output Parameters of the Operation are placed on the result OutputPins. If the call is asynchronous, the CallOperationAction completes immediately and no results values can be provided."@en ;
	uml-model:rule element:CallOperationAction-type_target_pin ;
	rdfs:subClassOf element:CallAction ;
	uml-model:ownedAttribute property:CallOperationAction-operation, property:CallOperationAction-target ;
	uml-model:operation element:CallOperationAction-outputParameters, element:CallOperationAction-inputParameters .

element:CallOperationAction-type_target_pin rdfs:comment "'If onPort has no value, the operation must be an owned or inherited feature of the type of the target InputPin, otherwise the Port given by onPort must be an owned or inherited feature of the type of the target InputPin, and the Port must have a required or provided Interface with the operation as an owned or inherited feature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CallOperationAction-type_target_pin-_specification .

element:CallOperationAction-type_target_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if onPort=null then  target.type.oclAsType(Classifier).allFeatures()->includes(operation)\nelse target.type.oclAsType(Classifier).allFeatures()->includes(onPort) and onPort.provided->union(onPort.required).allFeatures()->includes(operation)\nendif"^^<http://www.omg.org/spec/OCL> .

property:CallOperationAction-operation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CallOperationAction-operation" ;
	rdfs:label "CallOperationAction-operation" ;
	uml-model:name "operation" ;
	uml-model:association uml-element:A_operation_callOperationAction ;
	rdfs:range element:Operation ;
	rdfs:comment "'The Operation being invoked."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:CallOperationAction-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CallOperationAction-target" ;
	rdfs:label "CallOperationAction-target" ;
	uml-model:name "target" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_target_callOperationAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that provides the target object to which the Operation call request is sent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CallOperationAction-outputParameters uml-model:redefines element:CallAction-outputParameters ;
	rdfs:comment "'Return the inout, out and return ownedParameters of the Operation being called."@en ;
	uml-model:rule element:CallOperationAction-outputParameters-spec ;
	uml-model:returns element:CallOperationAction-outputParameters-result .

element:CallOperationAction-outputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:CallOperationAction-outputParameters-spec-_specification .

element:CallOperationAction-outputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (operation.outputParameters())"^^<http://www.omg.org/spec/OCL> .

element:CallOperationAction-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallOperationAction-outputParameters-result-_upperValue .

element:CallOperationAction-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CallOperationAction-inputParameters uml-model:redefines element:CallAction-inputParameters ;
	rdfs:comment "'Return the in and inout ownedParameters of the Operation being called."@en ;
	uml-model:rule element:CallOperationAction-inputParameters-spec ;
	uml-model:returns element:CallOperationAction-inputParameters-result .

element:CallOperationAction-inputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:CallOperationAction-inputParameters-spec-_specification .

element:CallOperationAction-inputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (operation.inputParameters())"^^<http://www.omg.org/spec/OCL> .

element:CallOperationAction-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:CallOperationAction-inputParameters-result-_upperValue .

element:CallOperationAction-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:Clause xmi:type uml:Class ;
	xmi:id "Clause" ;
	uml-model:name "Clause" ;
	rdfs:comment "'A Clause is an Element that represents a single branch of a ConditionalNode, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates to true."@en ;
	uml-model:rule element:Clause-body_output_pins, element:Clause-decider_output, element:Clause-test_and_body ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:Clause-body, property:Clause-bodyOutput, property:Clause-decider, property:Clause-predecessorClause, property:Clause-successorClause, property:Clause-test .

element:Clause-body_output_pins rdfs:comment "'The bodyOutput Pins are OutputPins on Actions in the body of the Clause."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Clause-body_output_pins-_specification .

element:Clause-body_output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "_'body'.oclAsType(Action).allActions().output->includesAll(bodyOutput)"^^<http://www.omg.org/spec/OCL> .

element:Clause-decider_output rdfs:comment "'The decider Pin must be on an Action in the test section of the Clause and must be of type Boolean with multiplicity 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Clause-decider_output-_specification .

element:Clause-decider_output-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "test.oclAsType(Action).allActions().output->includes(decider) and\ndecider.type = Boolean and\ndecider.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:Clause-test_and_body rdfs:comment "'The test and body parts of a ConditionalNode must be disjoint with each other."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Clause-test_and_body-_specification .

element:Clause-test_and_body-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "test->intersection(_'body')->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:Clause-body rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-body" ;
	rdfs:label "Clause-body" ;
	uml-model:name "body" ;
	uml-model:association uml-element:A_body_clause ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The set of ExecutableNodes that are executed if the test evaluates to true and the Clause is chosen over other Clauses within the ConditionalNode that also have tests that evaluate to true."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Clause-bodyOutput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-bodyOutput" ;
	rdfs:label "Clause-bodyOutput" ;
	uml-model:name "bodyOutput" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_bodyOutput_clause ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'The OutputPins on Actions within the body section whose values are moved to the result OutputPins of the containing ConditionalNode after execution of the body."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Clause-decider rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-decider" ;
	rdfs:label "Clause-decider" ;
	uml-model:name "decider" ;
	uml-model:association uml-element:A_decider_clause ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'An OutputPin on an Action in the test section whose Boolean value determines the result of the test."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:Clause-predecessorClause rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-predecessorClause" ;
	rdfs:label "Clause-predecessorClause" ;
	uml-model:name "predecessorClause" ;
	uml-model:association uml-element:A_predecessorClause_successorClause ;
	rdfs:range element:Clause ;
	rdfs:comment "'A set of Clauses whose tests must all evaluate to false before this Clause can evaluate its test."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Clause-successorClause rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-successorClause" ;
	rdfs:label "Clause-successorClause" ;
	uml-model:name "successorClause" ;
	uml-model:association uml-element:A_predecessorClause_successorClause ;
	rdfs:range element:Clause ;
	rdfs:comment "'A set of Clauses that may not evaluate their tests unless the test for this Clause evaluates to false."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:Clause-test rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "Clause-test" ;
	rdfs:label "Clause-test" ;
	uml-model:name "test" ;
	uml-model:association uml-element:A_test_clause ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The set of ExecutableNodes that are executed in order to provide a test result for the Clause."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:ClearAssociationAction xmi:type uml:Class ;
	xmi:id "ClearAssociationAction" ;
	uml-model:name "ClearAssociationAction" ;
	rdfs:comment "'A ClearAssociationAction is an Action that destroys all links of an Association in which a particular object participates."@en ;
	uml-model:rule element:ClearAssociationAction-multiplicity, element:ClearAssociationAction-same_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ClearAssociationAction-association, property:ClearAssociationAction-object .

element:ClearAssociationAction-multiplicity rdfs:comment "'The multiplicity of the object InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClearAssociationAction-multiplicity-_specification .

element:ClearAssociationAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ClearAssociationAction-same_type rdfs:comment "'The type of the InputPin must conform to the type of at least one of the memberEnds of the association."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClearAssociationAction-same_type-_specification .

element:ClearAssociationAction-same_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "association.memberEnd->exists(self.object.type.conformsTo(type))"^^<http://www.omg.org/spec/OCL> .

property:ClearAssociationAction-association rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ClearAssociationAction-association" ;
	rdfs:label "ClearAssociationAction-association" ;
	uml-model:name "association" ;
	uml-model:association uml-element:A_association_clearAssociationAction ;
	rdfs:range element:Association ;
	rdfs:comment "'The Association to be cleared."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ClearAssociationAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ClearAssociationAction-object" ;
	rdfs:label "ClearAssociationAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_clearAssociationAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that gives the object whose participation in the Association is to be cleared."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ClearStructuralFeatureAction xmi:type uml:Class ;
	xmi:id "ClearStructuralFeatureAction" ;
	uml-model:name "ClearStructuralFeatureAction" ;
	rdfs:comment "'A ClearStructuralFeatureAction is a StructuralFeatureAction that removes all values of a StructuralFeature."@en ;
	uml-model:rule element:ClearStructuralFeatureAction-type_of_result, element:ClearStructuralFeatureAction-multiplicity_of_result ;
	rdfs:subClassOf element:StructuralFeatureAction ;
	uml-model:ownedAttribute property:ClearStructuralFeatureAction-result .

element:ClearStructuralFeatureAction-type_of_result rdfs:comment "'The type of the result OutputPin is the same as the type of the inherited object InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClearStructuralFeatureAction-type_of_result-_specification .

element:ClearStructuralFeatureAction-type_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result<>null implies result.type = object.type"^^<http://www.omg.org/spec/OCL> .

element:ClearStructuralFeatureAction-multiplicity_of_result rdfs:comment "'The multiplicity of the result OutputPin must be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ClearStructuralFeatureAction-multiplicity_of_result-_specification .

element:ClearStructuralFeatureAction-multiplicity_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result<>null implies result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

property:ClearStructuralFeatureAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ClearStructuralFeatureAction-result" ;
	rdfs:label "ClearStructuralFeatureAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_clearStructuralFeatureAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which is put the input object as modified by the ClearStructuralFeatureAction."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ClearVariableAction xmi:type uml:Class ;
	xmi:id "ClearVariableAction" ;
	uml-model:name "ClearVariableAction" ;
	rdfs:comment "'A ClearVariableAction is a VariableAction that removes all values of a Variable."@en ;
	rdfs:subClassOf element:VariableAction .

element:ConditionalNode xmi:type uml:Class ;
	xmi:id "ConditionalNode" ;
	uml-model:name "ConditionalNode" ;
	rdfs:comment "'A ConditionalNode is a StructuredActivityNode that chooses one among some number of alternative collections of ExecutableNodes to execute."@en ;
	uml-model:rule element:ConditionalNode-result_no_incoming, element:ConditionalNode-no_input_pins, element:ConditionalNode-one_clause_with_executable_node, element:ConditionalNode-matching_output_pins, element:ConditionalNode-executable_nodes, element:ConditionalNode-clause_no_predecessor ;
	rdfs:subClassOf element:StructuredActivityNode ;
	uml-model:ownedAttribute property:ConditionalNode-clause, property:ConditionalNode-isAssured, property:ConditionalNode-isDeterminate, property:ConditionalNode-result ;
	uml-model:operation element:ConditionalNode-allActions .

element:ConditionalNode-result_no_incoming rdfs:comment "'The result OutputPins have no incoming edges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-result_no_incoming-_specification .

element:ConditionalNode-result_no_incoming-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.incoming->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-no_input_pins rdfs:comment "'A ConditionalNode has no InputPins."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-no_input_pins-_specification .

element:ConditionalNode-no_input_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "input->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-one_clause_with_executable_node rdfs:comment "'No ExecutableNode in the ConditionNode may appear in the test or body part of more than one clause of a ConditionalNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-one_clause_with_executable_node-_specification .

element:ConditionalNode-one_clause_with_executable_node-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)->forAll(n | \n   self.clause->select(test->union(_'body')->includes(n))->size()=1)"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-matching_output_pins rdfs:comment "'Each clause of a ConditionalNode must have the same number of bodyOutput pins as the ConditionalNode has result OutputPins, and each clause bodyOutput Pin must be compatible with the corresponding result OutputPin (by positional order) in type, multiplicity, ordering, and uniqueness."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-matching_output_pins-_specification .

element:ConditionalNode-matching_output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "clause->forAll(\n   bodyOutput->size()=self.result->size() and\n   Sequence{1..self.result->size()}->forAll(i |\n      bodyOutput->at(i).type.conformsTo(result->at(i).type) and\n      bodyOutput->at(i).isOrdered = result->at(i).isOrdered and\n      bodyOutput->at(i).isUnique = result->at(i).isUnique and\n      bodyOutput->at(i).compatibleWith(result->at(i))))"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-executable_nodes rdfs:comment "'The union of the ExecutableNodes in the test and body parts of all clauses must be the same as the subset of nodes contained in the ConditionalNode (considered as a StructuredActivityNode) that are ExecutableNodes."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-executable_nodes-_specification .

element:ConditionalNode-executable_nodes-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "clause.test->union(clause._'body') = node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-clause_no_predecessor rdfs:comment "'No two clauses within a ConditionalNode may be predecessorClauses of each other, either directly or indirectly."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-clause_no_predecessor-_specification .

element:ConditionalNode-clause_no_predecessor-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "clause->closure(predecessorClause)->intersection(clause)->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:ConditionalNode-clause rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConditionalNode-clause" ;
	rdfs:label "ConditionalNode-clause" ;
	uml-model:name "clause" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_clause_conditionalNode ;
	rdfs:range element:Clause ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The set of Clauses composing the ConditionalNode."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:ConditionalNode-isAssured rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ConditionalNode-isAssured" ;
	rdfs:label "ConditionalNode-isAssured" ;
	uml-model:name "isAssured" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the modeler asserts that the test for at least one Clause of the ConditionalNode will succeed."@en ;
	xmi:defaultValue element:ConditionalNode-isAssured-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ConditionalNode-isAssured-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ConditionalNode-isAssured-_defaultValue" .

property:ConditionalNode-isDeterminate rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ConditionalNode-isDeterminate" ;
	rdfs:label "ConditionalNode-isDeterminate" ;
	uml-model:name "isDeterminate" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the modeler asserts that the test for at most one Clause of the ConditionalNode will succeed."@en ;
	xmi:defaultValue element:ConditionalNode-isDeterminate-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ConditionalNode-isDeterminate-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ConditionalNode-isDeterminate-_defaultValue" .

property:ConditionalNode-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ConditionalNode-result" ;
	rdfs:label "ConditionalNode-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_conditionalNode ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'The OutputPins that onto which are moved values from the bodyOutputs of the Clause selected for execution."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ConditionalNode-allActions uml-model:redefines element:Action-allActions ;
	rdfs:comment "'Return only this ConditionalNode. This prevents Actions within the ConditionalNode from having their OutputPins used as bodyOutputs or decider Pins in containing LoopNodes or ConditionalNodes."@en ;
	uml-model:rule element:ConditionalNode-allActions-spec ;
	uml-model:returns element:ConditionalNode-allActions-result .

element:ConditionalNode-allActions-spec rdf:type uml:Constraint ;
	uml-model:specification element:ConditionalNode-allActions-spec-_specification .

element:ConditionalNode-allActions-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self->asSet())"^^<http://www.omg.org/spec/OCL> .

element:ConditionalNode-allActions-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Action ;
	uml-model:upperValue element:ConditionalNode-allActions-result-_upperValue .

element:ConditionalNode-allActions-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:CreateLinkAction xmi:type uml:Class ;
	xmi:id "CreateLinkAction" ;
	uml-model:name "CreateLinkAction" ;
	rdfs:comment "'A CreateLinkAction is a WriteLinkAction for creating links."@en ;
	uml-model:rule element:CreateLinkAction-association_not_abstract ;
	rdfs:subClassOf element:WriteLinkAction ;
	uml-model:ownedAttribute property:CreateLinkAction-endData .

element:CreateLinkAction-association_not_abstract rdfs:comment "'The Association cannot be an abstract Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateLinkAction-association_not_abstract-_specification .

element:CreateLinkAction-association_not_abstract-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not self.association().isAbstract"^^<http://www.omg.org/spec/OCL> .

property:CreateLinkAction-endData rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CreateLinkAction-endData" ;
	rdfs:label "CreateLinkAction-endData" ;
	uml-model:name "endData" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_endData_createLinkAction ;
	rdfs:range element:LinkEndCreationData ;
	rdfs:comment "'The LinkEndData that specifies the values to be placed on the Association ends for the new link."@en ;
	uml-model:multiplicity "2..*"^^uml-model-dt:multiplicityRange .

element:CreateLinkObjectAction xmi:type uml:Class ;
	xmi:id "CreateLinkObjectAction" ;
	uml-model:name "CreateLinkObjectAction" ;
	rdfs:comment "'A CreateLinkObjectAction is a CreateLinkAction for creating link objects (AssociationClasse instances)."@en ;
	uml-model:rule element:CreateLinkObjectAction-multiplicity, element:CreateLinkObjectAction-type_of_result, element:CreateLinkObjectAction-association_class ;
	rdfs:subClassOf element:CreateLinkAction ;
	uml-model:ownedAttribute property:CreateLinkObjectAction-result .

element:CreateLinkObjectAction-multiplicity rdfs:comment "'The multiplicity of the OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateLinkObjectAction-multiplicity-_specification .

element:CreateLinkObjectAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:CreateLinkObjectAction-type_of_result rdfs:comment "'The type of the result OutputPin must be the same as the Association of the CreateLinkObjectAction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateLinkObjectAction-type_of_result-_specification .

element:CreateLinkObjectAction-type_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = association()"^^<http://www.omg.org/spec/OCL> .

element:CreateLinkObjectAction-association_class rdfs:comment "'The Association must be an AssociationClass."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateLinkObjectAction-association_class-_specification .

element:CreateLinkObjectAction-association_class-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.association().oclIsKindOf(AssociationClass)"^^<http://www.omg.org/spec/OCL> .

property:CreateLinkObjectAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CreateLinkObjectAction-result" ;
	rdfs:label "CreateLinkObjectAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_createLinkObjectAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The output pin on which the newly created link object is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:CreateObjectAction xmi:type uml:Class ;
	xmi:id "CreateObjectAction" ;
	uml-model:name "CreateObjectAction" ;
	rdfs:comment "'A CreateObjectAction is an Action that creates an instance of the specified Classifier."@en ;
	uml-model:rule element:CreateObjectAction-classifier_not_abstract, element:CreateObjectAction-multiplicity, element:CreateObjectAction-classifier_not_association_class, element:CreateObjectAction-same_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:CreateObjectAction-classifier, property:CreateObjectAction-result .

element:CreateObjectAction-classifier_not_abstract rdfs:comment "'The classifier cannot be abstract."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateObjectAction-classifier_not_abstract-_specification .

element:CreateObjectAction-classifier_not_abstract-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not classifier.isAbstract"^^<http://www.omg.org/spec/OCL> .

element:CreateObjectAction-multiplicity rdfs:comment "'The multiplicity of the result OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateObjectAction-multiplicity-_specification .

element:CreateObjectAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:CreateObjectAction-classifier_not_association_class rdfs:comment "'The classifier cannot be an AssociationClass."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateObjectAction-classifier_not_association_class-_specification .

element:CreateObjectAction-classifier_not_association_class-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not classifier.oclIsKindOf(AssociationClass)"^^<http://www.omg.org/spec/OCL> .

element:CreateObjectAction-same_type rdfs:comment "'The type of the result OutputPin must be the same as the classifier of the CreateObjectAction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:CreateObjectAction-same_type-_specification .

element:CreateObjectAction-same_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = classifier"^^<http://www.omg.org/spec/OCL> .

property:CreateObjectAction-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CreateObjectAction-classifier" ;
	rdfs:label "CreateObjectAction-classifier" ;
	uml-model:name "classifier" ;
	uml-model:association uml-element:A_classifier_createObjectAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifier to be instantiated."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:CreateObjectAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "CreateObjectAction-result" ;
	rdfs:label "CreateObjectAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_createObjectAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the newly created object is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DestroyLinkAction xmi:type uml:Class ;
	xmi:id "DestroyLinkAction" ;
	uml-model:name "DestroyLinkAction" ;
	rdfs:comment "'A DestroyLinkAction is a WriteLinkAction that destroys links (including link objects)."@en ;
	rdfs:subClassOf element:WriteLinkAction ;
	uml-model:ownedAttribute property:DestroyLinkAction-endData .

property:DestroyLinkAction-endData rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DestroyLinkAction-endData" ;
	rdfs:label "DestroyLinkAction-endData" ;
	uml-model:name "endData" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_endData_destroyLinkAction ;
	rdfs:range element:LinkEndDestructionData ;
	rdfs:comment "'The LinkEndData that the values of the Association ends for the links to be destroyed."@en ;
	uml-model:multiplicity "2..*"^^uml-model-dt:multiplicityRange .

element:DestroyObjectAction xmi:type uml:Class ;
	xmi:id "DestroyObjectAction" ;
	uml-model:name "DestroyObjectAction" ;
	rdfs:comment "'A DestroyObjectAction is an Action that destroys objects."@en ;
	uml-model:rule element:DestroyObjectAction-multiplicity, element:DestroyObjectAction-no_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:DestroyObjectAction-isDestroyLinks, property:DestroyObjectAction-isDestroyOwnedObjects, property:DestroyObjectAction-target .

element:DestroyObjectAction-multiplicity rdfs:comment "'The multiplicity of the targe IinputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DestroyObjectAction-multiplicity-_specification .

element:DestroyObjectAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "target.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:DestroyObjectAction-no_type rdfs:comment "'The target InputPin has no type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:DestroyObjectAction-no_type-_specification .

element:DestroyObjectAction-no_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "target.type= null"^^<http://www.omg.org/spec/OCL> .

property:DestroyObjectAction-isDestroyLinks rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DestroyObjectAction-isDestroyLinks" ;
	rdfs:label "DestroyObjectAction-isDestroyLinks" ;
	uml-model:name "isDestroyLinks" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether links in which the object participates are destroyed along with the object."@en ;
	xmi:defaultValue element:DestroyObjectAction-isDestroyLinks-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DestroyObjectAction-isDestroyLinks-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "DestroyObjectAction-isDestroyLinks-_defaultValue" .

property:DestroyObjectAction-isDestroyOwnedObjects rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "DestroyObjectAction-isDestroyOwnedObjects" ;
	rdfs:label "DestroyObjectAction-isDestroyOwnedObjects" ;
	uml-model:name "isDestroyOwnedObjects" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether objects owned by the object (via composition) are destroyed along with the object."@en ;
	xmi:defaultValue element:DestroyObjectAction-isDestroyOwnedObjects-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:DestroyObjectAction-isDestroyOwnedObjects-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "DestroyObjectAction-isDestroyOwnedObjects-_defaultValue" .

property:DestroyObjectAction-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "DestroyObjectAction-target" ;
	rdfs:label "DestroyObjectAction-target" ;
	uml-model:name "target" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_target_destroyObjectAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin providing the object to be destroyed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ExpansionNode xmi:type uml:Class ;
	xmi:id "ExpansionNode" ;
	uml-model:name "ExpansionNode" ;
	rdfs:comment "'An ExpansionNode is an ObjectNode used to indicate a collection input or output for an ExpansionRegion. A collection input of an ExpansionRegion contains a collection that is broken into its individual elements inside the region, whose content is executed once per element. A collection output of an ExpansionRegion combines individual elements produced by the execution of the region into a collection for use outside the region."@en ;
	uml-model:rule element:ExpansionNode-region_as_input_or_output ;
	rdfs:subClassOf element:ObjectNode ;
	uml-model:ownedAttribute property:ExpansionNode-regionAsInput, property:ExpansionNode-regionAsOutput .

element:ExpansionNode-region_as_input_or_output rdfs:comment "'One of regionAsInput or regionAsOutput must be non-empty, but not both."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ExpansionNode-region_as_input_or_output-_specification .

element:ExpansionNode-region_as_input_or_output-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "regionAsInput->notEmpty() xor regionAsOutput->notEmpty()"^^<http://www.omg.org/spec/OCL> .

property:ExpansionNode-regionAsInput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExpansionNode-regionAsInput" ;
	rdfs:label "ExpansionNode-regionAsInput" ;
	uml-model:name "regionAsInput" ;
	uml-model:association uml-element:A_inputElement_regionAsInput ;
	rdfs:range element:ExpansionRegion ;
	rdfs:comment "'The ExpansionRegion for which the ExpansionNode is an input."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:ExpansionNode-regionAsOutput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExpansionNode-regionAsOutput" ;
	rdfs:label "ExpansionNode-regionAsOutput" ;
	uml-model:name "regionAsOutput" ;
	uml-model:association uml-element:A_outputElement_regionAsOutput ;
	rdfs:range element:ExpansionRegion ;
	rdfs:comment "'The ExpansionRegion for which the ExpansionNode is an output."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ExpansionRegion xmi:type uml:Class ;
	xmi:id "ExpansionRegion" ;
	uml-model:name "ExpansionRegion" ;
	rdfs:comment "'An ExpansionRegion is a StructuredActivityNode that executes its content multiple times corresponding to elements of input collection(s)."@en ;
	rdfs:subClassOf element:StructuredActivityNode ;
	uml-model:ownedAttribute property:ExpansionRegion-inputElement, property:ExpansionRegion-mode, property:ExpansionRegion-outputElement .

property:ExpansionRegion-inputElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExpansionRegion-inputElement" ;
	rdfs:label "ExpansionRegion-inputElement" ;
	uml-model:name "inputElement" ;
	uml-model:association uml-element:A_inputElement_regionAsInput ;
	rdfs:range element:ExpansionNode ;
	rdfs:comment "'The ExpansionNodes that hold the input collections for the ExpansionRegion."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:ExpansionRegion-mode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExpansionRegion-mode" ;
	rdfs:label "ExpansionRegion-mode" ;
	uml-model:name "mode" ;
	rdfs:range element:ExpansionKind ;
	rdfs:comment "'The mode in which the ExpansionRegion executes its contents. If parallel, executions are concurrent. If iterative, executions are sequential. If stream, a stream of values flows into a single execution."@en ;
	xmi:defaultValue element:ExpansionRegion-mode-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ExpansionRegion-mode-_defaultValue xmi:type uml:InstanceValue ;
	xmi:id "ExpansionRegion-mode-_defaultValue" .

property:ExpansionRegion-outputElement rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ExpansionRegion-outputElement" ;
	rdfs:label "ExpansionRegion-outputElement" ;
	uml-model:name "outputElement" ;
	uml-model:association uml-element:A_outputElement_regionAsOutput ;
	rdfs:range element:ExpansionNode ;
	rdfs:comment "'The ExpansionNodes that form the output collections of the ExpansionRegion."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:InputPin xmi:type uml:Class ;
	xmi:id "InputPin" ;
	uml-model:name "InputPin" ;
	rdfs:comment "'An InputPin is a Pin that holds input values to be consumed by an Action."@en ;
	uml-model:rule element:InputPin-outgoing_edges_structured_only ;
	rdfs:subClassOf element:Pin .

element:InputPin-outgoing_edges_structured_only rdfs:comment "'An InputPin may have outgoing ActivityEdges only when it is owned by a StructuredActivityNode, and these edges must target a node contained (directly or indirectly) in the owning StructuredActivityNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:InputPin-outgoing_edges_structured_only-_specification .

element:InputPin-outgoing_edges_structured_only-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "outgoing->notEmpty() implies\n   action<>null and\n   action.oclIsKindOf(StructuredActivityNode) and\n   action.oclAsType(StructuredActivityNode).allOwnedNodes()->includesAll(outgoing.target)"^^<http://www.omg.org/spec/OCL> .

element:InvocationAction xmi:type uml:Class ;
	xmi:id "InvocationAction" ;
	uml-model:name "InvocationAction" ;
	rdfs:comment "'InvocationAction is an abstract class for the various actions that request Behavior invocation.&#xD;&#xA;"@en ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:InvocationAction-argument, property:InvocationAction-onPort .

property:InvocationAction-argument rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InvocationAction-argument" ;
	rdfs:label "InvocationAction-argument" ;
	uml-model:name "argument" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_argument_invocationAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPins that provide the argument values passed in the invocation request."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:InvocationAction-onPort rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "InvocationAction-onPort" ;
	rdfs:label "InvocationAction-onPort" ;
	uml-model:name "onPort" ;
	uml-model:association uml-element:A_onPort_invocationAction ;
	rdfs:range element:Port ;
	rdfs:comment "'For CallOperationActions, SendSignalActions, and SendObjectActions, an optional Port of the target object through which the invocation request is sent."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:LinkAction xmi:type uml:Class ;
	xmi:id "LinkAction" ;
	uml-model:name "LinkAction" ;
	rdfs:comment "'LinkAction is an abstract class for all Actions that identify the links to be acted on using LinkEndData."@en ;
	uml-model:rule element:LinkAction-same_pins, element:LinkAction-same_association, element:LinkAction-not_static ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:LinkAction-endData, property:LinkAction-inputValue ;
	uml-model:operation element:LinkAction-association .

element:LinkAction-same_pins rdfs:comment "'The inputValue InputPins is the same as the union of all the InputPins referenced by the endData."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkAction-same_pins-_specification .

element:LinkAction-same_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "inputValue->asBag()=endData.allPins()"^^<http://www.omg.org/spec/OCL> .

element:LinkAction-same_association rdfs:comment "'The ends of the endData must all be from the same Association and include all and only the memberEnds of that association."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkAction-same_association-_specification .

element:LinkAction-same_association-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "endData.end = self.association().memberEnd->asBag()"^^<http://www.omg.org/spec/OCL> .

element:LinkAction-not_static rdfs:comment "'The ends of the endData must not be static."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkAction-not_static-_specification .

element:LinkAction-not_static-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "endData->forAll(not end.isStatic)"^^<http://www.omg.org/spec/OCL> .

property:LinkAction-endData rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkAction-endData" ;
	rdfs:label "LinkAction-endData" ;
	uml-model:name "endData" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_endData_linkAction ;
	rdfs:range element:LinkEndData ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The LinkEndData identifying the values on the ends of the links acting on by this LinkAction."@en ;
	uml-model:multiplicity "2..*"^^uml-model-dt:multiplicityRange .

property:LinkAction-inputValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkAction-inputValue" ;
	rdfs:label "LinkAction-inputValue" ;
	uml-model:name "inputValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_inputValue_linkAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'InputPins used by the LinkEndData of the LinkAction."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:LinkAction-association rdfs:comment "'Returns the Association acted on by this LinkAction."@en ;
	uml-model:rule element:LinkAction-association-spec ;
	uml-model:returns element:LinkAction-association-result .

element:LinkAction-association-spec rdf:type uml:Constraint ;
	uml-model:specification element:LinkAction-association-spec-_specification .

element:LinkAction-association-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (endData->asSequence()->first().end.association)"^^<http://www.omg.org/spec/OCL> .

element:LinkAction-association-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Association .

element:LinkEndCreationData xmi:type uml:Class ;
	xmi:id "LinkEndCreationData" ;
	uml-model:name "LinkEndCreationData" ;
	rdfs:comment "'LinkEndCreationData is LinkEndData used to provide values for one end of a link to be created by a CreateLinkAction."@en ;
	uml-model:rule element:LinkEndCreationData-insertAt_pin ;
	rdfs:subClassOf element:LinkEndData ;
	uml-model:ownedAttribute property:LinkEndCreationData-insertAt, property:LinkEndCreationData-isReplaceAll ;
	uml-model:operation element:LinkEndCreationData-allPins .

element:LinkEndCreationData-insertAt_pin rdfs:comment "'LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have no InputPin for the insertion point when the association ends are unordered."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndCreationData-insertAt_pin-_specification .

element:LinkEndCreationData-insertAt_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if  not end.isOrdered\nthen insertAt = null\nelse\n   not isReplaceAll=false implies\n   insertAt <> null and insertAt->forAll(type=UnlimitedNatural and is(1,1))\nendif"^^<http://www.omg.org/spec/OCL> .

property:LinkEndCreationData-insertAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndCreationData-insertAt" ;
	rdfs:label "LinkEndCreationData-insertAt" ;
	uml-model:name "insertAt" ;
	uml-model:association uml-element:A_insertAt_linkEndCreationData ;
	rdfs:range element:InputPin ;
	rdfs:comment "'For ordered Association ends, the InputPin that provides the position where the new link should be inserted or where an existing link should be moved to. The type of the insertAt InputPin is UnlimitedNatural, but the input cannot be zero. It is omitted for Association ends that are not ordered."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:LinkEndCreationData-isReplaceAll rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndCreationData-isReplaceAll" ;
	rdfs:label "LinkEndCreationData-isReplaceAll" ;
	uml-model:name "isReplaceAll" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link."@en ;
	xmi:defaultValue element:LinkEndCreationData-isReplaceAll-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LinkEndCreationData-isReplaceAll-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "LinkEndCreationData-isReplaceAll-_defaultValue" .

element:LinkEndCreationData-allPins uml-model:redefines element:LinkEndData-allPins ;
	rdfs:comment "'Adds the insertAt InputPin (if any) to the set of all Pins."@en ;
	uml-model:rule element:LinkEndCreationData-allPins-spec ;
	uml-model:returns element:LinkEndCreationData-allPins-result .

element:LinkEndCreationData-allPins-spec rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndCreationData-allPins-spec-_specification .

element:LinkEndCreationData-allPins-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.LinkEndData::allPins()->including(insertAt))"^^<http://www.omg.org/spec/OCL> .

element:LinkEndCreationData-allPins-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:InputPin ;
	uml-model:upperValue element:LinkEndCreationData-allPins-result-_upperValue .

element:LinkEndCreationData-allPins-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:LinkEndData xmi:type uml:Class ;
	xmi:id "LinkEndData" ;
	uml-model:name "LinkEndData" ;
	rdfs:comment "'LinkEndData is an Element that identifies on end of a link to be read or written by a LinkAction. As a link (that is not a link object) cannot be passed as a runtime value to or from an Action, it is instead identified by its end objects and qualifier values, if any. A LinkEndData instance provides these values for a single Association end."@en ;
	uml-model:rule element:LinkEndData-same_type, element:LinkEndData-multiplicity, element:LinkEndData-end_object_input_pin, element:LinkEndData-property_is_association_end, element:LinkEndData-qualifiers ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:LinkEndData-end, property:LinkEndData-qualifier, property:LinkEndData-value ;
	uml-model:operation element:LinkEndData-allPins .

element:LinkEndData-same_type rdfs:comment "'The type of the value InputPin conforms to the type of the Association end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-same_type-_specification .

element:LinkEndData-same_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value<>null implies value.type.conformsTo(end.type)"^^<http://www.omg.org/spec/OCL> .

element:LinkEndData-multiplicity rdfs:comment "'The multiplicity of the value InputPin must be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-multiplicity-_specification .

element:LinkEndData-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value<>null implies value.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:LinkEndData-end_object_input_pin rdfs:comment "'The value InputPin is not also the qualifier value InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-end_object_input_pin-_specification .

element:LinkEndData-end_object_input_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value->excludesAll(qualifier.value)"^^<http://www.omg.org/spec/OCL> .

element:LinkEndData-property_is_association_end rdfs:comment "'The Property must be an Association memberEnd."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-property_is_association_end-_specification .

element:LinkEndData-property_is_association_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end.association <> null"^^<http://www.omg.org/spec/OCL> .

element:LinkEndData-qualifiers rdfs:comment "'The qualifiers must be qualifiers of the Association end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-qualifiers-_specification .

element:LinkEndData-qualifiers-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end.qualifier->includesAll(qualifier.qualifier)"^^<http://www.omg.org/spec/OCL> .

property:LinkEndData-end rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndData-end" ;
	rdfs:label "LinkEndData-end" ;
	uml-model:name "end" ;
	uml-model:association uml-element:A_end_linkEndData ;
	rdfs:range element:Property ;
	rdfs:comment "'The Association end for which this LinkEndData specifies values."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:LinkEndData-qualifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndData-qualifier" ;
	rdfs:label "LinkEndData-qualifier" ;
	uml-model:name "qualifier" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_qualifier_linkEndData ;
	rdfs:range element:QualifierValue ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A set of QualifierValues used to provide values for the qualifiers of the end."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LinkEndData-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndData-value" ;
	rdfs:label "LinkEndData-value" ;
	uml-model:name "value" ;
	uml-model:association uml-element:A_value_linkEndData ;
	rdfs:range element:InputPin ;
	rdfs:comment "'The InputPin that provides the specified value for the given end. This InputPin is omitted if the LinkEndData specifies the &#34;open&#34; end for a ReadLinkAction."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:LinkEndData-allPins rdfs:comment "'Returns all the InputPins referenced by this LinkEndData. By default this includes the value and qualifier InputPins, but subclasses may override the operation to add other InputPins."@en ;
	uml-model:rule element:LinkEndData-allPins-spec ;
	uml-model:returns element:LinkEndData-allPins-result .

element:LinkEndData-allPins-spec rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndData-allPins-spec-_specification .

element:LinkEndData-allPins-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (value->asBag()->union(qualifier.value))"^^<http://www.omg.org/spec/OCL> .

element:LinkEndData-allPins-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:InputPin ;
	uml-model:upperValue element:LinkEndData-allPins-result-_upperValue .

element:LinkEndData-allPins-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:LinkEndDestructionData xmi:type uml:Class ;
	xmi:id "LinkEndDestructionData" ;
	uml-model:name "LinkEndDestructionData" ;
	rdfs:comment "'LinkEndDestructionData is LinkEndData used to provide values for one end of a link to be destroyed by a DestroyLinkAction."@en ;
	uml-model:rule element:LinkEndDestructionData-destroyAt_pin ;
	rdfs:subClassOf element:LinkEndData ;
	uml-model:ownedAttribute property:LinkEndDestructionData-destroyAt, property:LinkEndDestructionData-isDestroyDuplicates ;
	uml-model:operation element:LinkEndDestructionData-allPins .

element:LinkEndDestructionData-destroyAt_pin rdfs:comment "'LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no destroyAt input pin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndDestructionData-destroyAt_pin-_specification .

element:LinkEndDestructionData-destroyAt_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if  not end.isOrdered or end.isUnique or isDestroyDuplicates\nthen destroyAt = null\nelse\n   destroyAt <> null and \n   destroyAt->forAll(type=UnlimitedNatural and is(1,1))\nendif"^^<http://www.omg.org/spec/OCL> .

property:LinkEndDestructionData-destroyAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndDestructionData-destroyAt" ;
	rdfs:label "LinkEndDestructionData-destroyAt" ;
	uml-model:name "destroyAt" ;
	uml-model:association uml-element:A_destroyAt_linkEndDestructionData ;
	rdfs:range element:InputPin ;
	rdfs:comment "'The InputPin that provides the position of an existing link to be destroyed in an ordered, nonunique Association end. The type of the destroyAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:LinkEndDestructionData-isDestroyDuplicates rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LinkEndDestructionData-isDestroyDuplicates" ;
	rdfs:label "LinkEndDestructionData-isDestroyDuplicates" ;
	uml-model:name "isDestroyDuplicates" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether to destroy duplicates of the value in nonunique Association ends."@en ;
	xmi:defaultValue element:LinkEndDestructionData-isDestroyDuplicates-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LinkEndDestructionData-isDestroyDuplicates-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "LinkEndDestructionData-isDestroyDuplicates-_defaultValue" .

element:LinkEndDestructionData-allPins uml-model:redefines element:LinkEndData-allPins ;
	rdfs:comment "'Adds the destroyAt InputPin (if any) to the set of all Pins."@en ;
	uml-model:rule element:LinkEndDestructionData-allPins-spec ;
	uml-model:returns element:LinkEndDestructionData-allPins-result .

element:LinkEndDestructionData-allPins-spec rdf:type uml:Constraint ;
	uml-model:specification element:LinkEndDestructionData-allPins-spec-_specification .

element:LinkEndDestructionData-allPins-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.LinkEndData::allPins()->including(destroyAt))"^^<http://www.omg.org/spec/OCL> .

element:LinkEndDestructionData-allPins-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:InputPin ;
	uml-model:upperValue element:LinkEndDestructionData-allPins-result-_upperValue .

element:LinkEndDestructionData-allPins-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:LoopNode xmi:type uml:Class ;
	xmi:id "LoopNode" ;
	uml-model:name "LoopNode" ;
	rdfs:comment "'A LoopNode is a StructuredActivityNode that represents an iterative loop with setup, test, and body sections."@en ;
	uml-model:rule element:LoopNode-result_no_incoming, element:LoopNode-input_edges, element:LoopNode-executable_nodes, element:LoopNode-body_output_pins, element:LoopNode-setup_test_and_body, element:LoopNode-matching_output_pins, element:LoopNode-matching_loop_variables, element:LoopNode-matching_result_pins, element:LoopNode-loop_variable_outgoing ;
	rdfs:subClassOf element:StructuredActivityNode ;
	uml-model:ownedAttribute property:LoopNode-bodyOutput, property:LoopNode-bodyPart, property:LoopNode-decider, property:LoopNode-isTestedFirst, property:LoopNode-loopVariable, property:LoopNode-loopVariableInput, property:LoopNode-result, property:LoopNode-setupPart, property:LoopNode-test ;
	uml-model:operation element:LoopNode-allActions, element:LoopNode-sourceNodes .

element:LoopNode-result_no_incoming rdfs:comment "'The result OutputPins have no incoming edges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-result_no_incoming-_specification .

element:LoopNode-result_no_incoming-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.incoming->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-input_edges rdfs:comment "'The loopVariableInputs must not have outgoing edges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-input_edges-_specification .

element:LoopNode-input_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "loopVariableInput.outgoing->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-executable_nodes rdfs:comment "'The union of the ExecutableNodes in the setupPart, test and bodyPart of a LoopNode must be the same as the subset of nodes contained in the LoopNode (considered as a StructuredActivityNode) that are ExecutableNodes."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-executable_nodes-_specification .

element:LoopNode-executable_nodes-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "setupPart->union(test)->union(bodyPart)=node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)->asSet()"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-body_output_pins rdfs:comment "'The bodyOutput pins are OutputPins on Actions in the body of the LoopNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-body_output_pins-_specification .

element:LoopNode-body_output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "bodyPart.oclAsType(Action).allActions().output->includesAll(bodyOutput)"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-setup_test_and_body rdfs:comment "'The test and body parts of a ConditionalNode must be disjoint with each other."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-setup_test_and_body-_specification .

element:LoopNode-setup_test_and_body-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "setupPart->intersection(test)->isEmpty() and\nsetupPart->intersection(bodyPart)->isEmpty() and\ntest->intersection(bodyPart)->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-matching_output_pins rdfs:comment "'A LoopNode must have the same number of bodyOutput Pins as loopVariables, and each bodyOutput Pin must be compatible with the corresponding loopVariable (by positional order) in type, multiplicity, ordering and uniqueness."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-matching_output_pins-_specification .

element:LoopNode-matching_output_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "bodyOutput->size()=loopVariable->size() and\nSequence{1..loopVariable->size()}->forAll(i |\n   bodyOutput->at(i).type.conformsTo(loopVariable->at(i).type) and\n   bodyOutput->at(i).isOrdered = loopVariable->at(i).isOrdered and\n   bodyOutput->at(i).isUnique = loopVariable->at(i).isUnique and\n   loopVariable->at(i).includesMultiplicity(bodyOutput->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-matching_loop_variables rdfs:comment "'A LoopNode must have the same number of loopVariableInputs and loopVariables, and they must match in type, uniqueness and multiplicity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-matching_loop_variables-_specification .

element:LoopNode-matching_loop_variables-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "loopVariableInput->size()=loopVariable->size() and\nloopVariableInput.type=loopVariable.type and\nloopVariableInput.isUnique=loopVariable.isUnique and\nloopVariableInput.lower=loopVariable.lower and\nloopVariableInput.upper=loopVariable.upper"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-matching_result_pins rdfs:comment "'A LoopNode must have the same number of result OutputPins and loopVariables, and they must match in type, uniqueness and multiplicity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-matching_result_pins-_specification .

element:LoopNode-matching_result_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result->size()=loopVariable->size() and\nresult.type=loopVariable.type and\nresult.isUnique=loopVariable.isUnique and\nresult.lower=loopVariable.lower and\nresult.upper=loopVariable.upper"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-loop_variable_outgoing rdfs:comment "'All ActivityEdges outgoing from loopVariable OutputPins must have targets within the LoopNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-loop_variable_outgoing-_specification .

element:LoopNode-loop_variable_outgoing-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "allOwnedNodes()->includesAll(loopVariable.outgoing.target)"^^<http://www.omg.org/spec/OCL> .

property:LoopNode-bodyOutput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-bodyOutput" ;
	rdfs:label "LoopNode-bodyOutput" ;
	uml-model:name "bodyOutput" ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_bodyOutput_loopNode ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'The OutputPins on Actions within the bodyPart, the values of which are moved to the loopVariable OutputPins after the completion of each execution of the bodyPart, before the next iteration of the loop begins or before the loop exits."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-bodyPart rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-bodyPart" ;
	rdfs:label "LoopNode-bodyPart" ;
	uml-model:name "bodyPart" ;
	uml-model:association uml-element:A_bodyPart_loopNode ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The set of ExecutableNodes that perform the repetitive computations of the loop. The bodyPart is executed as long as the test section produces a true value."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-decider rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-decider" ;
	rdfs:label "LoopNode-decider" ;
	uml-model:name "decider" ;
	uml-model:association uml-element:A_decider_loopNode ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'An OutputPin on an Action in the test section whose Boolean value determines whether to continue executing the loop bodyPart."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:LoopNode-isTestedFirst rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-isTestedFirst" ;
	rdfs:label "LoopNode-isTestedFirst" ;
	uml-model:name "isTestedFirst" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, the test is performed before the first execution of the bodyPart. If false, the bodyPart is executed once before the test is performed."@en ;
	xmi:defaultValue element:LoopNode-isTestedFirst-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:LoopNode-isTestedFirst-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "LoopNode-isTestedFirst-_defaultValue" .

property:LoopNode-loopVariable rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-loopVariable" ;
	rdfs:label "LoopNode-loopVariable" ;
	uml-model:name "loopVariable" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_loopVariable_loopNode ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'A list of OutputPins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are moved to the result OutputPins of the loop."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-loopVariableInput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-loopVariableInput" ;
	rdfs:label "LoopNode-loopVariableInput" ;
	uml-model:name "loopVariableInput" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_loopVariableInput_loopNode ;
	rdfs:range element:InputPin ;
	rdfs:comment "'A list of InputPins whose values are moved into the loopVariable Pins before the first iteration of the loop."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-result" ;
	rdfs:label "LoopNode-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_loopNode ;
	rdfs:range element:OutputPin ;
	rdfs:comment "'A list of OutputPins that receive the loopVariable values after the last iteration of the loop and constitute the output of the LoopNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-setupPart rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-setupPart" ;
	rdfs:label "LoopNode-setupPart" ;
	uml-model:name "setupPart" ;
	uml-model:association uml-element:A_setupPart_loopNode ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The set of ExecutableNodes executed before the first iteration of the loop, in order to initialize values or perform other setup computations."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:LoopNode-test rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "LoopNode-test" ;
	rdfs:label "LoopNode-test" ;
	uml-model:name "test" ;
	uml-model:association uml-element:A_test_loopNode ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The set of ExecutableNodes executed in order to provide the test result for the loop."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

element:LoopNode-allActions uml-model:redefines element:Action-allActions ;
	rdfs:comment "'Return only this LoopNode. This prevents Actions within the LoopNode from having their OutputPins used as bodyOutputs or decider Pins in containing LoopNodes or ConditionalNodes."@en ;
	uml-model:rule element:LoopNode-allActions-spec ;
	uml-model:returns element:LoopNode-allActions-result .

element:LoopNode-allActions-spec rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-allActions-spec-_specification .

element:LoopNode-allActions-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self->asSet())"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-allActions-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Action ;
	uml-model:upperValue element:LoopNode-allActions-result-_upperValue .

element:LoopNode-allActions-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:LoopNode-sourceNodes uml-model:redefines element:StructuredActivityNode-sourceNodes ;
	rdfs:comment "'Return the loopVariable OutputPins in addition to other source nodes for the LoopNode as a StructuredActivityNode."@en ;
	uml-model:rule element:LoopNode-sourceNodes-spec ;
	uml-model:returns element:LoopNode-sourceNodes-result .

element:LoopNode-sourceNodes-spec rdf:type uml:Constraint ;
	uml-model:specification element:LoopNode-sourceNodes-spec-_specification .

element:LoopNode-sourceNodes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.StructuredActivityNode::sourceNodes()->union(loopVariable))"^^<http://www.omg.org/spec/OCL> .

element:LoopNode-sourceNodes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ActivityNode ;
	uml-model:upperValue element:LoopNode-sourceNodes-result-_upperValue .

element:LoopNode-sourceNodes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:OpaqueAction xmi:type uml:Class ;
	xmi:id "OpaqueAction" ;
	uml-model:name "OpaqueAction" ;
	rdfs:comment "'An OpaqueAction is an Action whose functionality is not specified within UML."@en ;
	uml-model:rule element:OpaqueAction-language_body_size ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:OpaqueAction-body, property:OpaqueAction-inputValue, property:OpaqueAction-language, property:OpaqueAction-outputValue .

element:OpaqueAction-language_body_size rdfs:comment "'If the language attribute is not empty, then the size of the body and language lists must be the same."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:OpaqueAction-language_body_size-_specification .

element:OpaqueAction-language_body_size-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "language->notEmpty() implies (_'body'->size() = language->size())"^^<http://www.omg.org/spec/OCL> .

property:OpaqueAction-body rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueAction-body" ;
	rdfs:label "OpaqueAction-body" ;
	uml-model:name "body" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'Provides a textual specification of the functionality of the Action, in one or more languages other than UML."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueAction-inputValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueAction-inputValue" ;
	rdfs:label "OpaqueAction-inputValue" ;
	uml-model:name "inputValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_inputValue_opaqueAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPins providing inputs to the OpaqueAction."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueAction-language rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueAction-language" ;
	rdfs:label "OpaqueAction-language" ;
	uml-model:name "language" ;
	uml-model:ordered "true"^^xsd:boolean ;
	rdfs:range uml-primitives:String ;
	rdfs:comment "'If provided, a specification of the language used for each of the body Strings."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:OpaqueAction-outputValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "OpaqueAction-outputValue" ;
	rdfs:label "OpaqueAction-outputValue" ;
	uml-model:name "outputValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_outputValue_opaqueAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPins on which the OpaqueAction provides outputs."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:OutputPin xmi:type uml:Class ;
	xmi:id "OutputPin" ;
	uml-model:name "OutputPin" ;
	rdfs:comment "'An OutputPin is a Pin that holds output values produced by an Action."@en ;
	uml-model:rule element:OutputPin-incoming_edges_structured_only ;
	rdfs:subClassOf element:Pin .

element:OutputPin-incoming_edges_structured_only rdfs:comment "'An OutputPin may have incoming ActivityEdges only when it is owned by a StructuredActivityNode, and these edges must have sources contained (directly or indirectly) in the owning StructuredActivityNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:OutputPin-incoming_edges_structured_only-_specification .

element:OutputPin-incoming_edges_structured_only-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->notEmpty() implies\n   action<>null and\n   action.oclIsKindOf(StructuredActivityNode) and\n   action.oclAsType(StructuredActivityNode).allOwnedNodes()->includesAll(incoming.source)"^^<http://www.omg.org/spec/OCL> .

element:Pin xmi:type uml:Class ;
	xmi:id "Pin" ;
	uml-model:name "Pin" ;
	rdfs:comment "'A Pin is an ObjectNode and MultiplicityElement that provides input values to an Action or accepts output values from an Action."@en ;
	uml-model:rule element:Pin-control_pins, element:Pin-not_unique ;
	rdfs:subClassOf element:ObjectNode, element:MultiplicityElement ;
	uml-model:ownedAttribute property:Pin-isControl .

element:Pin-control_pins rdfs:comment "'A control Pin has a control type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pin-control_pins-_specification .

element:Pin-control_pins-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "isControl implies isControlType"^^<http://www.omg.org/spec/OCL> .

element:Pin-not_unique rdfs:comment "'Pin multiplicity is not unique."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:Pin-not_unique-_specification .

element:Pin-not_unique-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not isUnique"^^<http://www.omg.org/spec/OCL> .

property:Pin-isControl rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "Pin-isControl" ;
	rdfs:label "Pin-isControl" ;
	uml-model:name "isControl" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the Pin provides data to the Action or just controls how the Action executes."@en ;
	xmi:defaultValue element:Pin-isControl-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:Pin-isControl-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "Pin-isControl-_defaultValue" .

element:QualifierValue xmi:type uml:Class ;
	xmi:id "QualifierValue" ;
	uml-model:name "QualifierValue" ;
	rdfs:comment "'A QualifierValue is an Element that is used as part of LinkEndData to provide the value for a single qualifier of the end given by the LinkEndData."@en ;
	uml-model:rule element:QualifierValue-multiplicity_of_qualifier, element:QualifierValue-type_of_qualifier, element:QualifierValue-qualifier_attribute ;
	rdfs:subClassOf element:Element ;
	uml-model:ownedAttribute property:QualifierValue-qualifier, property:QualifierValue-value .

element:QualifierValue-multiplicity_of_qualifier rdfs:comment "'The multiplicity of the value InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:QualifierValue-multiplicity_of_qualifier-_specification .

element:QualifierValue-multiplicity_of_qualifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:QualifierValue-type_of_qualifier rdfs:comment "'The type of the value InputPin conforms to the type of the qualifier Property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:QualifierValue-type_of_qualifier-_specification .

element:QualifierValue-type_of_qualifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value.type.conformsTo(qualifier.type)"^^<http://www.omg.org/spec/OCL> .

element:QualifierValue-qualifier_attribute rdfs:comment "'The qualifier must be a qualifier of the Association end of the linkEndData that owns this QualifierValue."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:QualifierValue-qualifier_attribute-_specification .

element:QualifierValue-qualifier_attribute-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "linkEndData.end.qualifier->includes(qualifier)"^^<http://www.omg.org/spec/OCL> .

property:QualifierValue-qualifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "QualifierValue-qualifier" ;
	rdfs:label "QualifierValue-qualifier" ;
	uml-model:name "qualifier" ;
	uml-model:association uml-element:A_qualifier_qualifierValue ;
	rdfs:range element:Property ;
	rdfs:comment "'The qualifier Property for which the value is to be specified."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:QualifierValue-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "QualifierValue-value" ;
	rdfs:label "QualifierValue-value" ;
	uml-model:name "value" ;
	uml-model:association uml-element:A_value_qualifierValue ;
	rdfs:range element:InputPin ;
	rdfs:comment "'The InputPin from which the specified value for the qualifier is taken."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:RaiseExceptionAction xmi:type uml:Class ;
	xmi:id "RaiseExceptionAction" ;
	uml-model:name "RaiseExceptionAction" ;
	rdfs:comment "'A RaiseExceptionAction is an Action that causes an exception to occur. The input value becomes the exception object."@en ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:RaiseExceptionAction-exception .

property:RaiseExceptionAction-exception rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RaiseExceptionAction-exception" ;
	rdfs:label "RaiseExceptionAction-exception" ;
	uml-model:name "exception" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_exception_raiseExceptionAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'An InputPin whose value becomes the exception object."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadExtentAction xmi:type uml:Class ;
	xmi:id "ReadExtentAction" ;
	uml-model:name "ReadExtentAction" ;
	rdfs:comment "'A ReadExtentAction is an Action that retrieves the current instances of a Classifier."@en ;
	uml-model:rule element:ReadExtentAction-type_is_classifier, element:ReadExtentAction-multiplicity_of_result ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReadExtentAction-classifier, property:ReadExtentAction-result .

element:ReadExtentAction-type_is_classifier rdfs:comment "'The type of the result OutputPin is the classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadExtentAction-type_is_classifier-_specification .

element:ReadExtentAction-type_is_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = classifier"^^<http://www.omg.org/spec/OCL> .

element:ReadExtentAction-multiplicity_of_result rdfs:comment "'The multiplicity of the result OutputPin is 0..*."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadExtentAction-multiplicity_of_result-_specification .

element:ReadExtentAction-multiplicity_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(0,*)"^^<http://www.omg.org/spec/OCL> .

property:ReadExtentAction-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadExtentAction-classifier" ;
	rdfs:label "ReadExtentAction-classifier" ;
	uml-model:name "classifier" ;
	uml-model:association uml-element:A_classifier_readExtentAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifier whose instances are to be retrieved."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadExtentAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadExtentAction-result" ;
	rdfs:label "ReadExtentAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readExtentAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the Classifier instances are placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadIsClassifiedObjectAction xmi:type uml:Class ;
	xmi:id "ReadIsClassifiedObjectAction" ;
	uml-model:name "ReadIsClassifiedObjectAction" ;
	rdfs:comment "'A ReadIsClassifiedObjectAction is an Action that determines whether an object is classified by a given Classifier."@en ;
	uml-model:rule element:ReadIsClassifiedObjectAction-no_type, element:ReadIsClassifiedObjectAction-multiplicity_of_output, element:ReadIsClassifiedObjectAction-boolean_result, element:ReadIsClassifiedObjectAction-multiplicity_of_input ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReadIsClassifiedObjectAction-classifier, property:ReadIsClassifiedObjectAction-isDirect, property:ReadIsClassifiedObjectAction-object, property:ReadIsClassifiedObjectAction-result .

element:ReadIsClassifiedObjectAction-no_type rdfs:comment "'The object InputPin has no type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadIsClassifiedObjectAction-no_type-_specification .

element:ReadIsClassifiedObjectAction-no_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type = null"^^<http://www.omg.org/spec/OCL> .

element:ReadIsClassifiedObjectAction-multiplicity_of_output rdfs:comment "'The multiplicity of the result OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadIsClassifiedObjectAction-multiplicity_of_output-_specification .

element:ReadIsClassifiedObjectAction-multiplicity_of_output-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadIsClassifiedObjectAction-boolean_result rdfs:comment "'The type of the result OutputPin is Boolean."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadIsClassifiedObjectAction-boolean_result-_specification .

element:ReadIsClassifiedObjectAction-boolean_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = Boolean"^^<http://www.omg.org/spec/OCL> .

element:ReadIsClassifiedObjectAction-multiplicity_of_input rdfs:comment "'The multiplicity of the object InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadIsClassifiedObjectAction-multiplicity_of_input-_specification .

element:ReadIsClassifiedObjectAction-multiplicity_of_input-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

property:ReadIsClassifiedObjectAction-classifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadIsClassifiedObjectAction-classifier" ;
	rdfs:label "ReadIsClassifiedObjectAction-classifier" ;
	uml-model:name "classifier" ;
	uml-model:association uml-element:A_classifier_readIsClassifiedObjectAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The Classifier against which the classification of the input object is tested."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadIsClassifiedObjectAction-isDirect rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadIsClassifiedObjectAction-isDirect" ;
	rdfs:label "ReadIsClassifiedObjectAction-isDirect" ;
	uml-model:name "isDirect" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the input object must be directly classified by the given Classifier or whether it may also be an instance of a specialization of the given Classifier."@en ;
	xmi:defaultValue element:ReadIsClassifiedObjectAction-isDirect-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadIsClassifiedObjectAction-isDirect-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ReadIsClassifiedObjectAction-isDirect-_defaultValue" .

property:ReadIsClassifiedObjectAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadIsClassifiedObjectAction-object" ;
	rdfs:label "ReadIsClassifiedObjectAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_readIsClassifiedObjectAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that holds the object whose classification is to be tested."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadIsClassifiedObjectAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadIsClassifiedObjectAction-result" ;
	rdfs:label "ReadIsClassifiedObjectAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readIsClassifiedObjectAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin that holds the Boolean result of the test."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadLinkAction xmi:type uml:Class ;
	xmi:id "ReadLinkAction" ;
	uml-model:name "ReadLinkAction" ;
	rdfs:comment "'A ReadLinkAction is a LinkAction that navigates across an Association to retrieve the objects on one end."@en ;
	uml-model:rule element:ReadLinkAction-type_and_ordering, element:ReadLinkAction-compatible_multiplicity, element:ReadLinkAction-visibility, element:ReadLinkAction-one_open_end, element:ReadLinkAction-navigable_open_end ;
	rdfs:subClassOf element:LinkAction ;
	uml-model:ownedAttribute property:ReadLinkAction-result ;
	uml-model:operation element:ReadLinkAction-openEnd .

element:ReadLinkAction-type_and_ordering rdfs:comment "'The type and ordering of the result OutputPin are same as the type and ordering of the open Association end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-type_and_ordering-_specification .

element:ReadLinkAction-type_and_ordering-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkAction-compatible_multiplicity rdfs:comment "'The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-compatible_multiplicity-_specification .

element:ReadLinkAction-compatible_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.openEnd()->first().compatibleWith(result)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkAction-visibility rdfs:comment "'Visibility of the open end must allow access from the object performing the action."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-visibility-_specification .

element:ReadLinkAction-visibility-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let openEnd : Property = self.openEnd()->first() in\n  openEnd.visibility = VisibilityKind::public or \n  endData->exists(oed | \n    oed.end<>openEnd and \n    (_'context' = oed.end.type or \n      (openEnd.visibility = VisibilityKind::protected and \n        _'context'.conformsTo(oed.end.type.oclAsType(Classifier)))))"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkAction-one_open_end rdfs:comment "'Exactly one linkEndData specification (corresponding to the &#34;open&#34; end) must not have an value InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-one_open_end-_specification .

element:ReadLinkAction-one_open_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.openEnd()->size() = 1"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkAction-navigable_open_end rdfs:comment "'The open end must be navigable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-navigable_open_end-_specification .

element:ReadLinkAction-navigable_open_end-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.openEnd()->first().isNavigable()"^^<http://www.omg.org/spec/OCL> .

property:ReadLinkAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkAction-result" ;
	rdfs:label "ReadLinkAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readLinkAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the objects retrieved from the &#34;open&#34; end of those links whose values on other ends are given by the endData."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadLinkAction-openEnd rdfs:comment "'Returns the ends corresponding to endData with no value InputPin. (A well-formed ReadLinkAction is constrained to have only one of these.)"@en ;
	uml-model:rule element:ReadLinkAction-openEnd-spec ;
	uml-model:returns element:ReadLinkAction-openEnd-result .

element:ReadLinkAction-openEnd-spec rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkAction-openEnd-spec-_specification .

element:ReadLinkAction-openEnd-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (endData->select(value=null).end->asOrderedSet())"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkAction-openEnd-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Property ;
	uml-model:upperValue element:ReadLinkAction-openEnd-result-_upperValue .

element:ReadLinkAction-openEnd-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:ReadLinkObjectEndAction xmi:type uml:Class ;
	xmi:id "ReadLinkObjectEndAction" ;
	uml-model:name "ReadLinkObjectEndAction" ;
	rdfs:comment "'A ReadLinkObjectEndAction is an Action that retrieves an end object from a link object."@en ;
	uml-model:rule element:ReadLinkObjectEndAction-property, element:ReadLinkObjectEndAction-multiplicity_of_object, element:ReadLinkObjectEndAction-ends_of_association, element:ReadLinkObjectEndAction-type_of_result, element:ReadLinkObjectEndAction-multiplicity_of_result, element:ReadLinkObjectEndAction-type_of_object, element:ReadLinkObjectEndAction-association_of_association ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReadLinkObjectEndAction-end, property:ReadLinkObjectEndAction-object, property:ReadLinkObjectEndAction-result .

element:ReadLinkObjectEndAction-property rdfs:comment "'The end Property must be an Association memberEnd."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-property-_specification .

element:ReadLinkObjectEndAction-property-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end.association <> null"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-multiplicity_of_object rdfs:comment "'The multiplicity of the object InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-multiplicity_of_object-_specification .

element:ReadLinkObjectEndAction-multiplicity_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-ends_of_association rdfs:comment "'The ends of the association must not be static."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-ends_of_association-_specification .

element:ReadLinkObjectEndAction-ends_of_association-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end.association.memberEnd->forAll(e | not e.isStatic)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-type_of_result rdfs:comment "'The type of the result OutputPin is the same as the type of the end Property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-type_of_result-_specification .

element:ReadLinkObjectEndAction-type_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = end.type"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-multiplicity_of_result rdfs:comment "'The multiplicity of the result OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-multiplicity_of_result-_specification .

element:ReadLinkObjectEndAction-multiplicity_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-type_of_object rdfs:comment "'The type of the object InputPin is the AssociationClass that owns the end Property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-type_of_object-_specification .

element:ReadLinkObjectEndAction-type_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type = end.association"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndAction-association_of_association rdfs:comment "'The association of the end must be an AssociationClass."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndAction-association_of_association-_specification .

element:ReadLinkObjectEndAction-association_of_association-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "end.association.oclIsKindOf(AssociationClass)"^^<http://www.omg.org/spec/OCL> .

property:ReadLinkObjectEndAction-end rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndAction-end" ;
	rdfs:label "ReadLinkObjectEndAction-end" ;
	uml-model:name "end" ;
	uml-model:association uml-element:A_end_readLinkObjectEndAction ;
	rdfs:range element:Property ;
	rdfs:comment "'The Association end to be read."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadLinkObjectEndAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndAction-object" ;
	rdfs:label "ReadLinkObjectEndAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_readLinkObjectEndAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The input pin from which the link object is obtained."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadLinkObjectEndAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndAction-result" ;
	rdfs:label "ReadLinkObjectEndAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readLinkObjectEndAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin where the result value is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadLinkObjectEndQualifierAction xmi:type uml:Class ;
	xmi:id "ReadLinkObjectEndQualifierAction" ;
	uml-model:name "ReadLinkObjectEndQualifierAction" ;
	rdfs:comment "'A ReadLinkObjectEndQualifierAction is an Action that retrieves a qualifier end value from a link object."@en ;
	uml-model:rule element:ReadLinkObjectEndQualifierAction-multiplicity_of_object, element:ReadLinkObjectEndQualifierAction-type_of_object, element:ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier, element:ReadLinkObjectEndQualifierAction-ends_of_association, element:ReadLinkObjectEndQualifierAction-multiplicity_of_result, element:ReadLinkObjectEndQualifierAction-same_type, element:ReadLinkObjectEndQualifierAction-association_of_association, element:ReadLinkObjectEndQualifierAction-qualifier_attribute ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReadLinkObjectEndQualifierAction-object, property:ReadLinkObjectEndQualifierAction-qualifier, property:ReadLinkObjectEndQualifierAction-result .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_object rdfs:comment "'The multiplicity of the object InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-multiplicity_of_object-_specification .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-type_of_object rdfs:comment "'The type of the object InputPin is the AssociationClass that owns the Association end that has the given qualifier Property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-type_of_object-_specification .

element:ReadLinkObjectEndQualifierAction-type_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type = qualifier.associationEnd.association"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier rdfs:comment "'The multiplicity of the qualifier Property is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier-_specification .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "qualifier.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-ends_of_association rdfs:comment "'The ends of the Association must not be static."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-ends_of_association-_specification .

element:ReadLinkObjectEndQualifierAction-ends_of_association-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "qualifier.associationEnd.association.memberEnd->forAll(e | not e.isStatic)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_result rdfs:comment "'The multiplicity of the result OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-multiplicity_of_result-_specification .

element:ReadLinkObjectEndQualifierAction-multiplicity_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-same_type rdfs:comment "'The type of the result OutputPin is the same as the type of the qualifier Property."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-same_type-_specification .

element:ReadLinkObjectEndQualifierAction-same_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = qualifier.type"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-association_of_association rdfs:comment "'The association of the Association end of the qualifier Property must be an AssociationClass."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-association_of_association-_specification .

element:ReadLinkObjectEndQualifierAction-association_of_association-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "qualifier.associationEnd.association.oclIsKindOf(AssociationClass)"^^<http://www.omg.org/spec/OCL> .

element:ReadLinkObjectEndQualifierAction-qualifier_attribute rdfs:comment "'The qualifier Property must be a qualifier of an Association end."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadLinkObjectEndQualifierAction-qualifier_attribute-_specification .

element:ReadLinkObjectEndQualifierAction-qualifier_attribute-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "qualifier.associationEnd <> null"^^<http://www.omg.org/spec/OCL> .

property:ReadLinkObjectEndQualifierAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndQualifierAction-object" ;
	rdfs:label "ReadLinkObjectEndQualifierAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_readLinkObjectEndQualifierAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin from which the link object is obtained."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadLinkObjectEndQualifierAction-qualifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndQualifierAction-qualifier" ;
	rdfs:label "ReadLinkObjectEndQualifierAction-qualifier" ;
	uml-model:name "qualifier" ;
	uml-model:association uml-element:A_qualifier_readLinkObjectEndQualifierAction ;
	rdfs:range element:Property ;
	rdfs:comment "'The qualifier Property to be read."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReadLinkObjectEndQualifierAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadLinkObjectEndQualifierAction-result" ;
	rdfs:label "ReadLinkObjectEndQualifierAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readLinkObjectEndQualifierAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin where the result value is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadSelfAction xmi:type uml:Class ;
	xmi:id "ReadSelfAction" ;
	uml-model:name "ReadSelfAction" ;
	rdfs:comment "'A ReadSelfAction is an Action that retrieves the context object of the Behavior execution within which the ReadSelfAction execution is taking place."@en ;
	uml-model:rule element:ReadSelfAction-contained, element:ReadSelfAction-multiplicity, element:ReadSelfAction-not_static, element:ReadSelfAction-type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReadSelfAction-result .

element:ReadSelfAction-contained rdfs:comment "'A ReadSelfAction must have a context Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadSelfAction-contained-_specification .

element:ReadSelfAction-contained-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "_'context' <> null"^^<http://www.omg.org/spec/OCL> .

element:ReadSelfAction-multiplicity rdfs:comment "'The multiplicity of the result OutputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadSelfAction-multiplicity-_specification .

element:ReadSelfAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:ReadSelfAction-not_static rdfs:comment "'If the ReadSelfAction is contained in an Behavior that is acting as a method, then the Operation of the method must not be static."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadSelfAction-not_static-_specification .

element:ReadSelfAction-not_static-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let behavior: Behavior = self.containingBehavior() in\nbehavior.specification<>null implies not behavior.specification.isStatic"^^<http://www.omg.org/spec/OCL> .

element:ReadSelfAction-type rdfs:comment "'The type of the result OutputPin is the context Classifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadSelfAction-type-_specification .

element:ReadSelfAction-type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type = _'context'"^^<http://www.omg.org/spec/OCL> .

property:ReadSelfAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadSelfAction-result" ;
	rdfs:label "ReadSelfAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readSelfAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the context object is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadStructuralFeatureAction xmi:type uml:Class ;
	xmi:id "ReadStructuralFeatureAction" ;
	uml-model:name "ReadStructuralFeatureAction" ;
	rdfs:comment "'A ReadStructuralFeatureAction is a StructuralFeatureAction that retrieves the values of a StructuralFeature."@en ;
	uml-model:rule element:ReadStructuralFeatureAction-multiplicity, element:ReadStructuralFeatureAction-type_and_ordering ;
	rdfs:subClassOf element:StructuralFeatureAction ;
	uml-model:ownedAttribute property:ReadStructuralFeatureAction-result .

element:ReadStructuralFeatureAction-multiplicity rdfs:comment "'The multiplicity of the StructuralFeature must be compatible with the multiplicity of the result OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadStructuralFeatureAction-multiplicity-_specification .

element:ReadStructuralFeatureAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "structuralFeature.compatibleWith(result)"^^<http://www.omg.org/spec/OCL> .

element:ReadStructuralFeatureAction-type_and_ordering rdfs:comment "'The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadStructuralFeatureAction-type_and_ordering-_specification .

element:ReadStructuralFeatureAction-type_and_ordering-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type =structuralFeature.type and \nresult.isOrdered = structuralFeature.isOrdered"^^<http://www.omg.org/spec/OCL> .

property:ReadStructuralFeatureAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadStructuralFeatureAction-result" ;
	rdfs:label "ReadStructuralFeatureAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readStructuralFeatureAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the result values are placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReadVariableAction xmi:type uml:Class ;
	xmi:id "ReadVariableAction" ;
	uml-model:name "ReadVariableAction" ;
	rdfs:comment "'A ReadVariableAction is a VariableAction that retrieves the values of a Variable."@en ;
	uml-model:rule element:ReadVariableAction-type_and_ordering, element:ReadVariableAction-compatible_multiplicity ;
	rdfs:subClassOf element:VariableAction ;
	uml-model:ownedAttribute property:ReadVariableAction-result .

element:ReadVariableAction-type_and_ordering rdfs:comment "'The type and ordering of the result OutputPin are the same as the type and ordering of the variable."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadVariableAction-type_and_ordering-_specification .

element:ReadVariableAction-type_and_ordering-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type =variable.type and \nresult.isOrdered = variable.isOrdered"^^<http://www.omg.org/spec/OCL> .

element:ReadVariableAction-compatible_multiplicity rdfs:comment "'The multiplicity of the variable must be compatible with the multiplicity of the output pin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReadVariableAction-compatible_multiplicity-_specification .

element:ReadVariableAction-compatible_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "variable.compatibleWith(result)"^^<http://www.omg.org/spec/OCL> .

property:ReadVariableAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReadVariableAction-result" ;
	rdfs:label "ReadVariableAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_readVariableAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin on which the result values are placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReclassifyObjectAction xmi:type uml:Class ;
	xmi:id "ReclassifyObjectAction" ;
	uml-model:name "ReclassifyObjectAction" ;
	rdfs:comment "'A ReclassifyObjectAction is an Action that changes the Classifiers that classify an object."@en ;
	uml-model:rule element:ReclassifyObjectAction-input_pin, element:ReclassifyObjectAction-classifier_not_abstract, element:ReclassifyObjectAction-multiplicity ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReclassifyObjectAction-isReplaceAll, property:ReclassifyObjectAction-newClassifier, property:ReclassifyObjectAction-object, property:ReclassifyObjectAction-oldClassifier .

element:ReclassifyObjectAction-input_pin rdfs:comment "'The object InputPin has no type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReclassifyObjectAction-input_pin-_specification .

element:ReclassifyObjectAction-input_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type = null"^^<http://www.omg.org/spec/OCL> .

element:ReclassifyObjectAction-classifier_not_abstract rdfs:comment "'None of the newClassifiers may be abstract."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReclassifyObjectAction-classifier_not_abstract-_specification .

element:ReclassifyObjectAction-classifier_not_abstract-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not newClassifier->exists(isAbstract)"^^<http://www.omg.org/spec/OCL> .

element:ReclassifyObjectAction-multiplicity rdfs:comment "'The multiplicity of the object InputPin is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReclassifyObjectAction-multiplicity-_specification .

element:ReclassifyObjectAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

property:ReclassifyObjectAction-isReplaceAll rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ReclassifyObjectAction-isReplaceAll" ;
	rdfs:label "ReclassifyObjectAction-isReplaceAll" ;
	uml-model:name "isReplaceAll" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether existing Classifiers should be removed before adding the new Classifiers."@en ;
	xmi:defaultValue element:ReclassifyObjectAction-isReplaceAll-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReclassifyObjectAction-isReplaceAll-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ReclassifyObjectAction-isReplaceAll-_defaultValue" .

property:ReclassifyObjectAction-newClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReclassifyObjectAction-newClassifier" ;
	rdfs:label "ReclassifyObjectAction-newClassifier" ;
	uml-model:name "newClassifier" ;
	uml-model:association uml-element:A_newClassifier_reclassifyObjectAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'A set of Classifiers to be added to the Classifiers of the given object."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ReclassifyObjectAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReclassifyObjectAction-object" ;
	rdfs:label "ReclassifyObjectAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_reclassifyObjectAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that holds the object to be reclassified."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReclassifyObjectAction-oldClassifier rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReclassifyObjectAction-oldClassifier" ;
	rdfs:label "ReclassifyObjectAction-oldClassifier" ;
	uml-model:name "oldClassifier" ;
	uml-model:association uml-element:A_oldClassifier_reclassifyObjectAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'A set of Classifiers to be removed from the Classifiers of the given object."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:ReduceAction xmi:type uml:Class ;
	xmi:id "ReduceAction" ;
	uml-model:name "ReduceAction" ;
	rdfs:comment "'A ReduceAction is an Action that reduces a collection to a single value by repeatedly combining the elements of the collection using a reducer Behavior."@en ;
	uml-model:rule element:ReduceAction-reducer_inputs_output, element:ReduceAction-input_type_is_collection, element:ReduceAction-output_types_are_compatible ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReduceAction-collection, property:ReduceAction-isOrdered, property:ReduceAction-reducer, property:ReduceAction-result .

element:ReduceAction-reducer_inputs_output rdfs:comment "'The reducer Behavior must have two input ownedParameters and one output ownedParameter, where the type of the output Parameter and the type of elements of the input collection conform to the types of the input Parameters."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReduceAction-reducer_inputs_output-_specification .

element:ReduceAction-reducer_inputs_output-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let inputs: OrderedSet(Parameter) = reducer.inputParameters() in\nlet outputs: OrderedSet(Parameter) = reducer.outputParameters() in\ninputs->size()=2 and outputs->size()=1 and\ninputs.type->forAll(t | \n   outputs.type->forAll(conformsTo(t)) and \n   -- Note that the following only checks the case when the collection is via multiple tokens.\n   collection.upperBound()>1 implies collection.type.conformsTo(t))"^^<http://www.omg.org/spec/OCL> .

element:ReduceAction-input_type_is_collection rdfs:comment "'The type of the collection InputPin must be a collection."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReduceAction-input_type_is_collection-_specification .

element:ReduceAction-input_type_is_collection-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "\"" .

element:ReduceAction-output_types_are_compatible rdfs:comment "'The type of the output of the reducer Behavior must conform to the type of the result OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReduceAction-output_types_are_compatible-_specification .

element:ReduceAction-output_types_are_compatible-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "reducer.outputParameters().type->forAll(conformsTo(result.type))"^^<http://www.omg.org/spec/OCL> .

property:ReduceAction-collection rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReduceAction-collection" ;
	rdfs:label "ReduceAction-collection" ;
	uml-model:name "collection" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_collection_reduceAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that provides the collection to be reduced."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReduceAction-isOrdered rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "ReduceAction-isOrdered" ;
	rdfs:label "ReduceAction-isOrdered" ;
	uml-model:name "isOrdered" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Indicates whether the order of the input collection should determine the order in which the reducer Behavior is applied to its elements."@en ;
	xmi:defaultValue element:ReduceAction-isOrdered-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ReduceAction-isOrdered-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "ReduceAction-isOrdered-_defaultValue" .

property:ReduceAction-reducer rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReduceAction-reducer" ;
	rdfs:label "ReduceAction-reducer" ;
	uml-model:name "reducer" ;
	uml-model:association uml-element:A_reducer_reduceAction ;
	rdfs:range element:Behavior ;
	rdfs:comment "'A Behavior that is repreatedly applied to two elements of the input collection to produce a value that is of the same type as elements of the collection."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReduceAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReduceAction-result" ;
	rdfs:label "ReduceAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_reduceAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The output pin on which the result value is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:RemoveStructuralFeatureValueAction xmi:type uml:Class ;
	xmi:id "RemoveStructuralFeatureValueAction" ;
	uml-model:name "RemoveStructuralFeatureValueAction" ;
	rdfs:comment "'A RemoveStructuralFeatureValueAction is a WriteStructuralFeatureAction that removes values from a StructuralFeature."@en ;
	uml-model:rule element:RemoveStructuralFeatureValueAction-removeAt_and_value ;
	rdfs:subClassOf element:WriteStructuralFeatureAction ;
	uml-model:ownedAttribute property:RemoveStructuralFeatureValueAction-isRemoveDuplicates, property:RemoveStructuralFeatureValueAction-removeAt .

element:RemoveStructuralFeatureValueAction-removeAt_and_value rdfs:comment "'RemoveStructuralFeatureValueActions removing a value from ordered, non-unique StructuralFeatures must have a single removeAt InputPin and no value InputPin, if isRemoveDuplicates is false. The removeAt InputPin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the Action has a value InputPin and no removeAt InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RemoveStructuralFeatureValueAction-removeAt_and_value-_specification .

element:RemoveStructuralFeatureValueAction-removeAt_and_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if structuralFeature.isOrdered and not structuralFeature.isUnique and  not isRemoveDuplicates then\n  value = null and\n  removeAt <> null and\n  removeAt.type = UnlimitedNatural and\n  removeAt.is(1,1)\nelse\n  removeAt = null and value <> null\nendif"^^<http://www.omg.org/spec/OCL> .

property:RemoveStructuralFeatureValueAction-isRemoveDuplicates rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "RemoveStructuralFeatureValueAction-isRemoveDuplicates" ;
	rdfs:label "RemoveStructuralFeatureValueAction-isRemoveDuplicates" ;
	uml-model:name "isRemoveDuplicates" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether to remove duplicates of the value in nonunique StructuralFeatures."@en ;
	xmi:defaultValue element:RemoveStructuralFeatureValueAction-isRemoveDuplicates-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:RemoveStructuralFeatureValueAction-isRemoveDuplicates-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "RemoveStructuralFeatureValueAction-isRemoveDuplicates-_defaultValue" .

property:RemoveStructuralFeatureValueAction-removeAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RemoveStructuralFeatureValueAction-removeAt" ;
	rdfs:label "RemoveStructuralFeatureValueAction-removeAt" ;
	uml-model:name "removeAt" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_removeAt_removeStructuralFeatureValueAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'An InputPin that provides the position of an existing value to remove in ordered, nonunique structural features. The type of the removeAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:RemoveVariableValueAction xmi:type uml:Class ;
	xmi:id "RemoveVariableValueAction" ;
	uml-model:name "RemoveVariableValueAction" ;
	rdfs:comment "'A RemoveVariableValueAction is a WriteVariableAction that removes values from a Variables."@en ;
	uml-model:rule element:RemoveVariableValueAction-removeAt_and_value ;
	rdfs:subClassOf element:WriteVariableAction ;
	uml-model:ownedAttribute property:RemoveVariableValueAction-isRemoveDuplicates, property:RemoveVariableValueAction-removeAt .

element:RemoveVariableValueAction-removeAt_and_value rdfs:comment "'ReadVariableActions removing a value from ordered, non-unique Variables must have a single removeAt InputPin and no value InputPin, if isRemoveDuplicates is false. The removeAt InputPin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the Action has a value InputPin and no removeAt InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:RemoveVariableValueAction-removeAt_and_value-_specification .

element:RemoveVariableValueAction-removeAt_and_value-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "if  variable.isOrdered and not variable.isUnique and not isRemoveDuplicates then \n  value = null and\n  removeAt <> null and\n  removeAt.type = UnlimitedNatural and\n  removeAt.is(1,1)\nelse\n  removeAt = null and value <> null\nendif"^^<http://www.omg.org/spec/OCL> .

property:RemoveVariableValueAction-isRemoveDuplicates rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "RemoveVariableValueAction-isRemoveDuplicates" ;
	rdfs:label "RemoveVariableValueAction-isRemoveDuplicates" ;
	uml-model:name "isRemoveDuplicates" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'Specifies whether to remove duplicates of the value in nonunique Variables."@en ;
	xmi:defaultValue element:RemoveVariableValueAction-isRemoveDuplicates-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:RemoveVariableValueAction-isRemoveDuplicates-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "RemoveVariableValueAction-isRemoveDuplicates-_defaultValue" .

property:RemoveVariableValueAction-removeAt rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "RemoveVariableValueAction-removeAt" ;
	rdfs:label "RemoveVariableValueAction-removeAt" ;
	uml-model:name "removeAt" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_removeAt_removeVariableValueAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'An InputPin that provides the position of an existing value to remove in ordered, nonunique Variables. The type of the removeAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

element:ReplyAction xmi:type uml:Class ;
	xmi:id "ReplyAction" ;
	uml-model:name "ReplyAction" ;
	rdfs:comment "'A ReplyAction is an Action that accepts a set of reply values and a value containing return information produced by a previous AcceptCallAction. The ReplyAction returns the values to the caller of the previous call, completing execution of the call."@en ;
	uml-model:rule element:ReplyAction-pins_match_parameter, element:ReplyAction-event_on_reply_to_call_trigger ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:ReplyAction-replyToCall, property:ReplyAction-replyValue, property:ReplyAction-returnInformation .

element:ReplyAction-pins_match_parameter rdfs:comment "'The replyValue InputPins must match the output (return, out, and inout) parameters of the operation of the event of the replyToCall Trigger in number, type, ordering, and multiplicity."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReplyAction-pins_match_parameter-_specification .

element:ReplyAction-pins_match_parameter-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let parameter:OrderedSet(Parameter) = replyToCall.event.oclAsType(CallEvent).operation.outputParameters() in\nreplyValue->size()=parameter->size() and\nSequence{1..replyValue->size()}->forAll(i |\n   replyValue->at(i).type.conformsTo(parameter->at(i).type) and\n   replyValue->at(i).isOrdered=parameter->at(i).isOrdered and\n   replyValue->at(i).compatibleWith(parameter->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:ReplyAction-event_on_reply_to_call_trigger rdfs:comment "'The event of the replyToCall Trigger must be a CallEvent."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ReplyAction-event_on_reply_to_call_trigger-_specification .

element:ReplyAction-event_on_reply_to_call_trigger-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "replyToCall.event.oclIsKindOf(CallEvent)"^^<http://www.omg.org/spec/OCL> .

property:ReplyAction-replyToCall rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReplyAction-replyToCall" ;
	rdfs:label "ReplyAction-replyToCall" ;
	uml-model:name "replyToCall" ;
	uml-model:association uml-element:A_replyToCall_replyAction ;
	rdfs:range element:Trigger ;
	rdfs:comment "'The Trigger specifying the Operation whose call is being replied to."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:ReplyAction-replyValue rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReplyAction-replyValue" ;
	rdfs:label "ReplyAction-replyValue" ;
	uml-model:name "replyValue" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_replyValue_replyAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'A list of InputPins providing the values for the output (inout, out, and return) Parameters of the Operation. These values are returned to the caller."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:ReplyAction-returnInformation rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ReplyAction-returnInformation" ;
	rdfs:label "ReplyAction-returnInformation" ;
	uml-model:name "returnInformation" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_returnInformation_replyAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'An InputPin that holds the return information value produced by an earlier AcceptCallAction."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:SendObjectAction xmi:type uml:Class ;
	xmi:id "SendObjectAction" ;
	uml-model:name "SendObjectAction" ;
	rdfs:comment "'A SendObjectAction is an InvocationAction that transmits an input object to the target object, which is handled as a request message by the target object. The requestor continues execution immediately after the object is sent out and cannot receive reply values."@en ;
	uml-model:rule element:SendObjectAction-type_target_pin ;
	rdfs:subClassOf element:InvocationAction ;
	uml-model:ownedAttribute property:SendObjectAction-request, property:SendObjectAction-target .

element:SendObjectAction-type_target_pin rdfs:comment "'If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:SendObjectAction-type_target_pin-_specification .

element:SendObjectAction-type_target_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "onPort<>null implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort)"^^<http://www.omg.org/spec/OCL> .

property:SendObjectAction-request rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SendObjectAction-request" ;
	rdfs:label "SendObjectAction-request" ;
	uml-model:name "request" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_request_sendObjectAction ;
	rdfs:range element:InputPin ;
	rdfs:comment "'The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:SendObjectAction-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SendObjectAction-target" ;
	rdfs:label "SendObjectAction-target" ;
	uml-model:name "target" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_target_sendObjectAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The target object to which the object is sent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:SendSignalAction xmi:type uml:Class ;
	xmi:id "SendSignalAction" ;
	uml-model:name "SendSignalAction" ;
	rdfs:comment "'A SendSignalAction is an InvocationAction that creates a Signal instance and transmits it to the target object. Values from the argument InputPins are used to provide values for the attributes of the Signal. The requestor continues execution immediately after the Signal instance is sent out and cannot receive reply values."@en ;
	uml-model:rule element:SendSignalAction-type_ordering_multiplicity, element:SendSignalAction-number_order, element:SendSignalAction-type_target_pin ;
	rdfs:subClassOf element:InvocationAction ;
	uml-model:ownedAttribute property:SendSignalAction-signal, property:SendSignalAction-target .

element:SendSignalAction-type_ordering_multiplicity rdfs:comment "'The type, ordering, and multiplicity of an argument InputPin must be the same as the corresponding attribute of the signal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:SendSignalAction-type_ordering_multiplicity-_specification .

element:SendSignalAction-type_ordering_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let attribute: OrderedSet(Property) = signal.allAttributes() in\nSequence{1..argument->size()}->forAll(i | \n   argument->at(i).type.conformsTo(attribute->at(i).type) and \n   argument->at(i).isOrdered = attribute->at(i).isOrdered and\n   argument->at(i).compatibleWith(attribute->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:SendSignalAction-number_order rdfs:comment "'The number and order of argument InputPins must be the same as the number and order of attributes of the signal."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:SendSignalAction-number_order-_specification .

element:SendSignalAction-number_order-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "argument->size()=signal.allAttributes()->size()"^^<http://www.omg.org/spec/OCL> .

element:SendSignalAction-type_target_pin rdfs:comment "'If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:SendSignalAction-type_target_pin-_specification .

element:SendSignalAction-type_target_pin-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort)"^^<http://www.omg.org/spec/OCL> .

property:SendSignalAction-signal rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SendSignalAction-signal" ;
	rdfs:label "SendSignalAction-signal" ;
	uml-model:name "signal" ;
	uml-model:association uml-element:A_signal_sendSignalAction ;
	rdfs:range element:Signal ;
	rdfs:comment "'The Signal whose instance is transmitted to the target."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:SendSignalAction-target rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SendSignalAction-target" ;
	rdfs:label "SendSignalAction-target" ;
	uml-model:name "target" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_target_sendSignalAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that provides the target object to which the Signal instance is sent."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:SequenceNode xmi:type uml:Class ;
	xmi:id "SequenceNode" ;
	uml-model:name "SequenceNode" ;
	rdfs:comment "'A SequenceNode is a StructuredActivityNode that executes a sequence of ExecutableNodes in order."@en ;
	rdfs:subClassOf element:StructuredActivityNode ;
	uml-model:ownedAttribute property:SequenceNode-executableNode .

property:SequenceNode-executableNode rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "SequenceNode-executableNode" ;
	rdfs:label "SequenceNode-executableNode" ;
	uml-model:name "executableNode" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_executableNode_sequenceNode ;
	rdfs:range element:ExecutableNode ;
	rdfs:comment "'The ordered set of ExecutableNodes to be sequenced."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StartClassifierBehaviorAction xmi:type uml:Class ;
	xmi:id "StartClassifierBehaviorAction" ;
	uml-model:name "StartClassifierBehaviorAction" ;
	rdfs:comment "'A StartClassifierBehaviorAction is an Action that starts the classifierBehavior of the input object."@en ;
	uml-model:rule element:StartClassifierBehaviorAction-multiplicity, element:StartClassifierBehaviorAction-type_has_classifier ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:StartClassifierBehaviorAction-object .

element:StartClassifierBehaviorAction-multiplicity rdfs:comment "'The multiplicity of the object InputPin is 1..1"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StartClassifierBehaviorAction-multiplicity-_specification .

element:StartClassifierBehaviorAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:StartClassifierBehaviorAction-type_has_classifier rdfs:comment "'If the InputPin has a type, then the type or one of its ancestors must have a classifierBehavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StartClassifierBehaviorAction-type_has_classifier-_specification .

element:StartClassifierBehaviorAction-type_has_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type->notEmpty() implies \n   (object.type.oclIsKindOf(BehavioredClassifier) and object.type.oclAsType(BehavioredClassifier).classifierBehavior<>null)"^^<http://www.omg.org/spec/OCL> .

property:StartClassifierBehaviorAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StartClassifierBehaviorAction-object" ;
	rdfs:label "StartClassifierBehaviorAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_startClassifierBehaviorAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that holds the object whose classifierBehavior is to be started."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:StartObjectBehaviorAction xmi:type uml:Class ;
	xmi:id "StartObjectBehaviorAction" ;
	uml-model:name "StartObjectBehaviorAction" ;
	rdfs:comment "'A StartObjectBehaviorAction is an InvocationAction that starts the execution either of a directly instantiated Behavior or of the classifierBehavior of an object. Argument values may be supplied for the input Parameters of the Behavior. If the Behavior is invoked synchronously, then output values may be obtained for output Parameters."@en ;
	uml-model:rule element:StartObjectBehaviorAction-multiplicity_of_object, element:StartObjectBehaviorAction-type_of_object, element:StartObjectBehaviorAction-no_onport ;
	rdfs:subClassOf element:CallAction ;
	uml-model:ownedAttribute property:StartObjectBehaviorAction-object ;
	uml-model:operation element:StartObjectBehaviorAction-outputParameters, element:StartObjectBehaviorAction-inputParameters, element:StartObjectBehaviorAction-behavior .

element:StartObjectBehaviorAction-multiplicity_of_object rdfs:comment "'The multiplicity of the object InputPin must be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-multiplicity_of_object-_specification .

element:StartObjectBehaviorAction-multiplicity_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:StartObjectBehaviorAction-type_of_object rdfs:comment "'The type of the object InputPin must be either a Behavior or a BehavioredClassifier with a classifierBehavior."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-type_of_object-_specification .

element:StartObjectBehaviorAction-type_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "self.behavior()<>null"^^<http://www.omg.org/spec/OCL> .

element:StartObjectBehaviorAction-no_onport rdfs:comment "'A StartObjectBehaviorAction may not specify onPort."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-no_onport-_specification .

element:StartObjectBehaviorAction-no_onport-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "onPort->isEmpty()"^^<http://www.omg.org/spec/OCL> .

property:StartObjectBehaviorAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StartObjectBehaviorAction-object" ;
	rdfs:label "StartObjectBehaviorAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_startObjectBehaviorAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'An InputPin that holds the object that is either a Behavior to be started or has a classifierBehavior to be started."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:StartObjectBehaviorAction-outputParameters uml-model:redefines element:CallAction-outputParameters ;
	rdfs:comment "'Return the inout, out and return ownedParameters of the Behavior being called."@en ;
	uml-model:rule element:StartObjectBehaviorAction-outputParameters-spec ;
	uml-model:returns element:StartObjectBehaviorAction-outputParameters-result .

element:StartObjectBehaviorAction-outputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-outputParameters-spec-_specification .

element:StartObjectBehaviorAction-outputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.behavior().outputParameters())"^^<http://www.omg.org/spec/OCL> .

element:StartObjectBehaviorAction-outputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:StartObjectBehaviorAction-outputParameters-result-_upperValue .

element:StartObjectBehaviorAction-outputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StartObjectBehaviorAction-inputParameters uml-model:redefines element:CallAction-inputParameters ;
	rdfs:comment "'Return the in and inout ownedParameters of the Behavior being called."@en ;
	uml-model:rule element:StartObjectBehaviorAction-inputParameters-spec ;
	uml-model:returns element:StartObjectBehaviorAction-inputParameters-result .

element:StartObjectBehaviorAction-inputParameters-spec rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-inputParameters-spec-_specification .

element:StartObjectBehaviorAction-inputParameters-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.behavior().inputParameters())"^^<http://www.omg.org/spec/OCL> .

element:StartObjectBehaviorAction-inputParameters-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Parameter ;
	uml-model:upperValue element:StartObjectBehaviorAction-inputParameters-result-_upperValue .

element:StartObjectBehaviorAction-inputParameters-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StartObjectBehaviorAction-behavior rdfs:comment "'If the type of the object InputPin is a Behavior, then that Behavior. Otherwise, if the type of the object InputPin is a BehavioredClassifier, then the classifierBehavior of that BehavioredClassifier."@en ;
	uml-model:rule element:StartObjectBehaviorAction-behavior-spec ;
	uml-model:returns element:StartObjectBehaviorAction-behavior-result .

element:StartObjectBehaviorAction-behavior-spec rdf:type uml:Constraint ;
	uml-model:specification element:StartObjectBehaviorAction-behavior-spec-_specification .

element:StartObjectBehaviorAction-behavior-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (if object.type.oclIsKindOf(Behavior) then\n  object.type.oclAsType(Behavior)\nelse if object.type.oclIsKindOf(BehavioredClassifier) then\n  object.type.oclAsType(BehavioredClassifier).classifierBehavior\nelse\n  null\nendif\nendif)"^^<http://www.omg.org/spec/OCL> .

element:StartObjectBehaviorAction-behavior-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Behavior .

element:StructuralFeatureAction xmi:type uml:Class ;
	xmi:id "StructuralFeatureAction" ;
	uml-model:name "StructuralFeatureAction" ;
	rdfs:comment "'StructuralFeatureAction is an abstract class for all Actions that operate on StructuralFeatures."@en ;
	uml-model:rule element:StructuralFeatureAction-multiplicity, element:StructuralFeatureAction-object_type, element:StructuralFeatureAction-visibility, element:StructuralFeatureAction-not_static, element:StructuralFeatureAction-one_featuring_classifier ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:StructuralFeatureAction-object, property:StructuralFeatureAction-structuralFeature .

element:StructuralFeatureAction-multiplicity rdfs:comment "'The multiplicity of the object InputPin must be 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuralFeatureAction-multiplicity-_specification .

element:StructuralFeatureAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:StructuralFeatureAction-object_type rdfs:comment "'The structuralFeature must either be an owned or inherited feature of the type of the object InputPin, or it must be an owned end of a binary Association whose opposite end had as a type to which the type of the object InputPin conforms."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuralFeatureAction-object_type-_specification .

element:StructuralFeatureAction-object_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type.oclAsType(Classifier).allFeatures()->includes(structuralFeature) or\n   object.type.conformsTo(structuralFeature.oclAsType(Property).opposite.type)"^^<http://www.omg.org/spec/OCL> .

element:StructuralFeatureAction-visibility rdfs:comment "'The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuralFeatureAction-visibility-_specification .

element:StructuralFeatureAction-visibility-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "structuralFeature.visibility = VisibilityKind::public or\n_'context'.allFeatures()->includes(structuralFeature) or\nstructuralFeature.visibility=VisibilityKind::protected and\n_'context'.conformsTo(structuralFeature.oclAsType(Property).opposite.type.oclAsType(Classifier))"^^<http://www.omg.org/spec/OCL> .

element:StructuralFeatureAction-not_static rdfs:comment "'The structuralFeature must not be static."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuralFeatureAction-not_static-_specification .

element:StructuralFeatureAction-not_static-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "not structuralFeature.isStatic"^^<http://www.omg.org/spec/OCL> .

element:StructuralFeatureAction-one_featuring_classifier rdfs:comment "'The structuralFeature must have exactly one featuringClassifier."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuralFeatureAction-one_featuring_classifier-_specification .

element:StructuralFeatureAction-one_featuring_classifier-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "structuralFeature.featuringClassifier->size() = 1"^^<http://www.omg.org/spec/OCL> .

property:StructuralFeatureAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuralFeatureAction-object" ;
	rdfs:label "StructuralFeatureAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_structuralFeatureAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin from which the object whose StructuralFeature is to be read or written is obtained."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:StructuralFeatureAction-structuralFeature rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuralFeatureAction-structuralFeature" ;
	rdfs:label "StructuralFeatureAction-structuralFeature" ;
	uml-model:name "structuralFeature" ;
	uml-model:association uml-element:A_structuralFeature_structuralFeatureAction ;
	rdfs:range element:StructuralFeature ;
	rdfs:comment "'The StructuralFeature to be read or written."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:StructuredActivityNode xmi:type uml:Class ;
	xmi:id "StructuredActivityNode" ;
	uml-model:name "StructuredActivityNode" ;
	rdfs:comment "'A StructuredActivityNode is an Action that is also an ActivityGroup and whose behavior is specified by the ActivityNodes and ActivityEdges it so contains. Unlike other kinds of ActivityGroup, a StructuredActivityNode owns the ActivityNodes and ActivityEdges it contains, and so a node or edge can only be directly contained in one StructuredActivityNode, though StructuredActivityNodes may be nested."@en ;
	uml-model:rule element:StructuredActivityNode-output_pin_edges, element:StructuredActivityNode-edges, element:StructuredActivityNode-input_pin_edges ;
	rdfs:subClassOf element:Namespace, element:ActivityGroup, element:Action ;
	uml-model:ownedAttribute property:StructuredActivityNode-activity, property:StructuredActivityNode-edge, property:StructuredActivityNode-mustIsolate, property:StructuredActivityNode-node, property:StructuredActivityNode-structuredNodeInput, property:StructuredActivityNode-structuredNodeOutput, property:StructuredActivityNode-variable ;
	uml-model:operation element:StructuredActivityNode-allActions, element:StructuredActivityNode-allOwnedNodes, element:StructuredActivityNode-sourceNodes, element:StructuredActivityNode-targetNodes, element:StructuredActivityNode-containingActivity .

element:StructuredActivityNode-output_pin_edges rdfs:comment "'The outgoing ActivityEdges of the OutputPins of a StructuredActivityNode must have targets that are not within the StructuredActivityNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-output_pin_edges-_specification .

element:StructuredActivityNode-output_pin_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "output.outgoing.target->excludesAll(allOwnedNodes()-input)"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-edges rdfs:comment "'The edges of a StructuredActivityNode are all the ActivityEdges with source and target ActivityNodes contained directly or indirectly within the StructuredActivityNode and at least one of the source or target not contained in any more deeply nested StructuredActivityNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-edges-_specification .

element:StructuredActivityNode-edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "edge=self.sourceNodes().outgoing->intersection(self.allOwnedNodes().incoming)->\n   union(self.targetNodes().incoming->intersection(self.allOwnedNodes().outgoing))->asSet()"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-input_pin_edges rdfs:comment "'The incoming ActivityEdges of an InputPin of a StructuredActivityNode must have sources that are not within the StructuredActivityNode."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-input_pin_edges-_specification .

element:StructuredActivityNode-input_pin_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "input.incoming.source->excludesAll(allOwnedNodes()-output)"^^<http://www.omg.org/spec/OCL> .

property:StructuredActivityNode-activity rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-activity" ;
	rdfs:label "StructuredActivityNode-activity" ;
	uml-model:name "activity" ;
	uml-model:association uml-element:A_structuredNode_activity ;
	rdfs:range element:Activity ;
	rdfs:comment "'The Activity immediately containing the StructuredActivityNode, if it is not contained in another StructuredActivityNode."@en ;
	uml-model:multiplicity "0..1"^^uml-model-dt:multiplicityRange .

property:StructuredActivityNode-edge rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-edge" ;
	rdfs:label "StructuredActivityNode-edge" ;
	uml-model:name "edge" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_edge_inStructuredNode ;
	rdfs:range element:ActivityEdge ;
	uml-model:subsettedProperty uml-element:ActivityGroup-containedEdge, uml-element:Element-ownedElement ;
	rdfs:comment "'The ActivityEdges immediately contained in the StructuredActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredActivityNode-mustIsolate rdf:type owl:DatatypeProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-mustIsolate" ;
	rdfs:label "StructuredActivityNode-mustIsolate" ;
	uml-model:name "mustIsolate" ;
	rdfs:range uml-primitives:Boolean ;
	rdfs:comment "'If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Actions that would result in accessing such objects are required to have their execution deferred until the completion of the StructuredActivityNode.&#xD;&#xA;"@en ;
	xmi:defaultValue element:StructuredActivityNode-mustIsolate-_defaultValue ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:StructuredActivityNode-mustIsolate-_defaultValue xmi:type uml:LiteralBoolean ;
	xmi:id "StructuredActivityNode-mustIsolate-_defaultValue" .

property:StructuredActivityNode-node rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-node" ;
	rdfs:label "StructuredActivityNode-node" ;
	uml-model:name "node" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_node_inStructuredNode ;
	rdfs:range element:ActivityNode ;
	uml-model:subsettedProperty uml-element:ActivityGroup-containedNode, uml-element:Element-ownedElement ;
	rdfs:comment "'The ActivityNodes immediately contained in the StructuredActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredActivityNode-structuredNodeInput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-structuredNodeInput" ;
	rdfs:label "StructuredActivityNode-structuredNodeInput" ;
	uml-model:name "structuredNodeInput" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_structuredNodeInput_structuredActivityNode ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPins owned by the StructuredActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredActivityNode-structuredNodeOutput rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-structuredNodeOutput" ;
	rdfs:label "StructuredActivityNode-structuredNodeOutput" ;
	uml-model:name "structuredNodeOutput" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_structuredNodeOutput_structuredActivityNode ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPins owned by the StructuredActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

property:StructuredActivityNode-variable rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "StructuredActivityNode-variable" ;
	rdfs:label "StructuredActivityNode-variable" ;
	uml-model:name "variable" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_variable_scope ;
	rdfs:range element:Variable ;
	uml-model:subsettedProperty uml-element:Namespace-ownedMember ;
	rdfs:comment "'The Variables defined in the scope of the StructuredActivityNode."@en ;
	uml-model:multiplicity "0..*"^^uml-model-dt:multiplicityRange .

element:StructuredActivityNode-allActions uml-model:redefines element:Action-allActions ;
	rdfs:comment "'Returns this StructuredActivityNode and all Actions contained in it."@en ;
	uml-model:rule element:StructuredActivityNode-allActions-spec ;
	uml-model:returns element:StructuredActivityNode-allActions-result .

element:StructuredActivityNode-allActions-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-allActions-spec-_specification .

element:StructuredActivityNode-allActions-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (node->select(oclIsKindOf(Action)).oclAsType(Action).allActions()->including(self)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-allActions-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Action ;
	uml-model:upperValue element:StructuredActivityNode-allActions-result-_upperValue .

element:StructuredActivityNode-allActions-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredActivityNode-allOwnedNodes uml-model:redefines element:Action-allOwnedNodes ;
	rdfs:comment "'Returns all the ActivityNodes contained directly or indirectly within this StructuredActivityNode, in addition to the Pins of the StructuredActivityNode."@en ;
	uml-model:rule element:StructuredActivityNode-allOwnedNodes-spec ;
	uml-model:returns element:StructuredActivityNode-allOwnedNodes-result .

element:StructuredActivityNode-allOwnedNodes-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-allOwnedNodes-spec-_specification .

element:StructuredActivityNode-allOwnedNodes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.Action::allOwnedNodes()->union(node)->union(node->select(oclIsKindOf(Action)).oclAsType(Action).allOwnedNodes())->asSet())"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-allOwnedNodes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ActivityNode ;
	uml-model:upperValue element:StructuredActivityNode-allOwnedNodes-result-_upperValue .

element:StructuredActivityNode-allOwnedNodes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredActivityNode-sourceNodes rdfs:comment "'Return those ActivityNodes contained immediately within the StructuredActivityNode that may act as sources of edges owned by the StructuredActivityNode."@en ;
	uml-model:rule element:StructuredActivityNode-sourceNodes-spec ;
	uml-model:returns element:StructuredActivityNode-sourceNodes-result .

element:StructuredActivityNode-sourceNodes-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-sourceNodes-spec-_specification .

element:StructuredActivityNode-sourceNodes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (node->union(input.oclAsType(ActivityNode)->asSet())->\n  union(node->select(oclIsKindOf(Action)).oclAsType(Action).output)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-sourceNodes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ActivityNode ;
	uml-model:upperValue element:StructuredActivityNode-sourceNodes-result-_upperValue .

element:StructuredActivityNode-sourceNodes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredActivityNode-targetNodes rdfs:comment "'Return those ActivityNodes contained immediately within the StructuredActivityNode that may act as targets of edges owned by the StructuredActivityNode."@en ;
	uml-model:rule element:StructuredActivityNode-targetNodes-spec ;
	uml-model:returns element:StructuredActivityNode-targetNodes-result .

element:StructuredActivityNode-targetNodes-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-targetNodes-spec-_specification .

element:StructuredActivityNode-targetNodes-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (node->union(output.oclAsType(ActivityNode)->asSet())->\n  union(node->select(oclIsKindOf(Action)).oclAsType(Action).input)->asSet())"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-targetNodes-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:ActivityNode ;
	uml-model:upperValue element:StructuredActivityNode-targetNodes-result-_upperValue .

element:StructuredActivityNode-targetNodes-result-_upperValue rdf:type uml:LiteralUnlimitedNatural .

element:StructuredActivityNode-containingActivity uml-model:redefines element:ActivityGroup-containingActivity, element:ActivityNode-containingActivity ;
	rdfs:comment "'The Activity that directly or indirectly contains this StructuredActivityNode (considered as an Action)."@en ;
	uml-model:rule element:StructuredActivityNode-containingActivity-spec ;
	uml-model:returns element:StructuredActivityNode-containingActivity-result .

element:StructuredActivityNode-containingActivity-spec rdf:type uml:Constraint ;
	uml-model:specification element:StructuredActivityNode-containingActivity-spec-_specification .

element:StructuredActivityNode-containingActivity-spec-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result = (self.Action::containingActivity())"^^<http://www.omg.org/spec/OCL> .

element:StructuredActivityNode-containingActivity-result rdf:type uml:Parameter ;
	uml-model:name "result" ;
	uml-model:parameterType element:Activity .

element:TestIdentityAction xmi:type uml:Class ;
	xmi:id "TestIdentityAction" ;
	uml-model:name "TestIdentityAction" ;
	rdfs:comment "'A TestIdentityAction is an Action that tests if two values are identical objects."@en ;
	uml-model:rule element:TestIdentityAction-multiplicity, element:TestIdentityAction-no_type, element:TestIdentityAction-result_is_boolean ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:TestIdentityAction-first, property:TestIdentityAction-result, property:TestIdentityAction-second .

element:TestIdentityAction-multiplicity rdfs:comment "'The multiplicity of the InputPins is 1..1."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TestIdentityAction-multiplicity-_specification .

element:TestIdentityAction-multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "first.is(1,1) and second.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:TestIdentityAction-no_type rdfs:comment "'The InputPins have no type."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TestIdentityAction-no_type-_specification .

element:TestIdentityAction-no_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "first.type= null and second.type = null"^^<http://www.omg.org/spec/OCL> .

element:TestIdentityAction-result_is_boolean rdfs:comment "'The type of the result OutputPin is Boolean. "@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:TestIdentityAction-result_is_boolean-_specification .

element:TestIdentityAction-result_is_boolean-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "result.type=Boolean"^^<http://www.omg.org/spec/OCL> .

property:TestIdentityAction-first rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TestIdentityAction-first" ;
	rdfs:label "TestIdentityAction-first" ;
	uml-model:name "first" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_first_testIdentityAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin on which the first input object is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TestIdentityAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TestIdentityAction-result" ;
	rdfs:label "TestIdentityAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_testIdentityAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPin whose Boolean value indicates whether the two input objects are identical."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:TestIdentityAction-second rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "TestIdentityAction-second" ;
	rdfs:label "TestIdentityAction-second" ;
	uml-model:name "second" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_second_testIdentityAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The OutputPin on which the second input object is placed."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:UnmarshallAction xmi:type uml:Class ;
	xmi:id "UnmarshallAction" ;
	uml-model:name "UnmarshallAction" ;
	rdfs:comment "'An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins. "@en ;
	uml-model:rule element:UnmarshallAction-structural_feature, element:UnmarshallAction-number_of_result, element:UnmarshallAction-type_ordering_and_multiplicity, element:UnmarshallAction-multiplicity_of_object, element:UnmarshallAction-object_type ;
	rdfs:subClassOf element:Action ;
	uml-model:ownedAttribute property:UnmarshallAction-object, property:UnmarshallAction-result, property:UnmarshallAction-unmarshallType .

element:UnmarshallAction-structural_feature rdfs:comment "'The unmarshallType must have at least one StructuralFeature."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UnmarshallAction-structural_feature-_specification .

element:UnmarshallAction-structural_feature-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "unmarshallType.allAttributes()->size() >= 1"^^<http://www.omg.org/spec/OCL> .

element:UnmarshallAction-number_of_result rdfs:comment "'The number of result outputPins must be the same as the number of attributes of the unmarshallType."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UnmarshallAction-number_of_result-_specification .

element:UnmarshallAction-number_of_result-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "unmarshallType.allAttributes()->size() = result->size()"^^<http://www.omg.org/spec/OCL> .

element:UnmarshallAction-type_ordering_and_multiplicity rdfs:comment "'The type, ordering and multiplicity of each attribute of the unmarshallType must be compatible with the type, ordering and multiplicity of the corresponding result OutputPin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UnmarshallAction-type_ordering_and_multiplicity-_specification .

element:UnmarshallAction-type_ordering_and_multiplicity-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "let attribute:OrderedSet(Property) = unmarshallType.allAttributes() in\nSequence{1..result->size()}->forAll(i | \n   attribute->at(i).type.conformsTo(result->at(i).type) and\n   attribute->at(i).isOrdered=result->at(i).isOrdered and\n   attribute->at(i).compatibleWith(result->at(i)))"^^<http://www.omg.org/spec/OCL> .

element:UnmarshallAction-multiplicity_of_object rdfs:comment "'The multiplicity of the object InputPin is 1..1"@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UnmarshallAction-multiplicity_of_object-_specification .

element:UnmarshallAction-multiplicity_of_object-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.is(1,1)"^^<http://www.omg.org/spec/OCL> .

element:UnmarshallAction-object_type rdfs:comment "'The type of the object InputPin conform to the unmarshallType."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:UnmarshallAction-object_type-_specification .

element:UnmarshallAction-object_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "object.type.conformsTo(unmarshallType)"^^<http://www.omg.org/spec/OCL> .

property:UnmarshallAction-object rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UnmarshallAction-object" ;
	rdfs:label "UnmarshallAction-object" ;
	uml-model:name "object" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_object_unmarshallAction ;
	rdfs:range element:InputPin ;
	uml-model:subsettedProperty uml-element:Action-input ;
	rdfs:comment "'The InputPin that gives the object to be unmarshalled."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

property:UnmarshallAction-result rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UnmarshallAction-result" ;
	rdfs:label "UnmarshallAction-result" ;
	uml-model:name "result" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:ordered "true"^^xsd:boolean ;
	uml-model:association uml-element:A_result_unmarshallAction ;
	rdfs:range element:OutputPin ;
	uml-model:subsettedProperty uml-element:Action-output ;
	rdfs:comment "'The OutputPins on which are placed the values of the StructuralFeatures of the input object."@en ;
	uml-model:multiplicity "1..*"^^uml-model-dt:multiplicityRange .

property:UnmarshallAction-unmarshallType rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "UnmarshallAction-unmarshallType" ;
	rdfs:label "UnmarshallAction-unmarshallType" ;
	uml-model:name "unmarshallType" ;
	uml-model:association uml-element:A_unmarshallType_unmarshallAction ;
	rdfs:range element:Classifier ;
	rdfs:comment "'The type of the object to be unmarshalled."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:ValuePin xmi:type uml:Class ;
	xmi:id "ValuePin" ;
	uml-model:name "ValuePin" ;
	rdfs:comment "'A ValuePin is an InputPin that provides a value by evaluating a ValueSpecification."@en ;
	uml-model:rule element:ValuePin-no_incoming_edges, element:ValuePin-compatible_type ;
	rdfs:subClassOf element:InputPin ;
	uml-model:ownedAttribute property:ValuePin-value .

element:ValuePin-no_incoming_edges rdfs:comment "'A ValuePin may have no incoming ActivityEdges."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ValuePin-no_incoming_edges-_specification .

element:ValuePin-no_incoming_edges-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "incoming->isEmpty()"^^<http://www.omg.org/spec/OCL> .

element:ValuePin-compatible_type rdfs:comment "'The type of the value ValueSpecification must conform to the type of the ValuePin."@en ;
	rdf:type uml:Constraint ;
	uml-model:specification element:ValuePin-compatible_type-_specification .

element:ValuePin-compatible_type-_specification rdf:type uml:OpaqueExpression ;
	uml-model:body "value.type.conformsTo(type)"^^<http://www.omg.org/spec/OCL> .

property:ValuePin-value rdf:type owl:ObjectProperty ;
	xmi:type uml:Property ;
	xmi:id "ValuePin-value" ;
	rdfs:label "ValuePin-value" ;
	uml-model:name "value" ;
	uml-model:compositeAggregation "true"^^xsd:boolean ;
	uml-model:association uml-element:A_value_valuePin ;
	rdfs:range element:ValueSpecification ;
	uml-model:subsettedProperty uml-element:Element-ownedElement ;
	rdfs:comment "'The ValueSpecification that is evaluated to obtain the value that the ValuePin will provide."@en ;
	uml-model:multiplicity "1..1"^^uml-model-dt:multiplicityRange .

element:A_value_valuePin xmi:type uml:Association ;
	xmi:id "A_value_valuePin" ;
	uml-model:name "A_value_valuePin" .

element:A_value_valuePin-valuePin xmi:type uml:Property ;
	xmi:id "A_value_valuePin-valuePin" ;
	uml-model:name "valuePin" ;
	uml-model:type "ValuePin" ;
	uml-model:association uml-element:A_value_valuePin ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_result_unmarshallAction xmi:type uml:Association ;
	xmi:id "A_result_unmarshallAction" ;
	uml-model:name "A_result_unmarshallAction" .

element:A_result_unmarshallAction-unmarshallAction xmi:type uml:Property ;
	xmi:id "A_result_unmarshallAction-unmarshallAction" ;
	uml-model:name "unmarshallAction" ;
	uml-model:type "UnmarshallAction" ;
	uml-model:association uml-element:A_result_unmarshallAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_unmarshallType_unmarshallAction xmi:type uml:Association ;
	xmi:id "A_unmarshallType_unmarshallAction" ;
	uml-model:name "A_unmarshallType_unmarshallAction" .

element:A_unmarshallType_unmarshallAction-unmarshallAction xmi:type uml:Property ;
	xmi:id "A_unmarshallType_unmarshallAction-unmarshallAction" ;
	uml-model:name "unmarshallAction" ;
	uml-model:type "UnmarshallAction" ;
	uml-model:association uml-element:A_unmarshallType_unmarshallAction .

element:A_object_unmarshallAction xmi:type uml:Association ;
	xmi:id "A_object_unmarshallAction" ;
	uml-model:name "A_object_unmarshallAction" .

element:A_object_unmarshallAction-unmarshallAction xmi:type uml:Property ;
	xmi:id "A_object_unmarshallAction-unmarshallAction" ;
	uml-model:name "unmarshallAction" ;
	uml-model:type "UnmarshallAction" ;
	uml-model:association uml-element:A_object_unmarshallAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_first_testIdentityAction xmi:type uml:Association ;
	xmi:id "A_first_testIdentityAction" ;
	uml-model:name "A_first_testIdentityAction" .

element:A_first_testIdentityAction-testIdentityAction xmi:type uml:Property ;
	xmi:id "A_first_testIdentityAction-testIdentityAction" ;
	uml-model:name "testIdentityAction" ;
	uml-model:type "TestIdentityAction" ;
	uml-model:association uml-element:A_first_testIdentityAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_second_testIdentityAction xmi:type uml:Association ;
	xmi:id "A_second_testIdentityAction" ;
	uml-model:name "A_second_testIdentityAction" .

element:A_second_testIdentityAction-testIdentityAction xmi:type uml:Property ;
	xmi:id "A_second_testIdentityAction-testIdentityAction" ;
	uml-model:name "testIdentityAction" ;
	uml-model:type "TestIdentityAction" ;
	uml-model:association uml-element:A_second_testIdentityAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_result_testIdentityAction xmi:type uml:Association ;
	xmi:id "A_result_testIdentityAction" ;
	uml-model:name "A_result_testIdentityAction" .

element:A_result_testIdentityAction-testIdentityAction xmi:type uml:Property ;
	xmi:id "A_result_testIdentityAction-testIdentityAction" ;
	uml-model:name "testIdentityAction" ;
	uml-model:type "TestIdentityAction" ;
	uml-model:association uml-element:A_result_testIdentityAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_structuredNodeOutput_structuredActivityNode xmi:type uml:Association ;
	xmi:id "A_structuredNodeOutput_structuredActivityNode" ;
	uml-model:name "A_structuredNodeOutput_structuredActivityNode" .

element:A_structuredNodeOutput_structuredActivityNode-structuredActivityNode xmi:type uml:Property ;
	xmi:id "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode" ;
	uml-model:name "structuredActivityNode" ;
	uml-model:type "StructuredActivityNode" ;
	uml-model:association uml-element:A_structuredNodeOutput_structuredActivityNode ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_structuredNodeInput_structuredActivityNode xmi:type uml:Association ;
	xmi:id "A_structuredNodeInput_structuredActivityNode" ;
	uml-model:name "A_structuredNodeInput_structuredActivityNode" .

element:A_structuredNodeInput_structuredActivityNode-structuredActivityNode xmi:type uml:Property ;
	xmi:id "A_structuredNodeInput_structuredActivityNode-structuredActivityNode" ;
	uml-model:name "structuredActivityNode" ;
	uml-model:type "StructuredActivityNode" ;
	uml-model:association uml-element:A_structuredNodeInput_structuredActivityNode ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_edge_inStructuredNode xmi:type uml:Association ;
	xmi:id "A_edge_inStructuredNode" ;
	uml-model:name "A_edge_inStructuredNode" .

element:A_node_inStructuredNode xmi:type uml:Association ;
	xmi:id "A_node_inStructuredNode" ;
	uml-model:name "A_node_inStructuredNode" .

element:A_variable_scope xmi:type uml:Association ;
	xmi:id "A_variable_scope" ;
	uml-model:name "A_variable_scope" .

element:A_object_structuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_object_structuralFeatureAction" ;
	uml-model:name "A_object_structuralFeatureAction" .

element:A_object_structuralFeatureAction-structuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_object_structuralFeatureAction-structuralFeatureAction" ;
	uml-model:name "structuralFeatureAction" ;
	uml-model:type "StructuralFeatureAction" ;
	uml-model:association uml-element:A_object_structuralFeatureAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_structuralFeature_structuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_structuralFeature_structuralFeatureAction" ;
	uml-model:name "A_structuralFeature_structuralFeatureAction" .

element:A_structuralFeature_structuralFeatureAction-structuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_structuralFeature_structuralFeatureAction-structuralFeatureAction" ;
	uml-model:name "structuralFeatureAction" ;
	uml-model:type "StructuralFeatureAction" ;
	uml-model:association uml-element:A_structuralFeature_structuralFeatureAction .

element:A_object_startObjectBehaviorAction xmi:type uml:Association ;
	xmi:id "A_object_startObjectBehaviorAction" ;
	uml-model:name "A_object_startObjectBehaviorAction" .

element:A_object_startObjectBehaviorAction-startObjectBehaviorAction xmi:type uml:Property ;
	xmi:id "A_object_startObjectBehaviorAction-startObjectBehaviorAction" ;
	uml-model:name "startObjectBehaviorAction" ;
	uml-model:type "StartObjectBehaviorAction" ;
	uml-model:association uml-element:A_object_startObjectBehaviorAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_object_startClassifierBehaviorAction xmi:type uml:Association ;
	xmi:id "A_object_startClassifierBehaviorAction" ;
	uml-model:name "A_object_startClassifierBehaviorAction" .

element:A_object_startClassifierBehaviorAction-startClassifierBehaviorAction xmi:type uml:Property ;
	xmi:id "A_object_startClassifierBehaviorAction-startClassifierBehaviorAction" ;
	uml-model:name "startClassifierBehaviorAction" ;
	uml-model:type "StartClassifierBehaviorAction" ;
	uml-model:association uml-element:A_object_startClassifierBehaviorAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_executableNode_sequenceNode xmi:type uml:Association ;
	xmi:id "A_executableNode_sequenceNode" ;
	uml-model:name "A_executableNode_sequenceNode" .

element:A_executableNode_sequenceNode-sequenceNode xmi:type uml:Property ;
	xmi:id "A_executableNode_sequenceNode-sequenceNode" ;
	uml-model:name "sequenceNode" ;
	uml-model:type "SequenceNode" ;
	uml-model:association uml-element:A_executableNode_sequenceNode ;
	uml-model:subsettedProperty uml-element:ActivityNode-inStructuredNode .

element:A_signal_sendSignalAction xmi:type uml:Association ;
	xmi:id "A_signal_sendSignalAction" ;
	uml-model:name "A_signal_sendSignalAction" .

element:A_signal_sendSignalAction-sendSignalAction xmi:type uml:Property ;
	xmi:id "A_signal_sendSignalAction-sendSignalAction" ;
	uml-model:name "sendSignalAction" ;
	uml-model:type "SendSignalAction" ;
	uml-model:association uml-element:A_signal_sendSignalAction .

element:A_target_sendSignalAction xmi:type uml:Association ;
	xmi:id "A_target_sendSignalAction" ;
	uml-model:name "A_target_sendSignalAction" .

element:A_target_sendSignalAction-sendSignalAction xmi:type uml:Property ;
	xmi:id "A_target_sendSignalAction-sendSignalAction" ;
	uml-model:name "sendSignalAction" ;
	uml-model:type "SendSignalAction" ;
	uml-model:association uml-element:A_target_sendSignalAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_request_sendObjectAction xmi:type uml:Association ;
	xmi:id "A_request_sendObjectAction" ;
	uml-model:name "A_request_sendObjectAction" ;
	rdfs:subClassOf element:A_argument_invocationAction .

element:A_request_sendObjectAction-sendObjectAction xmi:type uml:Property ;
	xmi:id "A_request_sendObjectAction-sendObjectAction" ;
	uml-model:name "sendObjectAction" ;
	uml-model:type "SendObjectAction" ;
	uml-model:association uml-element:A_request_sendObjectAction .

element:A_target_sendObjectAction xmi:type uml:Association ;
	xmi:id "A_target_sendObjectAction" ;
	uml-model:name "A_target_sendObjectAction" .

element:A_target_sendObjectAction-sendObjectAction xmi:type uml:Property ;
	xmi:id "A_target_sendObjectAction-sendObjectAction" ;
	uml-model:name "sendObjectAction" ;
	uml-model:type "SendObjectAction" ;
	uml-model:association uml-element:A_target_sendObjectAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_returnInformation_replyAction xmi:type uml:Association ;
	xmi:id "A_returnInformation_replyAction" ;
	uml-model:name "A_returnInformation_replyAction" .

element:A_returnInformation_replyAction-replyAction xmi:type uml:Property ;
	xmi:id "A_returnInformation_replyAction-replyAction" ;
	uml-model:name "replyAction" ;
	uml-model:type "ReplyAction" ;
	uml-model:association uml-element:A_returnInformation_replyAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_replyToCall_replyAction xmi:type uml:Association ;
	xmi:id "A_replyToCall_replyAction" ;
	uml-model:name "A_replyToCall_replyAction" .

element:A_replyToCall_replyAction-replyAction xmi:type uml:Property ;
	xmi:id "A_replyToCall_replyAction-replyAction" ;
	uml-model:name "replyAction" ;
	uml-model:type "ReplyAction" ;
	uml-model:association uml-element:A_replyToCall_replyAction .

element:A_replyValue_replyAction xmi:type uml:Association ;
	xmi:id "A_replyValue_replyAction" ;
	uml-model:name "A_replyValue_replyAction" .

element:A_replyValue_replyAction-replyAction xmi:type uml:Property ;
	xmi:id "A_replyValue_replyAction-replyAction" ;
	uml-model:name "replyAction" ;
	uml-model:type "ReplyAction" ;
	uml-model:association uml-element:A_replyValue_replyAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_removeAt_removeVariableValueAction xmi:type uml:Association ;
	xmi:id "A_removeAt_removeVariableValueAction" ;
	uml-model:name "A_removeAt_removeVariableValueAction" .

element:A_removeAt_removeVariableValueAction-removeVariableValueAction xmi:type uml:Property ;
	xmi:id "A_removeAt_removeVariableValueAction-removeVariableValueAction" ;
	uml-model:name "removeVariableValueAction" ;
	uml-model:type "RemoveVariableValueAction" ;
	uml-model:association uml-element:A_removeAt_removeVariableValueAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_removeAt_removeStructuralFeatureValueAction xmi:type uml:Association ;
	xmi:id "A_removeAt_removeStructuralFeatureValueAction" ;
	uml-model:name "A_removeAt_removeStructuralFeatureValueAction" .

element:A_removeAt_removeStructuralFeatureValueAction-removeStructuralFeatureValueAction xmi:type uml:Property ;
	xmi:id "A_removeAt_removeStructuralFeatureValueAction-removeStructuralFeatureValueAction" ;
	uml-model:name "removeStructuralFeatureValueAction" ;
	uml-model:type "RemoveStructuralFeatureValueAction" ;
	uml-model:association uml-element:A_removeAt_removeStructuralFeatureValueAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_collection_reduceAction xmi:type uml:Association ;
	xmi:id "A_collection_reduceAction" ;
	uml-model:name "A_collection_reduceAction" .

element:A_collection_reduceAction-reduceAction xmi:type uml:Property ;
	xmi:id "A_collection_reduceAction-reduceAction" ;
	uml-model:name "reduceAction" ;
	uml-model:type "ReduceAction" ;
	uml-model:association uml-element:A_collection_reduceAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_reducer_reduceAction xmi:type uml:Association ;
	xmi:id "A_reducer_reduceAction" ;
	uml-model:name "A_reducer_reduceAction" .

element:A_reducer_reduceAction-reduceAction xmi:type uml:Property ;
	xmi:id "A_reducer_reduceAction-reduceAction" ;
	uml-model:name "reduceAction" ;
	uml-model:type "ReduceAction" ;
	uml-model:association uml-element:A_reducer_reduceAction .

element:A_result_reduceAction xmi:type uml:Association ;
	xmi:id "A_result_reduceAction" ;
	uml-model:name "A_result_reduceAction" .

element:A_result_reduceAction-reduceAction xmi:type uml:Property ;
	xmi:id "A_result_reduceAction-reduceAction" ;
	uml-model:name "reduceAction" ;
	uml-model:type "ReduceAction" ;
	uml-model:association uml-element:A_result_reduceAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_object_reclassifyObjectAction xmi:type uml:Association ;
	xmi:id "A_object_reclassifyObjectAction" ;
	uml-model:name "A_object_reclassifyObjectAction" .

element:A_object_reclassifyObjectAction-reclassifyObjectAction xmi:type uml:Property ;
	xmi:id "A_object_reclassifyObjectAction-reclassifyObjectAction" ;
	uml-model:name "reclassifyObjectAction" ;
	uml-model:type "ReclassifyObjectAction" ;
	uml-model:association uml-element:A_object_reclassifyObjectAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_newClassifier_reclassifyObjectAction xmi:type uml:Association ;
	xmi:id "A_newClassifier_reclassifyObjectAction" ;
	uml-model:name "A_newClassifier_reclassifyObjectAction" .

element:A_newClassifier_reclassifyObjectAction-reclassifyObjectAction xmi:type uml:Property ;
	xmi:id "A_newClassifier_reclassifyObjectAction-reclassifyObjectAction" ;
	uml-model:name "reclassifyObjectAction" ;
	uml-model:type "ReclassifyObjectAction" ;
	uml-model:association uml-element:A_newClassifier_reclassifyObjectAction .

element:A_oldClassifier_reclassifyObjectAction xmi:type uml:Association ;
	xmi:id "A_oldClassifier_reclassifyObjectAction" ;
	uml-model:name "A_oldClassifier_reclassifyObjectAction" .

element:A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction xmi:type uml:Property ;
	xmi:id "A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction" ;
	uml-model:name "reclassifyObjectAction" ;
	uml-model:type "ReclassifyObjectAction" ;
	uml-model:association uml-element:A_oldClassifier_reclassifyObjectAction .

element:A_result_readVariableAction xmi:type uml:Association ;
	xmi:id "A_result_readVariableAction" ;
	uml-model:name "A_result_readVariableAction" .

element:A_result_readVariableAction-readVariableAction xmi:type uml:Property ;
	xmi:id "A_result_readVariableAction-readVariableAction" ;
	uml-model:name "readVariableAction" ;
	uml-model:type "ReadVariableAction" ;
	uml-model:association uml-element:A_result_readVariableAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_result_readStructuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_result_readStructuralFeatureAction" ;
	uml-model:name "A_result_readStructuralFeatureAction" .

element:A_result_readStructuralFeatureAction-readStructuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_result_readStructuralFeatureAction-readStructuralFeatureAction" ;
	uml-model:name "readStructuralFeatureAction" ;
	uml-model:type "ReadStructuralFeatureAction" ;
	uml-model:association uml-element:A_result_readStructuralFeatureAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_result_readSelfAction xmi:type uml:Association ;
	xmi:id "A_result_readSelfAction" ;
	uml-model:name "A_result_readSelfAction" .

element:A_result_readSelfAction-readSelfAction xmi:type uml:Property ;
	xmi:id "A_result_readSelfAction-readSelfAction" ;
	uml-model:name "readSelfAction" ;
	uml-model:type "ReadSelfAction" ;
	uml-model:association uml-element:A_result_readSelfAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_qualifier_readLinkObjectEndQualifierAction xmi:type uml:Association ;
	xmi:id "A_qualifier_readLinkObjectEndQualifierAction" ;
	uml-model:name "A_qualifier_readLinkObjectEndQualifierAction" .

element:A_qualifier_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction xmi:type uml:Property ;
	xmi:id "A_qualifier_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction" ;
	uml-model:name "readLinkObjectEndQualifierAction" ;
	uml-model:type "ReadLinkObjectEndQualifierAction" ;
	uml-model:association uml-element:A_qualifier_readLinkObjectEndQualifierAction .

element:A_object_readLinkObjectEndQualifierAction xmi:type uml:Association ;
	xmi:id "A_object_readLinkObjectEndQualifierAction" ;
	uml-model:name "A_object_readLinkObjectEndQualifierAction" .

element:A_object_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction xmi:type uml:Property ;
	xmi:id "A_object_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction" ;
	uml-model:name "readLinkObjectEndQualifierAction" ;
	uml-model:type "ReadLinkObjectEndQualifierAction" ;
	uml-model:association uml-element:A_object_readLinkObjectEndQualifierAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_result_readLinkObjectEndQualifierAction xmi:type uml:Association ;
	xmi:id "A_result_readLinkObjectEndQualifierAction" ;
	uml-model:name "A_result_readLinkObjectEndQualifierAction" .

element:A_result_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction xmi:type uml:Property ;
	xmi:id "A_result_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction" ;
	uml-model:name "readLinkObjectEndQualifierAction" ;
	uml-model:type "ReadLinkObjectEndQualifierAction" ;
	uml-model:association uml-element:A_result_readLinkObjectEndQualifierAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_object_readLinkObjectEndAction xmi:type uml:Association ;
	xmi:id "A_object_readLinkObjectEndAction" ;
	uml-model:name "A_object_readLinkObjectEndAction" .

element:A_object_readLinkObjectEndAction-readLinkObjectEndAction xmi:type uml:Property ;
	xmi:id "A_object_readLinkObjectEndAction-readLinkObjectEndAction" ;
	uml-model:name "readLinkObjectEndAction" ;
	uml-model:type "ReadLinkObjectEndAction" ;
	uml-model:association uml-element:A_object_readLinkObjectEndAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_end_readLinkObjectEndAction xmi:type uml:Association ;
	xmi:id "A_end_readLinkObjectEndAction" ;
	uml-model:name "A_end_readLinkObjectEndAction" .

element:A_end_readLinkObjectEndAction-readLinkObjectEndAction xmi:type uml:Property ;
	xmi:id "A_end_readLinkObjectEndAction-readLinkObjectEndAction" ;
	uml-model:name "readLinkObjectEndAction" ;
	uml-model:type "ReadLinkObjectEndAction" ;
	uml-model:association uml-element:A_end_readLinkObjectEndAction .

element:A_result_readLinkObjectEndAction xmi:type uml:Association ;
	xmi:id "A_result_readLinkObjectEndAction" ;
	uml-model:name "A_result_readLinkObjectEndAction" .

element:A_result_readLinkObjectEndAction-readLinkObjectEndAction xmi:type uml:Property ;
	xmi:id "A_result_readLinkObjectEndAction-readLinkObjectEndAction" ;
	uml-model:name "readLinkObjectEndAction" ;
	uml-model:type "ReadLinkObjectEndAction" ;
	uml-model:association uml-element:A_result_readLinkObjectEndAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_result_readLinkAction xmi:type uml:Association ;
	xmi:id "A_result_readLinkAction" ;
	uml-model:name "A_result_readLinkAction" .

element:A_result_readLinkAction-readLinkAction xmi:type uml:Property ;
	xmi:id "A_result_readLinkAction-readLinkAction" ;
	uml-model:name "readLinkAction" ;
	uml-model:type "ReadLinkAction" ;
	uml-model:association uml-element:A_result_readLinkAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_classifier_readIsClassifiedObjectAction xmi:type uml:Association ;
	xmi:id "A_classifier_readIsClassifiedObjectAction" ;
	uml-model:name "A_classifier_readIsClassifiedObjectAction" .

element:A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction xmi:type uml:Property ;
	xmi:id "A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction" ;
	uml-model:name "readIsClassifiedObjectAction" ;
	uml-model:type "ReadIsClassifiedObjectAction" ;
	uml-model:association uml-element:A_classifier_readIsClassifiedObjectAction .

element:A_result_readIsClassifiedObjectAction xmi:type uml:Association ;
	xmi:id "A_result_readIsClassifiedObjectAction" ;
	uml-model:name "A_result_readIsClassifiedObjectAction" .

element:A_result_readIsClassifiedObjectAction-readIsClassifiedObjectAction xmi:type uml:Property ;
	xmi:id "A_result_readIsClassifiedObjectAction-readIsClassifiedObjectAction" ;
	uml-model:name "readIsClassifiedObjectAction" ;
	uml-model:type "ReadIsClassifiedObjectAction" ;
	uml-model:association uml-element:A_result_readIsClassifiedObjectAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_object_readIsClassifiedObjectAction xmi:type uml:Association ;
	xmi:id "A_object_readIsClassifiedObjectAction" ;
	uml-model:name "A_object_readIsClassifiedObjectAction" .

element:A_object_readIsClassifiedObjectAction-readIsClassifiedObjectAction xmi:type uml:Property ;
	xmi:id "A_object_readIsClassifiedObjectAction-readIsClassifiedObjectAction" ;
	uml-model:name "readIsClassifiedObjectAction" ;
	uml-model:type "ReadIsClassifiedObjectAction" ;
	uml-model:association uml-element:A_object_readIsClassifiedObjectAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_result_readExtentAction xmi:type uml:Association ;
	xmi:id "A_result_readExtentAction" ;
	uml-model:name "A_result_readExtentAction" .

element:A_result_readExtentAction-readExtentAction xmi:type uml:Property ;
	xmi:id "A_result_readExtentAction-readExtentAction" ;
	uml-model:name "readExtentAction" ;
	uml-model:type "ReadExtentAction" ;
	uml-model:association uml-element:A_result_readExtentAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_classifier_readExtentAction xmi:type uml:Association ;
	xmi:id "A_classifier_readExtentAction" ;
	uml-model:name "A_classifier_readExtentAction" .

element:A_classifier_readExtentAction-readExtentAction xmi:type uml:Property ;
	xmi:id "A_classifier_readExtentAction-readExtentAction" ;
	uml-model:name "readExtentAction" ;
	uml-model:type "ReadExtentAction" ;
	uml-model:association uml-element:A_classifier_readExtentAction .

element:A_exception_raiseExceptionAction xmi:type uml:Association ;
	xmi:id "A_exception_raiseExceptionAction" ;
	uml-model:name "A_exception_raiseExceptionAction" .

element:A_exception_raiseExceptionAction-raiseExceptionAction xmi:type uml:Property ;
	xmi:id "A_exception_raiseExceptionAction-raiseExceptionAction" ;
	uml-model:name "raiseExceptionAction" ;
	uml-model:type "RaiseExceptionAction" ;
	uml-model:association uml-element:A_exception_raiseExceptionAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_qualifier_qualifierValue xmi:type uml:Association ;
	xmi:id "A_qualifier_qualifierValue" ;
	uml-model:name "A_qualifier_qualifierValue" .

element:A_qualifier_qualifierValue-qualifierValue xmi:type uml:Property ;
	xmi:id "A_qualifier_qualifierValue-qualifierValue" ;
	uml-model:name "qualifierValue" ;
	uml-model:type "QualifierValue" ;
	uml-model:association uml-element:A_qualifier_qualifierValue .

element:A_value_qualifierValue xmi:type uml:Association ;
	xmi:id "A_value_qualifierValue" ;
	uml-model:name "A_value_qualifierValue" .

element:A_value_qualifierValue-qualifierValue xmi:type uml:Property ;
	xmi:id "A_value_qualifierValue-qualifierValue" ;
	uml-model:name "qualifierValue" ;
	uml-model:type "QualifierValue" ;
	uml-model:association uml-element:A_value_qualifierValue .

element:A_outputValue_opaqueAction xmi:type uml:Association ;
	xmi:id "A_outputValue_opaqueAction" ;
	uml-model:name "A_outputValue_opaqueAction" .

element:A_outputValue_opaqueAction-opaqueAction xmi:type uml:Property ;
	xmi:id "A_outputValue_opaqueAction-opaqueAction" ;
	uml-model:name "opaqueAction" ;
	uml-model:type "OpaqueAction" ;
	uml-model:association uml-element:A_outputValue_opaqueAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_inputValue_opaqueAction xmi:type uml:Association ;
	xmi:id "A_inputValue_opaqueAction" ;
	uml-model:name "A_inputValue_opaqueAction" .

element:A_inputValue_opaqueAction-opaqueAction xmi:type uml:Property ;
	xmi:id "A_inputValue_opaqueAction-opaqueAction" ;
	uml-model:name "opaqueAction" ;
	uml-model:type "OpaqueAction" ;
	uml-model:association uml-element:A_inputValue_opaqueAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_setupPart_loopNode xmi:type uml:Association ;
	xmi:id "A_setupPart_loopNode" ;
	uml-model:name "A_setupPart_loopNode" .

element:A_setupPart_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_setupPart_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_setupPart_loopNode .

element:A_bodyPart_loopNode xmi:type uml:Association ;
	xmi:id "A_bodyPart_loopNode" ;
	uml-model:name "A_bodyPart_loopNode" .

element:A_bodyPart_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_bodyPart_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_bodyPart_loopNode .

element:A_loopVariable_loopNode xmi:type uml:Association ;
	xmi:id "A_loopVariable_loopNode" ;
	uml-model:name "A_loopVariable_loopNode" .

element:A_loopVariable_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_loopVariable_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_loopVariable_loopNode ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_result_loopNode xmi:type uml:Association ;
	xmi:id "A_result_loopNode" ;
	uml-model:name "A_result_loopNode" .

element:A_result_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_result_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_result_loopNode ;
	uml-model:subsettedProperty uml-element:A_structuredNodeOutput_structuredActivityNode-structuredActivityNode .

element:A_bodyOutput_loopNode xmi:type uml:Association ;
	xmi:id "A_bodyOutput_loopNode" ;
	uml-model:name "A_bodyOutput_loopNode" .

element:A_bodyOutput_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_bodyOutput_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_bodyOutput_loopNode .

element:A_loopVariableInput_loopNode xmi:type uml:Association ;
	xmi:id "A_loopVariableInput_loopNode" ;
	uml-model:name "A_loopVariableInput_loopNode" .

element:A_loopVariableInput_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_loopVariableInput_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_loopVariableInput_loopNode ;
	uml-model:subsettedProperty uml-element:A_structuredNodeInput_structuredActivityNode-structuredActivityNode .

element:A_test_loopNode xmi:type uml:Association ;
	xmi:id "A_test_loopNode" ;
	uml-model:name "A_test_loopNode" .

element:A_test_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_test_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_test_loopNode .

element:A_decider_loopNode xmi:type uml:Association ;
	xmi:id "A_decider_loopNode" ;
	uml-model:name "A_decider_loopNode" .

element:A_decider_loopNode-loopNode xmi:type uml:Property ;
	xmi:id "A_decider_loopNode-loopNode" ;
	uml-model:name "loopNode" ;
	uml-model:type "LoopNode" ;
	uml-model:association uml-element:A_decider_loopNode .

element:A_destroyAt_linkEndDestructionData xmi:type uml:Association ;
	xmi:id "A_destroyAt_linkEndDestructionData" ;
	uml-model:name "A_destroyAt_linkEndDestructionData" .

element:A_destroyAt_linkEndDestructionData-linkEndDestructionData xmi:type uml:Property ;
	xmi:id "A_destroyAt_linkEndDestructionData-linkEndDestructionData" ;
	uml-model:name "linkEndDestructionData" ;
	uml-model:type "LinkEndDestructionData" ;
	uml-model:association uml-element:A_destroyAt_linkEndDestructionData .

element:A_value_linkEndData xmi:type uml:Association ;
	xmi:id "A_value_linkEndData" ;
	uml-model:name "A_value_linkEndData" .

element:A_value_linkEndData-linkEndData xmi:type uml:Property ;
	xmi:id "A_value_linkEndData-linkEndData" ;
	uml-model:name "linkEndData" ;
	uml-model:type "LinkEndData" ;
	uml-model:association uml-element:A_value_linkEndData .

element:A_end_linkEndData xmi:type uml:Association ;
	xmi:id "A_end_linkEndData" ;
	uml-model:name "A_end_linkEndData" .

element:A_end_linkEndData-linkEndData xmi:type uml:Property ;
	xmi:id "A_end_linkEndData-linkEndData" ;
	uml-model:name "linkEndData" ;
	uml-model:type "LinkEndData" ;
	uml-model:association uml-element:A_end_linkEndData .

element:A_qualifier_linkEndData xmi:type uml:Association ;
	xmi:id "A_qualifier_linkEndData" ;
	uml-model:name "A_qualifier_linkEndData" .

element:A_qualifier_linkEndData-linkEndData xmi:type uml:Property ;
	xmi:id "A_qualifier_linkEndData-linkEndData" ;
	uml-model:name "linkEndData" ;
	uml-model:type "LinkEndData" ;
	uml-model:association uml-element:A_qualifier_linkEndData ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_insertAt_linkEndCreationData xmi:type uml:Association ;
	xmi:id "A_insertAt_linkEndCreationData" ;
	uml-model:name "A_insertAt_linkEndCreationData" .

element:A_insertAt_linkEndCreationData-linkEndCreationData xmi:type uml:Property ;
	xmi:id "A_insertAt_linkEndCreationData-linkEndCreationData" ;
	uml-model:name "linkEndCreationData" ;
	uml-model:type "LinkEndCreationData" ;
	uml-model:association uml-element:A_insertAt_linkEndCreationData .

element:A_inputValue_linkAction xmi:type uml:Association ;
	xmi:id "A_inputValue_linkAction" ;
	uml-model:name "A_inputValue_linkAction" .

element:A_inputValue_linkAction-linkAction xmi:type uml:Property ;
	xmi:id "A_inputValue_linkAction-linkAction" ;
	uml-model:name "linkAction" ;
	uml-model:type "LinkAction" ;
	uml-model:association uml-element:A_inputValue_linkAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_endData_linkAction xmi:type uml:Association ;
	xmi:id "A_endData_linkAction" ;
	uml-model:name "A_endData_linkAction" .

element:A_endData_linkAction-linkAction xmi:type uml:Property ;
	xmi:id "A_endData_linkAction-linkAction" ;
	uml-model:name "linkAction" ;
	uml-model:type "LinkAction" ;
	uml-model:association uml-element:A_endData_linkAction ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_argument_invocationAction xmi:type uml:Association ;
	xmi:id "A_argument_invocationAction" ;
	uml-model:name "A_argument_invocationAction" .

element:A_argument_invocationAction-invocationAction xmi:type uml:Property ;
	xmi:id "A_argument_invocationAction-invocationAction" ;
	uml-model:name "invocationAction" ;
	uml-model:type "InvocationAction" ;
	uml-model:association uml-element:A_argument_invocationAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_onPort_invocationAction xmi:type uml:Association ;
	xmi:id "A_onPort_invocationAction" ;
	uml-model:name "A_onPort_invocationAction" .

element:A_onPort_invocationAction-invocationAction xmi:type uml:Property ;
	xmi:id "A_onPort_invocationAction-invocationAction" ;
	uml-model:name "invocationAction" ;
	uml-model:type "InvocationAction" ;
	uml-model:association uml-element:A_onPort_invocationAction .

element:A_inputElement_regionAsInput xmi:type uml:Association ;
	xmi:id "A_inputElement_regionAsInput" ;
	uml-model:name "A_inputElement_regionAsInput" .

element:A_outputElement_regionAsOutput xmi:type uml:Association ;
	xmi:id "A_outputElement_regionAsOutput" ;
	uml-model:name "A_outputElement_regionAsOutput" .

element:A_target_destroyObjectAction xmi:type uml:Association ;
	xmi:id "A_target_destroyObjectAction" ;
	uml-model:name "A_target_destroyObjectAction" .

element:A_target_destroyObjectAction-destroyObjectAction xmi:type uml:Property ;
	xmi:id "A_target_destroyObjectAction-destroyObjectAction" ;
	uml-model:name "destroyObjectAction" ;
	uml-model:type "DestroyObjectAction" ;
	uml-model:association uml-element:A_target_destroyObjectAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_endData_destroyLinkAction xmi:type uml:Association ;
	xmi:id "A_endData_destroyLinkAction" ;
	uml-model:name "A_endData_destroyLinkAction" ;
	rdfs:subClassOf element:A_endData_linkAction .

element:A_endData_destroyLinkAction-destroyLinkAction xmi:type uml:Property ;
	xmi:id "A_endData_destroyLinkAction-destroyLinkAction" ;
	uml-model:name "destroyLinkAction" ;
	uml-model:type "DestroyLinkAction" ;
	uml-model:association uml-element:A_endData_destroyLinkAction .

element:A_classifier_createObjectAction xmi:type uml:Association ;
	xmi:id "A_classifier_createObjectAction" ;
	uml-model:name "A_classifier_createObjectAction" .

element:A_classifier_createObjectAction-createObjectAction xmi:type uml:Property ;
	xmi:id "A_classifier_createObjectAction-createObjectAction" ;
	uml-model:name "createObjectAction" ;
	uml-model:type "CreateObjectAction" ;
	uml-model:association uml-element:A_classifier_createObjectAction .

element:A_result_createObjectAction xmi:type uml:Association ;
	xmi:id "A_result_createObjectAction" ;
	uml-model:name "A_result_createObjectAction" .

element:A_result_createObjectAction-createObjectAction xmi:type uml:Property ;
	xmi:id "A_result_createObjectAction-createObjectAction" ;
	uml-model:name "createObjectAction" ;
	uml-model:type "CreateObjectAction" ;
	uml-model:association uml-element:A_result_createObjectAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_result_createLinkObjectAction xmi:type uml:Association ;
	xmi:id "A_result_createLinkObjectAction" ;
	uml-model:name "A_result_createLinkObjectAction" .

element:A_result_createLinkObjectAction-createLinkObjectAction xmi:type uml:Property ;
	xmi:id "A_result_createLinkObjectAction-createLinkObjectAction" ;
	uml-model:name "createLinkObjectAction" ;
	uml-model:type "CreateLinkObjectAction" ;
	uml-model:association uml-element:A_result_createLinkObjectAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_endData_createLinkAction xmi:type uml:Association ;
	xmi:id "A_endData_createLinkAction" ;
	uml-model:name "A_endData_createLinkAction" ;
	rdfs:subClassOf element:A_endData_linkAction .

element:A_endData_createLinkAction-createLinkAction xmi:type uml:Property ;
	xmi:id "A_endData_createLinkAction-createLinkAction" ;
	uml-model:name "createLinkAction" ;
	uml-model:type "CreateLinkAction" ;
	uml-model:association uml-element:A_endData_createLinkAction .

element:A_clause_conditionalNode xmi:type uml:Association ;
	xmi:id "A_clause_conditionalNode" ;
	uml-model:name "A_clause_conditionalNode" .

element:A_clause_conditionalNode-conditionalNode xmi:type uml:Property ;
	xmi:id "A_clause_conditionalNode-conditionalNode" ;
	uml-model:name "conditionalNode" ;
	uml-model:type "ConditionalNode" ;
	uml-model:association uml-element:A_clause_conditionalNode ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_result_conditionalNode xmi:type uml:Association ;
	xmi:id "A_result_conditionalNode" ;
	uml-model:name "A_result_conditionalNode" .

element:A_result_conditionalNode-conditionalNode xmi:type uml:Property ;
	xmi:id "A_result_conditionalNode-conditionalNode" ;
	uml-model:name "conditionalNode" ;
	uml-model:type "ConditionalNode" ;
	uml-model:association uml-element:A_result_conditionalNode ;
	uml-model:subsettedProperty uml-element:A_structuredNodeOutput_structuredActivityNode-structuredActivityNode .

element:A_result_clearStructuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_result_clearStructuralFeatureAction" ;
	uml-model:name "A_result_clearStructuralFeatureAction" .

element:A_result_clearStructuralFeatureAction-clearStructuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_result_clearStructuralFeatureAction-clearStructuralFeatureAction" ;
	uml-model:name "clearStructuralFeatureAction" ;
	uml-model:type "ClearStructuralFeatureAction" ;
	uml-model:association uml-element:A_result_clearStructuralFeatureAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_object_clearAssociationAction xmi:type uml:Association ;
	xmi:id "A_object_clearAssociationAction" ;
	uml-model:name "A_object_clearAssociationAction" .

element:A_object_clearAssociationAction-clearAssociationAction xmi:type uml:Property ;
	xmi:id "A_object_clearAssociationAction-clearAssociationAction" ;
	uml-model:name "clearAssociationAction" ;
	uml-model:type "ClearAssociationAction" ;
	uml-model:association uml-element:A_object_clearAssociationAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_association_clearAssociationAction xmi:type uml:Association ;
	xmi:id "A_association_clearAssociationAction" ;
	uml-model:name "A_association_clearAssociationAction" .

element:A_association_clearAssociationAction-clearAssociationAction xmi:type uml:Property ;
	xmi:id "A_association_clearAssociationAction-clearAssociationAction" ;
	uml-model:name "clearAssociationAction" ;
	uml-model:type "ClearAssociationAction" ;
	uml-model:association uml-element:A_association_clearAssociationAction .

element:A_decider_clause xmi:type uml:Association ;
	xmi:id "A_decider_clause" ;
	uml-model:name "A_decider_clause" .

element:A_decider_clause-clause xmi:type uml:Property ;
	xmi:id "A_decider_clause-clause" ;
	uml-model:name "clause" ;
	uml-model:type "Clause" ;
	uml-model:association uml-element:A_decider_clause .

element:A_bodyOutput_clause xmi:type uml:Association ;
	xmi:id "A_bodyOutput_clause" ;
	uml-model:name "A_bodyOutput_clause" .

element:A_bodyOutput_clause-clause xmi:type uml:Property ;
	xmi:id "A_bodyOutput_clause-clause" ;
	uml-model:name "clause" ;
	uml-model:type "Clause" ;
	uml-model:association uml-element:A_bodyOutput_clause .

element:A_test_clause xmi:type uml:Association ;
	xmi:id "A_test_clause" ;
	uml-model:name "A_test_clause" .

element:A_test_clause-clause xmi:type uml:Property ;
	xmi:id "A_test_clause-clause" ;
	uml-model:name "clause" ;
	uml-model:type "Clause" ;
	uml-model:association uml-element:A_test_clause .

element:A_body_clause xmi:type uml:Association ;
	xmi:id "A_body_clause" ;
	uml-model:name "A_body_clause" .

element:A_body_clause-clause xmi:type uml:Property ;
	xmi:id "A_body_clause-clause" ;
	uml-model:name "clause" ;
	uml-model:type "Clause" ;
	uml-model:association uml-element:A_body_clause .

element:A_predecessorClause_successorClause xmi:type uml:Association ;
	xmi:id "A_predecessorClause_successorClause" ;
	uml-model:name "A_predecessorClause_successorClause" .

element:A_target_callOperationAction xmi:type uml:Association ;
	xmi:id "A_target_callOperationAction" ;
	uml-model:name "A_target_callOperationAction" .

element:A_target_callOperationAction-callOperationAction xmi:type uml:Property ;
	xmi:id "A_target_callOperationAction-callOperationAction" ;
	uml-model:name "callOperationAction" ;
	uml-model:type "CallOperationAction" ;
	uml-model:association uml-element:A_target_callOperationAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_operation_callOperationAction xmi:type uml:Association ;
	xmi:id "A_operation_callOperationAction" ;
	uml-model:name "A_operation_callOperationAction" .

element:A_operation_callOperationAction-callOperationAction xmi:type uml:Property ;
	xmi:id "A_operation_callOperationAction-callOperationAction" ;
	uml-model:name "callOperationAction" ;
	uml-model:type "CallOperationAction" ;
	uml-model:association uml-element:A_operation_callOperationAction .

element:A_behavior_callBehaviorAction xmi:type uml:Association ;
	xmi:id "A_behavior_callBehaviorAction" ;
	uml-model:name "A_behavior_callBehaviorAction" .

element:A_behavior_callBehaviorAction-callBehaviorAction xmi:type uml:Property ;
	xmi:id "A_behavior_callBehaviorAction-callBehaviorAction" ;
	uml-model:name "callBehaviorAction" ;
	uml-model:type "CallBehaviorAction" ;
	uml-model:association uml-element:A_behavior_callBehaviorAction .

element:A_result_callAction xmi:type uml:Association ;
	xmi:id "A_result_callAction" ;
	uml-model:name "A_result_callAction" .

element:A_result_callAction-callAction xmi:type uml:Property ;
	xmi:id "A_result_callAction-callAction" ;
	uml-model:name "callAction" ;
	uml-model:type "CallAction" ;
	uml-model:association uml-element:A_result_callAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_signal_broadcastSignalAction xmi:type uml:Association ;
	xmi:id "A_signal_broadcastSignalAction" ;
	uml-model:name "A_signal_broadcastSignalAction" .

element:A_signal_broadcastSignalAction-broadcastSignalAction xmi:type uml:Property ;
	xmi:id "A_signal_broadcastSignalAction-broadcastSignalAction" ;
	uml-model:name "broadcastSignalAction" ;
	uml-model:type "BroadcastSignalAction" ;
	uml-model:association uml-element:A_signal_broadcastSignalAction .

element:A_insertAt_addVariableValueAction xmi:type uml:Association ;
	xmi:id "A_insertAt_addVariableValueAction" ;
	uml-model:name "A_insertAt_addVariableValueAction" .

element:A_insertAt_addVariableValueAction-addVariableValueAction xmi:type uml:Property ;
	xmi:id "A_insertAt_addVariableValueAction-addVariableValueAction" ;
	uml-model:name "addVariableValueAction" ;
	uml-model:type "AddVariableValueAction" ;
	uml-model:association uml-element:A_insertAt_addVariableValueAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_insertAt_addStructuralFeatureValueAction xmi:type uml:Association ;
	xmi:id "A_insertAt_addStructuralFeatureValueAction" ;
	uml-model:name "A_insertAt_addStructuralFeatureValueAction" .

element:A_insertAt_addStructuralFeatureValueAction-addStructuralFeatureValueAction xmi:type uml:Property ;
	xmi:id "A_insertAt_addStructuralFeatureValueAction-addStructuralFeatureValueAction" ;
	uml-model:name "addStructuralFeatureValueAction" ;
	uml-model:type "AddStructuralFeatureValueAction" ;
	uml-model:association uml-element:A_insertAt_addStructuralFeatureValueAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_fromAction_actionInputPin xmi:type uml:Association ;
	xmi:id "A_fromAction_actionInputPin" ;
	uml-model:name "A_fromAction_actionInputPin" .

element:A_fromAction_actionInputPin-actionInputPin xmi:type uml:Property ;
	xmi:id "A_fromAction_actionInputPin-actionInputPin" ;
	uml-model:name "actionInputPin" ;
	uml-model:type "ActionInputPin" ;
	uml-model:association uml-element:A_fromAction_actionInputPin ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_output_action xmi:type uml:Association ;
	xmi:id "A_output_action" ;
	uml-model:name "A_output_action" .

element:A_output_action-action xmi:type uml:Property ;
	xmi:id "A_output_action-action" ;
	uml-model:name "action" ;
	uml-model:type "Action" ;
	uml-model:association uml-element:A_output_action ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_context_action xmi:type uml:Association ;
	xmi:id "A_context_action" ;
	uml-model:name "A_context_action" .

element:A_context_action-action xmi:type uml:Property ;
	xmi:id "A_context_action-action" ;
	uml-model:name "action" ;
	uml-model:type "Action" ;
	uml-model:association uml-element:A_context_action .

element:A_input_action xmi:type uml:Association ;
	xmi:id "A_input_action" ;
	uml-model:name "A_input_action" .

element:A_input_action-action xmi:type uml:Property ;
	xmi:id "A_input_action-action" ;
	uml-model:name "action" ;
	uml-model:type "Action" ;
	uml-model:association uml-element:A_input_action ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_localPrecondition_action xmi:type uml:Association ;
	xmi:id "A_localPrecondition_action" ;
	uml-model:name "A_localPrecondition_action" .

element:A_localPrecondition_action-action xmi:type uml:Property ;
	xmi:id "A_localPrecondition_action-action" ;
	uml-model:name "action" ;
	uml-model:type "Action" ;
	uml-model:association uml-element:A_localPrecondition_action ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_localPostcondition_action xmi:type uml:Association ;
	xmi:id "A_localPostcondition_action" ;
	uml-model:name "A_localPostcondition_action" .

element:A_localPostcondition_action-action xmi:type uml:Property ;
	xmi:id "A_localPostcondition_action-action" ;
	uml-model:name "action" ;
	uml-model:type "Action" ;
	uml-model:association uml-element:A_localPostcondition_action ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_trigger_acceptEventAction xmi:type uml:Association ;
	xmi:id "A_trigger_acceptEventAction" ;
	uml-model:name "A_trigger_acceptEventAction" .

element:A_trigger_acceptEventAction-acceptEventAction xmi:type uml:Property ;
	xmi:id "A_trigger_acceptEventAction-acceptEventAction" ;
	uml-model:name "acceptEventAction" ;
	uml-model:type "AcceptEventAction" ;
	uml-model:association uml-element:A_trigger_acceptEventAction ;
	uml-model:subsettedProperty uml-element:Element-owner .

element:A_result_acceptEventAction xmi:type uml:Association ;
	xmi:id "A_result_acceptEventAction" ;
	uml-model:name "A_result_acceptEventAction" .

element:A_result_acceptEventAction-acceptEventAction xmi:type uml:Property ;
	xmi:id "A_result_acceptEventAction-acceptEventAction" ;
	uml-model:name "acceptEventAction" ;
	uml-model:type "AcceptEventAction" ;
	uml-model:association uml-element:A_result_acceptEventAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_returnInformation_acceptCallAction xmi:type uml:Association ;
	xmi:id "A_returnInformation_acceptCallAction" ;
	uml-model:name "A_returnInformation_acceptCallAction" .

element:A_returnInformation_acceptCallAction-acceptCallAction xmi:type uml:Property ;
	xmi:id "A_returnInformation_acceptCallAction-acceptCallAction" ;
	uml-model:name "acceptCallAction" ;
	uml-model:type "AcceptCallAction" ;
	uml-model:association uml-element:A_returnInformation_acceptCallAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_value_writeVariableAction xmi:type uml:Association ;
	xmi:id "A_value_writeVariableAction" ;
	uml-model:name "A_value_writeVariableAction" .

element:A_value_writeVariableAction-writeVariableAction xmi:type uml:Property ;
	xmi:id "A_value_writeVariableAction-writeVariableAction" ;
	uml-model:name "writeVariableAction" ;
	uml-model:type "WriteVariableAction" ;
	uml-model:association uml-element:A_value_writeVariableAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_result_writeStructuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_result_writeStructuralFeatureAction" ;
	uml-model:name "A_result_writeStructuralFeatureAction" .

element:A_result_writeStructuralFeatureAction-writeStructuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_result_writeStructuralFeatureAction-writeStructuralFeatureAction" ;
	uml-model:name "writeStructuralFeatureAction" ;
	uml-model:type "WriteStructuralFeatureAction" ;
	uml-model:association uml-element:A_result_writeStructuralFeatureAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_value_writeStructuralFeatureAction xmi:type uml:Association ;
	xmi:id "A_value_writeStructuralFeatureAction" ;
	uml-model:name "A_value_writeStructuralFeatureAction" .

element:A_value_writeStructuralFeatureAction-writeStructuralFeatureAction xmi:type uml:Property ;
	xmi:id "A_value_writeStructuralFeatureAction-writeStructuralFeatureAction" ;
	uml-model:name "writeStructuralFeatureAction" ;
	uml-model:type "WriteStructuralFeatureAction" ;
	uml-model:association uml-element:A_value_writeStructuralFeatureAction ;
	uml-model:subsettedProperty uml-element:A_input_action-action .

element:A_variable_variableAction xmi:type uml:Association ;
	xmi:id "A_variable_variableAction" ;
	uml-model:name "A_variable_variableAction" .

element:A_variable_variableAction-variableAction xmi:type uml:Property ;
	xmi:id "A_variable_variableAction-variableAction" ;
	uml-model:name "variableAction" ;
	uml-model:type "VariableAction" ;
	uml-model:association uml-element:A_variable_variableAction .

element:A_result_valueSpecificationAction xmi:type uml:Association ;
	xmi:id "A_result_valueSpecificationAction" ;
	uml-model:name "A_result_valueSpecificationAction" .

element:A_result_valueSpecificationAction-valueSpecificationAction xmi:type uml:Property ;
	xmi:id "A_result_valueSpecificationAction-valueSpecificationAction" ;
	uml-model:name "valueSpecificationAction" ;
	uml-model:type "ValueSpecificationAction" ;
	uml-model:association uml-element:A_result_valueSpecificationAction ;
	uml-model:subsettedProperty uml-element:A_output_action-action .

element:A_value_valueSpecificationAction xmi:type uml:Association ;
	xmi:id "A_value_valueSpecificationAction" ;
	uml-model:name "A_value_valueSpecificationAction" .

element:A_value_valueSpecificationAction-valueSpecificationAction xmi:type uml:Property ;
	xmi:id "A_value_valueSpecificationAction-valueSpecificationAction" ;
	uml-model:name "valueSpecificationAction" ;
	uml-model:type "ValueSpecificationAction" ;
	uml-model:association uml-element:A_value_valueSpecificationAction ;
	uml-model:subsettedProperty uml-element:Element-owner .

